/***

    MochiKit.MochiKit 1.4 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

***/

if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Base");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.Base)=="undefined"){
MochiKit.Base={};
}
if(typeof (MochiKit.__export__)=="undefined"){
MochiKit.__export__=(MochiKit.__compat__||(typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined"));
}
MochiKit.Base.VERSION="1.4";
MochiKit.Base.NAME="MochiKit.Base";
MochiKit.Base.update=function(_1,_2){
if(_1===null){
_1={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
_1[k]=o[k];
}
}
}
return _1;
};
MochiKit.Base.update(MochiKit.Base,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},camelize:function(_6){
var _7=_6.split("-");
var cc=_7[0];
for(var i=1;i<_7.length;i++){
cc+=_7[i].charAt(0).toUpperCase()+_7[i].substring(1);
}
return cc;
},counter:function(n){
if(arguments.length===0){
n=1;
}
return function(){
return n++;
};
},clone:function(_b){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=_b;
return new me();
}
},_flattenArray:function(_d,_e){
for(var i=0;i<_e.length;i++){
var o=_e[i];
if(o instanceof Array){
arguments.callee(_d,o);
}else{
_d.push(o);
}
}
return _d;
},flattenArray:function(lst){
return MochiKit.Base._flattenArray([],lst);
},flattenArguments:function(lst){
var res=[];
var m=MochiKit.Base;
var _15=m.extend(null,arguments);
while(_15.length){
var o=_15.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
for(var i=o.length-1;i>=0;i--){
_15.unshift(o[i]);
}
}else{
res.push(o);
}
}
return res;
},extend:function(_18,obj,_1a){
if(!_1a){
_1a=0;
}
if(obj){
var l=obj.length;
if(typeof (l)!="number"){
if(typeof (MochiKit.Iter)!="undefined"){
obj=MochiKit.Iter.list(obj);
l=obj.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_18){
_18=[];
}
for(var i=_1a;i<l;i++){
_18.push(obj[i]);
}
}
return _18;
},updatetree:function(_1d,obj){
if(_1d===null){
_1d={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
var v=o[k];
if(typeof (_1d[k])=="object"&&typeof (v)=="object"){
arguments.callee(_1d[k],v);
}else{
_1d[k]=v;
}
}
}
}
return _1d;
},setdefault:function(_23,obj){
if(_23===null){
_23={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _23)){
_23[k]=o[k];
}
}
}
return _23;
},keys:function(obj){
var _29=[];
for(var _2a in obj){
_29.push(_2a);
}
return _29;
},values:function(obj){
var _2c=[];
for(var _2d in obj){
_2c.push(obj[_2d]);
}
return _2c;
},items:function(obj){
var _2f=[];
var e;
for(var _31 in obj){
var v;
try{
v=obj[_31];
}
catch(e){
continue;
}
_2f.push([_31,v]);
}
return _2f;
},_newNamedError:function(_33,_34,_35){
_35.prototype=new MochiKit.Base.NamedError(_33.NAME+"."+_34);
_33[_34]=_35;
},operator:{truth:function(a){
return !!a;
},lognot:function(a){
return !a;
},identity:function(a){
return a;
},not:function(a){
return ~a;
},neg:function(a){
return -a;
},add:function(a,b){
return a+b;
},sub:function(a,b){
return a-b;
},div:function(a,b){
return a/b;
},mod:function(a,b){
return a%b;
},mul:function(a,b){
return a*b;
},and:function(a,b){
return a&b;
},or:function(a,b){
return a|b;
},xor:function(a,b){
return a^b;
},lshift:function(a,b){
return a<<b;
},rshift:function(a,b){
return a>>b;
},zrshift:function(a,b){
return a>>>b;
},eq:function(a,b){
return a==b;
},ne:function(a,b){
return a!=b;
},gt:function(a,b){
return a>b;
},ge:function(a,b){
return a>=b;
},lt:function(a,b){
return a<b;
},le:function(a,b){
return a<=b;
},seq:function(a,b){
return a===b;
},sne:function(a,b){
return a!==b;
},ceq:function(a,b){
return MochiKit.Base.compare(a,b)===0;
},cne:function(a,b){
return MochiKit.Base.compare(a,b)!==0;
},cgt:function(a,b){
return MochiKit.Base.compare(a,b)==1;
},cge:function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},clt:function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},cle:function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},logand:function(a,b){
return a&&b;
},logor:function(a,b){
return a||b;
},contains:function(a,b){
return b in a;
}},forwardCall:function(_73){
return function(){
return this[_73].apply(this,arguments);
};
},itemgetter:function(_74){
return function(arg){
return arg[_74];
};
},typeMatcher:function(){
var _76={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_76[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _76)){
return false;
}
}
return true;
};
},isNull:function(){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!==null){
return false;
}
}
return true;
},isUndefinedOrNull:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o===null)){
return false;
}
}
return true;
},isEmpty:function(obj){
return !MochiKit.Base.isNotEmpty.apply(this,arguments);
},isNotEmpty:function(obj){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
},isArrayLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o===null||typeof (o.length)!="number"||o.nodeType===3){
return false;
}
}
return true;
},isDateLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||o===null||typeof (o.getTime)!="function"){
return false;
}
}
return true;
},xmap:function(fn){
if(fn===null){
return MochiKit.Base.extend(null,arguments,1);
}
var _87=[];
for(var i=1;i<arguments.length;i++){
_87.push(fn(arguments[i]));
}
return _87;
},map:function(fn,lst){
var m=MochiKit.Base;
var itr=MochiKit.Iter;
var _8d=m.isArrayLike;
if(arguments.length<=2){
if(!_8d(lst)){
if(itr){
lst=itr.list(lst);
if(fn===null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
return m.extend(null,lst);
}
var _8e=[];
for(var i=0;i<lst.length;i++){
_8e.push(fn(lst[i]));
}
return _8e;
}else{
if(fn===null){
fn=Array;
}
var _90=null;
for(i=1;i<arguments.length;i++){
if(!_8d(arguments[i])){
if(itr){
return itr.list(itr.imap.apply(null,arguments));
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_90===null||_90>l){
_90=l;
}
}
_8e=[];
for(i=0;i<_90;i++){
var _92=[];
for(var j=1;j<arguments.length;j++){
_92.push(arguments[j][i]);
}
_8e.push(fn.apply(this,_92));
}
return _8e;
}
},xfilter:function(fn){
var _95=[];
if(fn===null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_95.push(o);
}
}
return _95;
},filter:function(fn,lst,_9a){
var _9b=[];
var m=MochiKit.Base;
if(!m.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
fn=m.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,_9a);
}else{
if(typeof (_9a)=="undefined"||_9a===null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
_9b.push(o);
}
}
}else{
for(i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(_9a,o)){
_9b.push(o);
}
}
}
}
return _9b;
},_wrapDumbFunction:function(_9f){
return function(){
switch(arguments.length){
case 0:
return _9f();
case 1:
return _9f(arguments[0]);
case 2:
return _9f(arguments[0],arguments[1]);
case 3:
return _9f(arguments[0],arguments[1],arguments[2]);
}
var _a0=[];
for(var i=0;i<arguments.length;i++){
_a0.push("arguments["+i+"]");
}
return eval("(func("+_a0.join(",")+"))");
};
},methodcaller:function(_a2){
var _a3=MochiKit.Base.extend(null,arguments,1);
if(typeof (_a2)=="function"){
return function(obj){
return _a2.apply(obj,_a3);
};
}else{
return function(obj){
return obj[_a2].apply(obj,_a3);
};
}
},method:function(_a6,_a7){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([_a7,_a6],arguments,2));
},compose:function(f1,f2){
var _ab=[];
var m=MochiKit.Base;
if(arguments.length===0){
throw new TypeError("compose() requires at least one argument");
}
for(var i=0;i<arguments.length;i++){
var fn=arguments[i];
if(typeof (fn)!="function"){
throw new TypeError(m.repr(fn)+" is not a function");
}
_ab.push(fn);
}
return function(){
var _af=arguments;
for(var i=_ab.length-1;i>=0;i--){
_af=[_ab[i].apply(this,_af)];
}
return _af[0];
};
},bind:function(_b1,_b2){
if(typeof (_b1)=="string"){
_b1=_b2[_b1];
}
var _b3=_b1.im_func;
var _b4=_b1.im_preargs;
var _b5=_b1.im_self;
var m=MochiKit.Base;
if(typeof (_b1)=="function"&&typeof (_b1.apply)=="undefined"){
_b1=m._wrapDumbFunction(_b1);
}
if(typeof (_b3)!="function"){
_b3=_b1;
}
if(typeof (_b2)!="undefined"){
_b5=_b2;
}
if(typeof (_b4)=="undefined"){
_b4=[];
}else{
_b4=_b4.slice();
}
m.extend(_b4,arguments,2);
var _b7=function(){
var _b8=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_b8=m.concat(me.im_preargs,_b8);
}
var _ba=me.im_self;
if(!_ba){
_ba=this;
}
return me.im_func.apply(_ba,_b8);
};
_b7.im_self=_b5;
_b7.im_func=_b3;
_b7.im_preargs=_b4;
return _b7;
},bindMethods:function(_bb){
var _bc=MochiKit.Base.bind;
for(var k in _bb){
var _be=_bb[k];
if(typeof (_be)=="function"){
_bb[k]=_bc(_be,_bb);
}
}
},registerComparator:function(_bf,_c0,_c1,_c2){
MochiKit.Base.comparatorRegistry.register(_bf,_c0,_c1,_c2);
},_primitives:{"boolean":true,"string":true,"number":true},compare:function(a,b){
if(a==b){
return 0;
}
var _c5=(typeof (a)=="undefined"||a===null);
var _c6=(typeof (b)=="undefined"||b===null);
if(_c5&&_c6){
return 0;
}else{
if(_c5){
return -1;
}else{
if(_c6){
return 1;
}
}
}
var m=MochiKit.Base;
var _c8=m._primitives;
if(!(typeof (a) in _c8&&typeof (b) in _c8)){
try{
return m.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var _c9=m.repr;
throw new TypeError(_c9(a)+" and "+_c9(b)+" can not be compared");
},compareDateLike:function(a,b){
return MochiKit.Base.compare(a.getTime(),b.getTime());
},compareArrayLike:function(a,b){
var _ce=MochiKit.Base.compare;
var _cf=a.length;
var _d0=0;
if(_cf>b.length){
_d0=1;
_cf=b.length;
}else{
if(_cf<b.length){
_d0=-1;
}
}
for(var i=0;i<_cf;i++){
var cmp=_ce(a[i],b[i]);
if(cmp){
return cmp;
}
}
return _d0;
},registerRepr:function(_d3,_d4,_d5,_d6){
MochiKit.Base.reprRegistry.register(_d3,_d4,_d5,_d6);
},repr:function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
try{
var _d8=(o+"");
}
catch(e){
return "["+typeof (o)+"]";
}
if(typeof (o)=="function"){
o=_d8.replace(/^\s+/,"");
var idx=o.indexOf("{");
if(idx!=-1){
o=o.substr(0,idx)+"{...}";
}
}
return _d8;
},reprArrayLike:function(o){
var m=MochiKit.Base;
return "["+m.map(m.repr,o).join(", ")+"]";
},reprString:function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
},reprNumber:function(o){
return o+"";
},registerJSON:function(_de,_df,_e0,_e1){
MochiKit.Base.jsonRegistry.register(_de,_df,_e0,_e1);
},evalJSON:function(){
return eval("("+arguments[0]+")");
},serializeJSON:function(o){
var _e3=typeof (o);
if(_e3=="number"||_e3=="boolean"){
return o+"";
}else{
if(o===null){
return "null";
}
}
var m=MochiKit.Base;
var _e5=m.reprString;
if(_e3=="string"){
return _e5(o);
}
var me=arguments.callee;
var _e7;
if(typeof (o.__json__)=="function"){
_e7=o.__json__();
if(o!==_e7){
return me(_e7);
}
}
if(typeof (o.json)=="function"){
_e7=o.json();
if(o!==_e7){
return me(_e7);
}
}
if(_e3!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
val="undefined";
}
res.push(val);
}
return "["+res.join(", ")+"]";
}
try{
_e7=m.jsonRegistry.match(o);
if(o!==_e7){
return me(_e7);
}
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
if(_e3=="undefined"){
throw new TypeError("undefined can not be serialized as JSON");
}
if(_e3=="function"){
return null;
}
res=[];
for(var k in o){
var _ec;
if(typeof (k)=="number"){
_ec="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_ec=_e5(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_ec+":"+val);
}
return "{"+res.join(", ")+"}";
},objEqual:function(a,b){
return (MochiKit.Base.compare(a,b)===0);
},arrayEqual:function(_ef,arr){
if(_ef.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(_ef,arr)===0);
},concat:function(){
var _f1=[];
var _f2=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_f2(_f1,arguments[i]);
}
return _f1;
},keyComparator:function(key){
var m=MochiKit.Base;
var _f6=m.compare;
if(arguments.length==1){
return function(a,b){
return _f6(a[key],b[key]);
};
}
var _f9=m.extend(null,arguments);
return function(a,b){
var _fc=0;
for(var i=0;(_fc===0)&&(i<_f9.length);i++){
var key=_f9[i];
_fc=_f6(a[key],b[key]);
}
return _fc;
};
},reverseKeyComparator:function(key){
var _100=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _100(b,a);
};
},partial:function(func){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([func,undefined],arguments,1));
},listMinMax:function(_105,lst){
if(lst.length===0){
return null;
}
var cur=lst[0];
var _108=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_108(o,cur)==_105){
cur=o;
}
}
return cur;
},objMax:function(){
return MochiKit.Base.listMinMax(1,arguments);
},objMin:function(){
return MochiKit.Base.listMinMax(-1,arguments);
},findIdentical:function(lst,_10c,_10d,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_10d)=="undefined"||_10d===null){
_10d=0;
}
for(var i=_10d;i<end;i++){
if(lst[i]===_10c){
return i;
}
}
return -1;
},mean:function(){
var sum=0;
var m=MochiKit.Base;
var args=m.extend(null,arguments);
var _113=args.length;
while(args.length){
var o=args.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
_113+=o.length-1;
for(var i=o.length-1;i>=0;i--){
sum+=o[i];
}
}else{
sum+=o;
}
}
if(_113<=0){
throw new TypeError("mean() requires at least one argument");
}
return sum/_113;
},median:function(){
var data=MochiKit.Base.flattenArguments(arguments);
if(data.length===0){
throw new TypeError("median() requires at least one argument");
}
data.sort(compare);
if(data.length%2==0){
var _117=data.length/2;
return (data[_117]+data[_117-1])/2;
}else{
return data[(data.length-1)/2];
}
},findValue:function(lst,_119,_11a,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_11a)=="undefined"||_11a===null){
_11a=0;
}
var cmp=MochiKit.Base.compare;
for(var i=_11a;i<end;i++){
if(cmp(lst[i],_119)===0){
return i;
}
}
return -1;
},nodeWalk:function(node,_11f){
var _120=[node];
var _121=MochiKit.Base.extend;
while(_120.length){
var res=_11f(_120.shift());
if(res){
_121(_120,res);
}
}
},nameFunctions:function(_123){
var base=_123.NAME;
if(typeof (base)=="undefined"){
base="";
}else{
base=base+".";
}
for(var name in _123){
var o=_123[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+name;
}
catch(e){
}
}
}
},queryString:function(_127,_128){
if(typeof (MochiKit.DOM)!="undefined"&&arguments.length==1&&(typeof (_127)=="string"||(typeof (_127.nodeType)!="undefined"&&_127.nodeType>0))){
var kv=MochiKit.DOM.formContents(_127);
_127=kv[0];
_128=kv[1];
}else{
if(arguments.length==1){
if(typeof (_127.length)=="number"&&_127.length==2){
return arguments.callee(_127[0],_127[1]);
}
var o=_127;
_127=[];
_128=[];
for(var k in o){
var v=o[k];
if(typeof (v)=="function"){
continue;
}else{
if(typeof (v)!="string"&&typeof (v.length)=="number"){
for(var i=0;i<v.length;i++){
_127.push(k);
_128.push(v[i]);
}
}else{
_127.push(k);
_128.push(v);
}
}
}
}
}
var rval=[];
var len=Math.min(_127.length,_128.length);
var _130=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_128[i];
if(typeof (v)!="undefined"&&v!==null){
rval.push(_130(_127[i])+"="+_130(v));
}
}
return rval.join("&");
},parseQueryString:function(_131,_132){
var qstr=(_131.charAt(0)=="?")?_131.substring(1):_131;
var _134=qstr.replace(/\+/g,"%20").split(/(\&amp\;|\&\#38\;|\&#x26;|\&)/);
var o={};
var _136;
if(typeof (decodeURIComponent)!="undefined"){
_136=decodeURIComponent;
}else{
_136=unescape;
}
if(_132){
for(var i=0;i<_134.length;i++){
var pair=_134[i].split("=");
var name=_136(pair.shift());
if(!name){
continue;
}
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_136(pair.join("=")));
}
}else{
for(i=0;i<_134.length;i++){
pair=_134[i].split("=");
var name=pair.shift();
if(!name){
continue;
}
o[_136(name)]=_136(pair.join("="));
}
}
return o;
}});
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype={register:function(name,_13c,wrap,_13e){
if(_13e){
this.pairs.unshift([name,_13c,wrap]);
}else{
this.pairs.push([name,_13c,wrap]);
}
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
return pair[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}};
MochiKit.Base.EXPORT=["flattenArray","noop","camelize","counter","clone","extend","update","updatetree","setdefault","keys","values","items","NamedError","operator","forwardCall","itemgetter","typeMatcher","isCallable","isUndefined","isUndefinedOrNull","isNull","isEmpty","isNotEmpty","isArrayLike","isDateLike","xmap","map","xfilter","filter","methodcaller","compose","bind","bindMethods","NotFound","AdapterRegistry","registerComparator","compare","registerRepr","repr","objEqual","arrayEqual","concat","keyComparator","reverseKeyComparator","partial","merge","listMinMax","listMax","listMin","objMax","objMin","nodeWalk","zip","urlEncode","queryString","serializeJSON","registerJSON","evalJSON","parseQueryString","findValue","findIdentical","flattenArguments","method","average","mean","median"];
MochiKit.Base.EXPORT_OK=["nameFunctions","comparatorRegistry","reprRegistry","jsonRegistry","compareDateLike","compareArrayLike","reprArrayLike","reprString","reprNumber"];
MochiKit.Base._exportSymbols=function(_144,_145){
if(!MochiKit.__export__){
return;
}
var all=_145.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_144[all[i]]=_145[all[i]];
}
};
MochiKit.Base.__new__=function(){
var m=this;
m.noop=m.operator.identity;
m.forward=m.forwardCall;
m.find=m.findValue;
if(typeof (encodeURIComponent)!="undefined"){
m.urlEncode=function(_149){
return encodeURIComponent(_149).replace(/\'/g,"%27");
};
}else{
m.urlEncode=function(_14a){
return escape(_14a).replace(/\+/g,"%2B").replace(/\"/g,"%22").rval.replace(/\'/g,"%27");
};
}
m.NamedError=function(name){
this.message=name;
this.name=name;
};
m.NamedError.prototype=new Error();
m.update(m.NamedError.prototype,{repr:function(){
if(this.message&&this.message!=this.name){
return this.name+"("+m.repr(this.message)+")";
}else{
return this.name+"()";
}
},toString:m.forwardCall("repr")});
m.NotFound=new m.NamedError("MochiKit.Base.NotFound");
m.listMax=m.partial(m.listMinMax,1);
m.listMin=m.partial(m.listMinMax,-1);
m.isCallable=m.typeMatcher("function");
m.isUndefined=m.typeMatcher("undefined");
m.merge=m.partial(m.update,null);
m.zip=m.partial(m.map,null);
m.average=m.mean;
m.comparatorRegistry=new m.AdapterRegistry();
m.registerComparator("dateLike",m.isDateLike,m.compareDateLike);
m.registerComparator("arrayLike",m.isArrayLike,m.compareArrayLike);
m.reprRegistry=new m.AdapterRegistry();
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.typeMatcher("string"),m.reprString);
m.registerRepr("numbers",m.typeMatcher("number","boolean"),m.reprNumber);
m.jsonRegistry=new m.AdapterRegistry();
var all=m.concat(m.EXPORT,m.EXPORT_OK);
m.EXPORT_TAGS={":common":m.concat(m.EXPORT_OK),":all":all};
m.nameFunctions(this);
};
MochiKit.Base.__new__();
if(MochiKit.__export__){
compare=MochiKit.Base.compare;
compose=MochiKit.Base.compose;
serializeJSON=MochiKit.Base.serializeJSON;
}
MochiKit.Base._exportSymbols(this,MochiKit.Base);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Color");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Color depends on MochiKit.Base";
}
if(typeof (MochiKit.Color)=="undefined"){
MochiKit.Color={};
}
MochiKit.Color.NAME="MochiKit.Color";
MochiKit.Color.VERSION="1.4";
MochiKit.Color.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Color.toString=function(){
return this.__repr__();
};
MochiKit.Color.Color=function(red,_14e,blue,_150){
if(typeof (_150)=="undefined"||_150===null){
_150=1;
}
this.rgb={r:red,g:_14e,b:blue,a:_150};
};
MochiKit.Color.Color.prototype={__class__:MochiKit.Color.Color,colorWithAlpha:function(_151){
var rgb=this.rgb;
var m=MochiKit.Color;
return m.Color.fromRGB(rgb.r,rgb.g,rgb.b,_151);
},colorWithHue:function(hue){
var hsl=this.asHSL();
hsl.h=hue;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithSaturation:function(_157){
var hsl=this.asHSL();
hsl.s=_157;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithLightness:function(_15a){
var hsl=this.asHSL();
hsl.l=_15a;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},darkerColorWithLevel:function(_15d){
var hsl=this.asHSL();
hsl.l=Math.max(hsl.l-_15d,0);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},lighterColorWithLevel:function(_160){
var hsl=this.asHSL();
hsl.l=Math.min(hsl.l+_160,1);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},blendedColor:function(_163,_164){
if(typeof (_164)=="undefined"||_164===null){
_164=0.5;
}
var sf=1-_164;
var s=this.rgb;
var d=_163.rgb;
var df=_164;
return MochiKit.Color.Color.fromRGB((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df));
},compareRGB:function(_169){
var a=this.asRGB();
var b=_169.asRGB();
return MochiKit.Base.compare([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a]);
},isLight:function(){
return this.asHSL().b>0.5;
},isDark:function(){
return (!this.isLight());
},toHSLString:function(){
var c=this.asHSL();
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hslString;
if(!rval){
var mid=(ccc(c.h,360).toFixed(0)+","+ccc(c.s,100).toPrecision(4)+"%"+","+ccc(c.l,100).toPrecision(4)+"%");
var a=c.a;
if(a>=1){
a=1;
rval="hsl("+mid+")";
}else{
if(a<=0){
a=0;
}
rval="hsla("+mid+","+a+")";
}
this._hslString=rval;
}
return rval;
},toRGBString:function(){
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._rgbString;
if(!rval){
var mid=(ccc(c.r,255).toFixed(0)+","+ccc(c.g,255).toFixed(0)+","+ccc(c.b,255).toFixed(0));
if(c.a!=1){
rval="rgba("+mid+","+c.a+")";
}else{
rval="rgb("+mid+")";
}
this._rgbString=rval;
}
return rval;
},asRGB:function(){
return MochiKit.Base.clone(this.rgb);
},toHexString:function(){
var m=MochiKit.Color;
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hexString;
if(!rval){
rval=("#"+m.toColorPart(ccc(c.r,255))+m.toColorPart(ccc(c.g,255))+m.toColorPart(ccc(c.b,255)));
this._hexString=rval;
}
return rval;
},asHSV:function(){
var hsv=this.hsv;
var c=this.rgb;
if(typeof (hsv)=="undefined"||hsv===null){
hsv=MochiKit.Color.rgbToHSV(this.rgb);
this.hsv=hsv;
}
return MochiKit.Base.clone(hsv);
},asHSL:function(){
var hsl=this.hsl;
var c=this.rgb;
if(typeof (hsl)=="undefined"||hsl===null){
hsl=MochiKit.Color.rgbToHSL(this.rgb);
this.hsl=hsl;
}
return MochiKit.Base.clone(hsl);
},toString:function(){
return this.toRGBString();
},repr:function(){
var c=this.rgb;
var col=[c.r,c.g,c.b,c.a];
return this.__class__.NAME+"("+col.join(", ")+")";
}};
MochiKit.Base.update(MochiKit.Color.Color,{fromRGB:function(red,_180,blue,_182){
var _183=MochiKit.Color.Color;
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_180=rgb.g;
blue=rgb.b;
if(typeof (rgb.a)=="undefined"){
_182=undefined;
}else{
_182=rgb.a;
}
}
return new _183(red,_180,blue,_182);
},fromHSL:function(hue,_186,_187,_188){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hslToRGB.apply(m,arguments));
},fromHSV:function(hue,_18b,_18c,_18d){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hsvToRGB.apply(m,arguments));
},fromName:function(name){
var _190=MochiKit.Color.Color;
if(name.charAt(0)=="\""){
name=name.substr(1,name.length-2);
}
var _191=_190._namedColors[name.toLowerCase()];
if(typeof (_191)=="string"){
return _190.fromHexString(_191);
}else{
if(name=="transparent"){
return _190.transparentColor();
}
}
return null;
},fromString:function(_192){
var self=MochiKit.Color.Color;
var _194=_192.substr(0,3);
if(_194=="rgb"){
return self.fromRGBString(_192);
}else{
if(_194=="hsl"){
return self.fromHSLString(_192);
}else{
if(_192.charAt(0)=="#"){
return self.fromHexString(_192);
}
}
}
return self.fromName(_192);
},fromHexString:function(_195){
if(_195.charAt(0)=="#"){
_195=_195.substring(1);
}
var _196=[];
var i,hex;
if(_195.length==3){
for(i=0;i<3;i++){
hex=_195.substr(i,1);
_196.push(parseInt(hex+hex,16)/255);
}
}else{
for(i=0;i<6;i+=2){
hex=_195.substr(i,2);
_196.push(parseInt(hex,16)/255);
}
}
var _199=MochiKit.Color.Color;
return _199.fromRGB.apply(_199,_196);
},_fromColorString:function(pre,_19b,_19c,_19d){
if(_19d.indexOf(pre)===0){
_19d=_19d.substring(_19d.indexOf("(",3)+1,_19d.length-1);
}
var _19e=_19d.split(/\s*,\s*/);
var _19f=[];
for(var i=0;i<_19e.length;i++){
var c=_19e[i];
var val;
var _1a3=c.substring(c.length-3);
if(c.charAt(c.length-1)=="%"){
val=0.01*parseFloat(c.substring(0,c.length-1));
}else{
if(_1a3=="deg"){
val=parseFloat(c)/360;
}else{
if(_1a3=="rad"){
val=parseFloat(c)/(Math.PI*2);
}else{
val=_19c[i]*parseFloat(c);
}
}
}
_19f.push(val);
}
return this[_19b].apply(this,_19f);
},fromBackground:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"backgroundColor","background-color")||cls.whiteColor();
},fromText:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"color","color")||cls.blackColor();
},namedColors:function(){
return MochiKit.Base.clone(MochiKit.Color.Color._namedColors);
}});
MochiKit.Base.update(MochiKit.Color,{clampColorComponent:function(v,_1a9){
v*=_1a9;
if(v<0){
return 0;
}else{
if(v>_1a9){
return _1a9;
}else{
return v;
}
}
},_hslValue:function(n1,n2,hue){
if(hue>6){
hue-=6;
}else{
if(hue<0){
hue+=6;
}
}
var val;
if(hue<1){
val=n1+(n2-n1)*hue;
}else{
if(hue<3){
val=n2;
}else{
if(hue<4){
val=n1+(n2-n1)*(4-hue);
}else{
val=n1;
}
}
}
return val;
},hsvToRGB:function(hue,_1af,_1b0,_1b1){
if(arguments.length==1){
var hsv=hue;
hue=hsv.h;
_1af=hsv.s;
_1b0=hsv.v;
_1b1=hsv.a;
}
var red;
var _1b4;
var blue;
if(_1af===0){
red=_1b0;
_1b4=_1b0;
blue=_1b0;
}else{
var i=Math.floor(hue*6);
var f=(hue*6)-i;
var p=_1b0*(1-_1af);
var q=_1b0*(1-(_1af*f));
var t=_1b0*(1-(_1af*(1-f)));
switch(i){
case 1:
red=q;
_1b4=_1b0;
blue=p;
break;
case 2:
red=p;
_1b4=_1b0;
blue=t;
break;
case 3:
red=p;
_1b4=q;
blue=_1b0;
break;
case 4:
red=t;
_1b4=p;
blue=_1b0;
break;
case 5:
red=_1b0;
_1b4=p;
blue=q;
break;
case 6:
case 0:
red=_1b0;
_1b4=t;
blue=p;
break;
}
}
return {r:red,g:_1b4,b:blue,a:_1b1};
},hslToRGB:function(hue,_1bc,_1bd,_1be){
if(arguments.length==1){
var hsl=hue;
hue=hsl.h;
_1bc=hsl.s;
_1bd=hsl.l;
_1be=hsl.a;
}
var red;
var _1c1;
var blue;
if(_1bc===0){
red=_1bd;
_1c1=_1bd;
blue=_1bd;
}else{
var m2;
if(_1bd<=0.5){
m2=_1bd*(1+_1bc);
}else{
m2=_1bd+_1bc-(_1bd*_1bc);
}
var m1=(2*_1bd)-m2;
var f=MochiKit.Color._hslValue;
var h6=hue*6;
red=f(m1,m2,h6+2);
_1c1=f(m1,m2,h6);
blue=f(m1,m2,h6-2);
}
return {r:red,g:_1c1,b:blue,a:_1be};
},rgbToHSV:function(red,_1c8,blue,_1ca){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_1c8=rgb.g;
blue=rgb.b;
_1ca=rgb.a;
}
var max=Math.max(Math.max(red,_1c8),blue);
var min=Math.min(Math.min(red,_1c8),blue);
var hue;
var _1cf;
var _1d0=max;
if(min==max){
hue=0;
_1cf=0;
}else{
var _1d1=(max-min);
_1cf=_1d1/max;
if(red==max){
hue=(_1c8-blue)/_1d1;
}else{
if(_1c8==max){
hue=2+((blue-red)/_1d1);
}else{
hue=4+((red-_1c8)/_1d1);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_1cf,v:_1d0,a:_1ca};
},rgbToHSL:function(red,_1d3,blue,_1d5){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_1d3=rgb.g;
blue=rgb.b;
_1d5=rgb.a;
}
var max=Math.max(red,Math.max(_1d3,blue));
var min=Math.min(red,Math.min(_1d3,blue));
var hue;
var _1da;
var _1db=(max+min)/2;
var _1dc=max-min;
if(_1dc===0){
hue=0;
_1da=0;
}else{
if(_1db<=0.5){
_1da=_1dc/(max+min);
}else{
_1da=_1dc/(2-max-min);
}
if(red==max){
hue=(_1d3-blue)/_1dc;
}else{
if(_1d3==max){
hue=2+((blue-red)/_1dc);
}else{
hue=4+((red-_1d3)/_1dc);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_1da,l:_1db,a:_1d5};
},toColorPart:function(num){
num=Math.round(num);
var _1de=num.toString(16);
if(num<16){
return "0"+_1de;
}
return _1de;
},__new__:function(){
var m=MochiKit.Base;
this.Color.fromRGBString=m.bind(this.Color._fromColorString,this.Color,"rgb","fromRGB",[1/255,1/255,1/255,1]);
this.Color.fromHSLString=m.bind(this.Color._fromColorString,this.Color,"hsl","fromHSL",[1/360,0.01,0.01,1]);
var _1e0=1/3;
var _1e1={black:[0,0,0],blue:[0,0,1],brown:[0.6,0.4,0.2],cyan:[0,1,1],darkGray:[_1e0,_1e0,_1e0],gray:[0.5,0.5,0.5],green:[0,1,0],lightGray:[2*_1e0,2*_1e0,2*_1e0],magenta:[1,0,1],orange:[1,0.5,0],purple:[0.5,0,0.5],red:[1,0,0],transparent:[0,0,0,0],white:[1,1,1],yellow:[1,1,0]};
var _1e2=function(name,r,g,b,a){
var rval=this.fromRGB(r,g,b,a);
this[name]=function(){
return rval;
};
return rval;
};
for(var k in _1e1){
var name=k+"Color";
var _1eb=m.concat([_1e2,this.Color,name],_1e1[k]);
this.Color[name]=m.bind.apply(null,_1eb);
}
var _1ec=function(){
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof Color)){
return false;
}
}
return true;
};
var _1ee=function(a,b){
return a.compareRGB(b);
};
m.nameFunctions(this);
m.registerComparator(this.Color.NAME,_1ec,_1ee);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
}});
MochiKit.Color.EXPORT=["Color"];
MochiKit.Color.EXPORT_OK=["clampColorComponent","rgbToHSL","hslToRGB","rgbToHSV","hsvToRGB","toColorPart"];
MochiKit.Color.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Color);
MochiKit.Color.Color._namedColors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.DOM");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.DOM depends on MochiKit.Base!";
}
if(typeof (MochiKit.DOM)=="undefined"){
MochiKit.DOM={};
}
MochiKit.DOM.NAME="MochiKit.DOM";
MochiKit.DOM.VERSION="1.4";
MochiKit.DOM.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DOM.toString=function(){
return this.__repr__();
};
MochiKit.DOM.EXPORT=["removeEmptyTextNodes","formContents","currentWindow","currentDocument","withWindow","withDocument","registerDOMConverter","coerceToDOM","createDOM","createDOMFunc","isChildNode","getNodeAttribute","removeNodeAttribute","setNodeAttribute","updateNodeAttributes","appendChildNodes","insertSiblingNodesAfter","insertSiblingNodesBefore","replaceChildNodes","removeElement","swapDOM","BUTTON","TT","PRE","H1","H2","H3","BR","CANVAS","HR","LABEL","TEXTAREA","FORM","STRONG","SELECT","OPTION","OPTGROUP","LEGEND","FIELDSET","P","UL","OL","LI","TD","TR","THEAD","TBODY","TFOOT","TABLE","TH","INPUT","SPAN","A","DIV","IMG","getElement","$","getElementsByTagAndClassName","addToCallStack","addLoadEvent","focusOnLoad","setElementClass","toggleElementClass","addElementClass","removeElementClass","swapElementClass","hasElementClass","escapeHTML","toHTML","emitHTML","scrapeText","isParent","getFirstParentByTagAndClassName","makeClipping","undoClipping","makePositioned","undoPositioned","getFirstElementByTagAndClassName"];
MochiKit.DOM.EXPORT_OK=["domConverters"];
MochiKit.DOM.DEPRECATED=[["computedStyle","MochiKit.Style.getStyle","1.4"],["elementDimensions","MochiKit.Style.getElementDimensions","1.4"],["elementPosition","MochiKit.Style.getElementPosition","1.4"],["hideElement","MochiKit.Style.hideElement","1.4"],["setElementDimensions","MochiKit.Style.setElementDimensions","1.4"],["setElementPosition","MochiKit.Style.setElementPosition","1.4"],["setDisplayForElement","MochiKit.Style.setDisplayForElement","1.4"],["setOpacity","MochiKit.Style.setOpacity","1.4"],["showElement","MochiKit.Style.showElement","1.4"],["Coordinates","MochiKit.Style.Coordinates","1.4"],["Dimensions","MochiKit.Style.Dimensions","1.4"]];
MochiKit.DOM.getViewportDimensions=new Function(""+"if (!MochiKit[\"Style\"]) {"+"    throw new Error(\"This function has been deprecated and depends on MochiKit.Style.\");"+"}"+"return MochiKit.Style.getViewportDimensions.apply(this, arguments);");
MochiKit.Base.update(MochiKit.DOM,{currentWindow:function(){
return MochiKit.DOM._window;
},currentDocument:function(){
return MochiKit.DOM._document;
},withWindow:function(win,func){
var self=MochiKit.DOM;
var _1f4=self._document;
var _1f5=self._window;
var rval;
try{
self._window=win;
self._document=win.document;
rval=func();
}
catch(e){
self._window=_1f5;
self._document=_1f4;
throw e;
}
self._window=_1f5;
self._document=_1f4;
return rval;
},formContents:function(elem){
var _1f8=[];
var _1f9=[];
var m=MochiKit.Base;
var self=MochiKit.DOM;
if(typeof (elem)=="undefined"||elem===null){
elem=self._document.body;
}else{
elem=self.getElement(elem);
}
m.nodeWalk(elem,function(elem){
var name=elem.name;
if(m.isNotEmpty(name)){
var _1fe=elem.tagName.toUpperCase();
if(_1fe==="INPUT"&&(elem.type=="radio"||elem.type=="checkbox")&&!elem.checked){
return null;
}
if(_1fe==="SELECT"){
if(elem.type=="select-one"){
if(elem.selectedIndex>=0){
var opt=elem.options[elem.selectedIndex];
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_1f8.push(name);
_1f9.push(v);
return null;
}
_1f8.push(name);
_1f9.push("");
return null;
}else{
var opts=elem.options;
if(!opts.length){
_1f8.push(name);
_1f9.push("");
return null;
}
for(var i=0;i<opts.length;i++){
var opt=opts[i];
if(!opt.selected){
continue;
}
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_1f8.push(name);
_1f9.push(v);
}
return null;
}
}
if(_1fe==="FORM"||_1fe==="P"||_1fe==="SPAN"||_1fe==="DIV"){
return elem.childNodes;
}
_1f8.push(name);
_1f9.push(elem.value||"");
return null;
}
return elem.childNodes;
});
return [_1f8,_1f9];
},withDocument:function(doc,func){
var self=MochiKit.DOM;
var _207=self._document;
var rval;
try{
self._document=doc;
rval=func();
}
catch(e){
self._document=_207;
throw e;
}
self._document=_207;
return rval;
},registerDOMConverter:function(name,_20a,wrap,_20c){
MochiKit.DOM.domConverters.register(name,_20a,wrap,_20c);
},coerceToDOM:function(node,ctx){
var m=MochiKit.Base;
var im=MochiKit.Iter;
var self=MochiKit.DOM;
if(im){
var iter=im.iter;
var _213=im.repeat;
var map=m.map;
}
var _215=self.domConverters;
var _216=arguments.callee;
var _217=m.NotFound;
while(true){
if(typeof (node)=="undefined"||node===null){
return null;
}
if(typeof (node)=="function"&&typeof (node.length)=="number"&&!(node instanceof Function)){
node=im.list(node);
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="boolean"){
node=node.toString();
}
if(typeof (node)=="string"){
return self._document.createTextNode(node);
}
if(typeof (node.__dom__)=="function"){
node=node.__dom__(ctx);
continue;
}
if(typeof (node.dom)=="function"){
node=node.dom(ctx);
continue;
}
if(typeof (node)=="function"){
node=node.apply(ctx,[ctx]);
continue;
}
if(im){
var _218=null;
try{
_218=iter(node);
}
catch(e){
}
if(_218){
return map(_216,_218,_213(ctx));
}
}
try{
node=_215.match(node,ctx);
continue;
}
catch(e){
if(e!=_217){
throw e;
}
}
return self._document.createTextNode(node.toString());
}
return undefined;
},isChildNode:function(node,_21a){
var self=MochiKit.DOM;
if(typeof (node)=="string"){
node=self.getElement(node);
}
if(typeof (_21a)=="string"){
_21a=self.getElement(_21a);
}
if(node===_21a){
return true;
}
while(node&&node.tagName.toUpperCase()!="BODY"){
node=node.parentNode;
if(node===_21a){
return true;
}
}
return false;
},setNodeAttribute:function(node,attr,_21e){
var o={};
o[attr]=_21e;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
},getNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _223=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_223){
return node[_223];
}
return node.getAttribute(attr);
}
catch(e){
}
return null;
},removeNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _227=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_227){
return node[_227];
}
return node.removeAttribute(attr);
}
catch(e){
}
return null;
},updateNodeAttributes:function(node,_229){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
if(_229){
var _22c=MochiKit.Base.updatetree;
if(self.attributeArray.compliant){
for(var k in _229){
var v=_229[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
_22c(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}else{
var _22f=self.attributeArray.renames;
for(var k in _229){
v=_229[k];
var _230=_22f[k];
if(k=="style"&&typeof (v)=="string"){
elem.style.cssText=v;
}else{
if(typeof (_230)=="string"){
elem[_230]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
_22c(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
}
}
}
return elem;
},appendChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _234=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _235=MochiKit.Base.concat;
while(_234.length){
var n=_234.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_234=_235(n,_234);
}
}
}
return elem;
},insertSiblingNodesBefore:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _23a=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _23b=elem.parentNode;
var _23c=MochiKit.Base.concat;
while(_23a.length){
var n=_23a.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
_23b.insertBefore(n,elem);
}else{
_23a=_23c(n,_23a);
}
}
}
return _23b;
},insertSiblingNodesAfter:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _241=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
if(elem.nextSibling){
return self.insertSiblingNodesBefore(elem.nextSibling,_241);
}else{
return self.appendChildNodes(elem.parentNode,_241);
}
},replaceChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
arguments[0]=elem;
}
var _245;
while((_245=elem.firstChild)){
elem.removeChild(_245);
}
if(arguments.length<2){
return elem;
}else{
return self.appendChildNodes.apply(this,arguments);
}
},createDOM:function(name,_247){
var elem;
var self=MochiKit.DOM;
var m=MochiKit.Base;
if(typeof (_247)=="string"||typeof (_247)=="number"){
var args=m.extend([name,null],arguments,1);
return arguments.callee.apply(this,args);
}
if(typeof (name)=="string"){
var _24c=self._xhtml;
if(_247&&!self.attributeArray.compliant){
var _24d="";
if("name" in _247){
_24d+=" name=\""+self.escapeHTML(_247.name)+"\"";
}
if(name=="input"&&"type" in _247){
_24d+=" type=\""+self.escapeHTML(_247.type)+"\"";
}
if(_24d){
name="<"+name+_24d+">";
_24c=false;
}
}
var d=self._document;
if(_24c&&d===document){
elem=d.createElementNS("http://www.w3.org/1999/xhtml",name);
}else{
elem=d.createElement(name);
}
}else{
elem=name;
}
if(_247){
self.updateNodeAttributes(elem,_247);
}
if(arguments.length<=2){
return elem;
}else{
var args=m.extend([elem],arguments,2);
return self.appendChildNodes.apply(this,args);
}
},createDOMFunc:function(){
var m=MochiKit.Base;
return m.partial.apply(this,m.extend([MochiKit.DOM.createDOM],arguments));
},removeElement:function(elem){
var e=MochiKit.DOM.getElement(elem);
e.parentNode.removeChild(e);
return e;
},swapDOM:function(dest,src){
var self=MochiKit.DOM;
dest=self.getElement(dest);
var _255=dest.parentNode;
if(src){
src=self.getElement(src);
_255.replaceChild(src,dest);
}else{
_255.removeChild(dest);
}
return src;
},getElement:function(id){
var self=MochiKit.DOM;
if(arguments.length==1){
return ((typeof (id)=="string")?self._document.getElementById(id):id);
}else{
return MochiKit.Base.map(self.getElement,arguments);
}
},getElementsByTagAndClassName:function(_258,_259,_25a){
var self=MochiKit.DOM;
if(typeof (_258)=="undefined"||_258===null){
_258="*";
}
if(typeof (_25a)=="undefined"||_25a===null){
_25a=self._document;
}
_25a=self.getElement(_25a);
var _25c=(_25a.getElementsByTagName(_258)||self._document.all);
if(typeof (_259)=="undefined"||_259===null){
return MochiKit.Base.extend(null,_25c);
}
var _25d=[];
for(var i=0;i<_25c.length;i++){
var _25f=_25c[i];
var cls=_25f.className;
if(!cls){
continue;
}
var _261=cls.split(" ");
for(var j=0;j<_261.length;j++){
if(_261[j]==_259){
_25d.push(_25f);
break;
}
}
}
return _25d;
},_newCallStack:function(path,once){
var rval=function(){
var _266=arguments.callee.callStack;
for(var i=0;i<_266.length;i++){
if(_266[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
},addToCallStack:function(_268,path,func,once){
var self=MochiKit.DOM;
var _26d=_268[path];
var _26e=_26d;
if(!(typeof (_26d)=="function"&&typeof (_26d.callStack)=="object"&&_26d.callStack!==null)){
_26e=self._newCallStack(path,once);
if(typeof (_26d)=="function"){
_26e.callStack.push(_26d);
}
_268[path]=_26e;
}
_26e.callStack.push(func);
},addLoadEvent:function(func){
var self=MochiKit.DOM;
self.addToCallStack(self._window,"onload",func,true);
},focusOnLoad:function(_271){
var self=MochiKit.DOM;
self.addLoadEvent(function(){
_271=self.getElement(_271);
if(_271){
_271.focus();
}
});
},setElementClass:function(_273,_274){
var self=MochiKit.DOM;
var obj=self.getElement(_273);
if(self.attributeArray.compliant){
obj.setAttribute("class",_274);
}else{
obj.setAttribute("className",_274);
}
},toggleElementClass:function(_277){
var self=MochiKit.DOM;
for(var i=1;i<arguments.length;i++){
var obj=self.getElement(arguments[i]);
if(!self.addElementClass(obj,_277)){
self.removeElementClass(obj,_277);
}
}
},addElementClass:function(_27b,_27c){
var self=MochiKit.DOM;
var obj=self.getElement(_27b);
var cls=obj.className;
if(cls==undefined||cls.length===0){
self.setElementClass(obj,_27c);
return true;
}
if(cls==_27c){
return false;
}
var _280=cls.split(" ");
for(var i=0;i<_280.length;i++){
if(_280[i]==_27c){
return false;
}
}
self.setElementClass(obj,cls+" "+_27c);
return true;
},removeElementClass:function(_282,_283){
var self=MochiKit.DOM;
var obj=self.getElement(_282);
var cls=obj.className;
if(cls==undefined||cls.length===0){
return false;
}
if(cls==_283){
self.setElementClass(obj,"");
return true;
}
var _287=cls.split(" ");
for(var i=0;i<_287.length;i++){
if(_287[i]==_283){
_287.splice(i,1);
self.setElementClass(obj,_287.join(" "));
return true;
}
}
return false;
},swapElementClass:function(_289,_28a,_28b){
var obj=MochiKit.DOM.getElement(_289);
var res=MochiKit.DOM.removeElementClass(obj,_28a);
if(res){
MochiKit.DOM.addElementClass(obj,_28b);
}
return res;
},hasElementClass:function(_28e,_28f){
var obj=MochiKit.DOM.getElement(_28e);
var cls=obj.className;
if(!cls){
return false;
}
var _292=cls.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_292.length;j++){
if(_292[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
},escapeHTML:function(s){
return s.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
},toHTML:function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
},emitHTML:function(dom,lst){
if(typeof (lst)=="undefined"||lst===null){
lst=[];
}
var _29a=[dom];
var self=MochiKit.DOM;
var _29c=self.escapeHTML;
var _29d=self.attributeArray;
while(_29a.length){
dom=_29a.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.tagName.toLowerCase());
var _29e=[];
var _29f=_29d(dom);
for(var i=0;i<_29f.length;i++){
var a=_29f[i];
_29e.push([" ",a.name,"=\"",_29c(a.value),"\""]);
}
_29e.sort();
for(i=0;i<_29e.length;i++){
var _2a2=_29e[i];
for(var j=0;j<_2a2.length;j++){
lst.push(_2a2[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_29a.push("</"+dom.tagName.toLowerCase()+">");
var _2a4=dom.childNodes;
for(i=_2a4.length-1;i>=0;i--){
_29a.push(_2a4[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_29c(dom.nodeValue));
}
}
}
}
return lst;
},scrapeText:function(node,_2a6){
var rval=[];
(function(node){
var cn=node.childNodes;
if(cn){
for(var i=0;i<cn.length;i++){
arguments.callee.call(this,cn[i]);
}
}
var _2ab=node.nodeValue;
if(typeof (_2ab)=="string"){
rval.push(_2ab);
}
})(MochiKit.DOM.getElement(node));
if(_2a6){
return rval;
}else{
return rval.join("");
}
},removeEmptyTextNodes:function(_2ac){
_2ac=MochiKit.DOM.getElement(_2ac);
for(var i=0;i<_2ac.childNodes.length;i++){
var node=_2ac.childNodes[i];
if(node.nodeType==3&&!/\S/.test(node.nodeValue)){
node.parentNode.removeChild(node);
}
}
},makeClipping:function(_2af){
_2af=MochiKit.DOM.getElement(_2af);
var _2b0=_2af.style.overflow;
if((MochiKit.Style.getStyle(_2af,"overflow")||"visible")!="hidden"){
_2af.style.overflow="hidden";
}
return _2b0;
},undoClipping:function(_2b1,_2b2){
_2b1=MochiKit.DOM.getElement(_2b1);
if(!_2b2){
return;
}
_2b1.style.overflow=_2b2;
},makePositioned:function(_2b3){
_2b3=MochiKit.DOM.getElement(_2b3);
var pos=MochiKit.Style.getStyle(_2b3,"position");
if(pos=="static"||!pos){
_2b3.style.position="relative";
if(/Opera/.test(navigator.userAgent)){
_2b3.style.top=0;
_2b3.style.left=0;
}
}
},undoPositioned:function(_2b5){
_2b5=MochiKit.DOM.getElement(_2b5);
if(_2b5.style.position=="relative"){
_2b5.style.position=_2b5.style.top=_2b5.style.left=_2b5.style.bottom=_2b5.style.right="";
}
},getFirstElementByTagAndClassName:function(_2b6,_2b7,_2b8){
var self=MochiKit.DOM;
if(typeof (_2b6)=="undefined"||_2b6===null){
_2b6="*";
}
if(typeof (_2b8)=="undefined"||_2b8===null){
_2b8=self._document;
}
_2b8=self.getElement(_2b8);
var _2ba=(_2b8.getElementsByTagName(_2b6)||self._document.all);
if(typeof (_2b7)=="undefined"||_2b7===null){
return _2ba[0];
}
for(var i=0;i<_2ba.length;i++){
var _2bc=_2ba[i];
var _2bd=_2bc.className.split(" ");
for(var j=0;j<_2bd.length;j++){
if(_2bd[j]==_2b7){
return _2bc;
}
}
}
},getFirstParentByTagAndClassName:function(elem,_2c0,_2c1){
var self=MochiKit.DOM;
elem=self.getElement(elem);
if(typeof (_2c0)=="undefined"||_2c0===null){
_2c0="*";
}else{
_2c0=_2c0.toUpperCase();
}
if(typeof (_2c1)=="undefined"||_2c1===null){
_2c1=null;
}
var _2c3="";
var _2c4="";
while(elem&&elem.tagName){
elem=elem.parentNode;
if(_2c0=="*"&&_2c1===null){
return elem;
}
_2c3=elem.className.split(" ");
_2c4=elem.tagName.toUpperCase();
if(_2c1===null&&_2c0==_2c4){
return elem;
}else{
if(_2c1!==null){
for(var i=0;i<_2c3.length;i++){
if(_2c0=="*"&&_2c3[i]==_2c1){
return elem;
}else{
if(_2c0==_2c4&&_2c3[i]==_2c1){
return elem;
}
}
}
}
}
}
return elem;
},isParent:function(_2c6,_2c7){
if(!_2c6.parentNode||_2c6==_2c7){
return false;
}
if(_2c6.parentNode==_2c7){
return true;
}
return MochiKit.DOM.isParent(_2c6.parentNode,_2c7);
},__new__:function(win){
var m=MochiKit.Base;
if(typeof (document)!="undefined"){
this._document=document;
var _2ca="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
this._xhtml=(document.documentElement&&document.createElementNS&&document.documentElement.namespaceURI===_2ca);
}else{
if(MochiKit.MockDOM){
this._document=MochiKit.MockDOM.document;
}
}
this._window=win;
this.domConverters=new m.AdapterRegistry();
var _2cb=this._document.createElement("span");
var _2cc;
if(_2cb&&_2cb.attributes&&_2cb.attributes.length>0){
var _2cd=m.filter;
_2cc=function(node){
return _2cd(_2cc.ignoreAttrFilter,node.attributes);
};
_2cc.ignoreAttr={};
var _2cf=_2cb.attributes;
var _2d0=_2cc.ignoreAttr;
for(var i=0;i<_2cf.length;i++){
var a=_2cf[i];
_2d0[a.name]=a.value;
}
_2cc.ignoreAttrFilter=function(a){
return (_2cc.ignoreAttr[a.name]!=a.value);
};
_2cc.compliant=false;
_2cc.renames={"class":"className","checked":"defaultChecked","usemap":"useMap","for":"htmlFor","readonly":"readOnly","colspan":"colSpan","bgcolor":"bgColor","cellspacing":"cellSpacing","cellpadding":"cellPadding"};
}else{
_2cc=function(node){
return node.attributes;
};
_2cc.compliant=true;
_2cc.renames={};
}
this.attributeArray=_2cc;
var _2d5=function(_2d6,arr){
var _2d8=arr[1].split(".");
var str="";
var obj={};
str+="if (!MochiKit."+_2d8[1]+") { throw new Error(\"";
str+="This function has been deprecated and depends on MochiKit.";
str+=_2d8[1]+".\");}";
str+="return MochiKit."+_2d8[1]+"."+arr[0];
str+=".apply(this, arguments);";
obj[_2d8[2]]=new Function(str);
MochiKit.Base.update(MochiKit[_2d6],obj);
};
for(var i;i<MochiKit.DOM.DEPRECATED.length;i++){
_2d5("DOM",MochiKit.DOM.DEPRECATED[i]);
}
var _2db=this.createDOMFunc;
this.UL=_2db("ul");
this.OL=_2db("ol");
this.LI=_2db("li");
this.TD=_2db("td");
this.TR=_2db("tr");
this.TBODY=_2db("tbody");
this.THEAD=_2db("thead");
this.TFOOT=_2db("tfoot");
this.TABLE=_2db("table");
this.TH=_2db("th");
this.INPUT=_2db("input");
this.SPAN=_2db("span");
this.A=_2db("a");
this.DIV=_2db("div");
this.IMG=_2db("img");
this.BUTTON=_2db("button");
this.TT=_2db("tt");
this.PRE=_2db("pre");
this.H1=_2db("h1");
this.H2=_2db("h2");
this.H3=_2db("h3");
this.BR=_2db("br");
this.HR=_2db("hr");
this.LABEL=_2db("label");
this.TEXTAREA=_2db("textarea");
this.FORM=_2db("form");
this.P=_2db("p");
this.SELECT=_2db("select");
this.OPTION=_2db("option");
this.OPTGROUP=_2db("optgroup");
this.LEGEND=_2db("legend");
this.FIELDSET=_2db("fieldset");
this.STRONG=_2db("strong");
this.CANVAS=_2db("canvas");
this.$=this.getElement;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.DOM.__new__(((typeof (window)=="undefined")?this:window));
if(MochiKit.__export__){
withWindow=MochiKit.DOM.withWindow;
withDocument=MochiKit.DOM.withDocument;
}
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Style");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Style depends on MochiKit.Base!";
}
try{
if(typeof (MochiKit.DOM)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Style depends on MochiKit.DOM!";
}
if(typeof (MochiKit.Style)=="undefined"){
MochiKit.Style={};
}
MochiKit.Style.NAME="MochiKit.Style";
MochiKit.Style.VERSION="1.4";
MochiKit.Style.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Style.toString=function(){
return this.__repr__();
};
MochiKit.Style.EXPORT_OK=[];
MochiKit.Style.EXPORT=["setStyle","setOpacity","getStyle","getElementDimensions","elementDimensions","setElementDimensions","getElementPosition","elementPosition","setElementPosition","setDisplayForElement","hideElement","showElement","getViewportDimensions","getViewportPosition","Dimensions","Coordinates"];
MochiKit.Style.Dimensions=function(w,h){
this.w=w;
this.h=h;
};
MochiKit.Style.Dimensions.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{w: "+repr(this.w)+", h: "+repr(this.h)+"}";
};
MochiKit.Style.Dimensions.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Style.Coordinates=function(x,y){
this.x=x;
this.y=y;
};
MochiKit.Style.Coordinates.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{x: "+repr(this.x)+", y: "+repr(this.y)+"}";
};
MochiKit.Style.Coordinates.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Base.update(MochiKit.Style,{getStyle:function(elem,_2e3){
var dom=MochiKit.DOM;
var d=dom._document;
elem=dom.getElement(elem);
_2e3=MochiKit.Base.camelize(_2e3);
if(!elem||elem==d){
return undefined;
}
if(_2e3=="opacity"&&elem.filters){
var _2e6=(MochiKit.Style.getStyle(elem,"filter")||"").match(/alpha\(opacity=(.*)\)/);
if(_2e6&&_2e6[1]){
return parseFloat(_2e6[1])/100;
}
return 1;
}
var _2e7=elem.style?elem.style[_2e3]:null;
if(!_2e7){
if(d.defaultView&&d.defaultView.getComputedStyle){
var css=d.defaultView.getComputedStyle(elem,null);
_2e3=_2e3.replace(/([A-Z])/g,"-$1").toLowerCase();
_2e7=css?css.getPropertyValue(_2e3):null;
}else{
if(elem.currentStyle){
_2e7=elem.currentStyle[_2e3];
}
}
}
if(_2e3=="opacity"){
_2e7=parseFloat(_2e7);
}
if(/Opera/.test(navigator.userAgent)&&(MochiKit.Base.find(["left","top","right","bottom"],_2e3)!=-1)){
if(MochiKit.Style.getStyle(elem,"position")=="static"){
_2e7="auto";
}
}
return _2e7=="auto"?null:_2e7;
},setStyle:function(elem,_2ea){
elem=MochiKit.DOM.getElement(elem);
for(var name in _2ea){
if(name=="opacity"){
MochiKit.Style.setOpacity(elem,_2ea[name]);
}else{
elem.style[MochiKit.Base.camelize(name)]=_2ea[name];
}
}
},setOpacity:function(elem,o){
elem=MochiKit.DOM.getElement(elem);
var self=MochiKit.Style;
if(o==1){
var _2ef=/Gecko/.test(navigator.userAgent)&&!(/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent));
elem.style["opacity"]=_2ef?0.999999:1;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"");
}
}else{
if(o<0.00001){
o=0;
}
elem.style["opacity"]=o;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"")+"alpha(opacity="+o*100+")";
}
}
},getElementPosition:function(elem,_2f1){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
elem=dom.getElement(elem);
if(!elem||(!(elem.x&&elem.y)&&(!elem.parentNode===null||self.getStyle(elem,"display")=="none"))){
return undefined;
}
var c=new self.Coordinates(0,0);
var box=null;
var _2f6=null;
var d=MochiKit.DOM._document;
var de=d.documentElement;
var b=d.body;
if(!elem.parentNode&&elem.x&&elem.y){
c.x+=elem.x||0;
c.y+=elem.y||0;
}else{
if(elem.getBoundingClientRect){
box=elem.getBoundingClientRect();
c.x+=box.left+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
c.y+=box.top+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}else{
if(elem.offsetParent){
c.x+=elem.offsetLeft;
c.y+=elem.offsetTop;
_2f6=elem.offsetParent;
if(_2f6!=elem){
while(_2f6){
c.x+=_2f6.offsetLeft;
c.y+=_2f6.offsetTop;
_2f6=_2f6.offsetParent;
}
}
var ua=navigator.userAgent.toLowerCase();
if((typeof (opera)!="undefined"&&parseFloat(opera.version())<9)||(ua.indexOf("AppleWebKit")!=-1&&self.getStyle(elem,"position")=="absolute")){
c.x-=b.offsetLeft;
c.y-=b.offsetTop;
}
}
}
}
if(typeof (_2f1)!="undefined"){
_2f1=arguments.callee(_2f1);
if(_2f1){
c.x-=(_2f1.x||0);
c.y-=(_2f1.y||0);
}
}
if(elem.parentNode){
_2f6=elem.parentNode;
}else{
_2f6=null;
}
while(_2f6){
var _2fb=_2f6.tagName.toUpperCase();
if(_2fb==="BODY"||_2fb==="HTML"){
break;
}
var disp=self.getStyle(_2f6,"display");
if(disp!="inline"&&disp!="table-row"){
c.x-=_2f6.scrollLeft;
c.y-=_2f6.scrollTop;
}
if(_2f6.parentNode){
_2f6=_2f6.parentNode;
}else{
_2f6=null;
}
}
return c;
},setElementPosition:function(elem,_2fe,_2ff){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_2ff)=="undefined"){
_2ff="px";
}
var _300={};
var _301=MochiKit.Base.isUndefinedOrNull;
if(!_301(_2fe.x)){
_300["left"]=_2fe.x+_2ff;
}
if(!_301(_2fe.y)){
_300["top"]=_2fe.y+_2ff;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_300});
},getElementDimensions:function(elem){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
if(typeof (elem.w)=="number"||typeof (elem.h)=="number"){
return new self.Dimensions(elem.w||0,elem.h||0);
}
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var disp=self.getStyle(elem,"display");
if(disp!="none"&&disp!==""&&typeof (disp)!="undefined"){
return new self.Dimensions(elem.offsetWidth||0,elem.offsetHeight||0);
}
var s=elem.style;
var _307=s.visibility;
var _308=s.position;
s.visibility="hidden";
s.position="absolute";
s.display="";
var _309=elem.offsetWidth;
var _30a=elem.offsetHeight;
s.display="none";
s.position=_308;
s.visibility=_307;
return new self.Dimensions(_309,_30a);
},setElementDimensions:function(elem,_30c,_30d){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_30d)=="undefined"){
_30d="px";
}
var _30e={};
var _30f=MochiKit.Base.isUndefinedOrNull;
if(!_30f(_30c.w)){
_30e["width"]=_30c.w+_30d;
}
if(!_30f(_30c.h)){
_30e["height"]=_30c.h+_30d;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_30e});
},setDisplayForElement:function(_310,_311){
var _312=MochiKit.Base.extend(null,arguments,1);
var _313=MochiKit.DOM.getElement;
for(var i=0;i<_312.length;i++){
_311=_313(_312[i]);
if(_311){
_311.style.display=_310;
}
}
},getViewportDimensions:function(){
var d=new MochiKit.Style.Dimensions();
var w=MochiKit.DOM._window;
var b=MochiKit.DOM._document.body;
if(w.innerWidth){
d.w=w.innerWidth;
d.h=w.innerHeight;
}else{
if(b.parentElement.clientWidth){
d.w=b.parentElement.clientWidth;
d.h=b.parentElement.clientHeight;
}else{
if(b&&b.clientWidth){
d.w=b.clientWidth;
d.h=b.clientHeight;
}
}
}
return d;
},getViewportPosition:function(){
var c=new MochiKit.Style.Coordinates(0,0);
var d=MochiKit.DOM._document;
var de=d.documentElement;
var db=d.body;
if(de&&(de.scrollTop||de.scrollLeft)){
c.x=de.scrollLeft;
c.y=de.scrollTop;
}else{
if(db){
c.x=db.scrollLeft;
c.y=db.scrollTop;
}
}
return c;
},__new__:function(){
var m=MochiKit.Base;
this.elementPosition=this.getElementPosition;
this.elementDimensions=this.getElementDimensions;
this.hideElement=m.partial(this.setDisplayForElement,"none");
this.showElement=m.partial(this.setDisplayForElement,"block");
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.Style.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Style);


Date.ext={};Date.ext.util={};Date.ext.util.xPad=function(x,pad,r){if(typeof (r)=="undefined"){r=10}for(;parseInt(x,10)<r&&r>1;r/=10){x=pad.toString()+x}return x.toString()};Date.prototype.locale="en-GB";if(document.getElementsByTagName("html")&&document.getElementsByTagName("html")[0].lang){Date.prototype.locale=document.getElementsByTagName("html")[0].lang}Date.ext.locales={};Date.ext.locales.en={a:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],A:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],b:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],B:["January","February","March","April","May","June","July","August","September","October","November","December"],c:"%a %d %b %Y %T %Z",p:["AM","PM"],P:["am","pm"],x:"%d/%m/%y",X:"%T"};Date.ext.locales["en-US"]=Date.ext.locales.en;Date.ext.locales["en-US"].c="%a %d %b %Y %r %Z";Date.ext.locales["en-US"].x="%D";Date.ext.locales["en-US"].X="%r";Date.ext.locales["en-GB"]=Date.ext.locales.en;Date.ext.locales["en-AU"]=Date.ext.locales["en-GB"];Date.ext.formats={a:function(d){return Date.ext.locales[d.locale].a[d.getDay()]},A:function(d){return Date.ext.locales[d.locale].A[d.getDay()]},b:function(d){return Date.ext.locales[d.locale].b[d.getMonth()]},B:function(d){return Date.ext.locales[d.locale].B[d.getMonth()]},c:"toLocaleString",C:function(d){return Date.ext.util.xPad(parseInt(d.getFullYear()/100,10),0)},d:["getDate","0"],e:["getDate"," "],g:function(d){return Date.ext.util.xPad(parseInt(Date.ext.util.G(d)/100,10),0)},G:function(d){var y=d.getFullYear();var V=parseInt(Date.ext.formats.V(d),10);var W=parseInt(Date.ext.formats.W(d),10);if(W>V){y++}else{if(W===0&&V>=52){y--}}return y},H:["getHours","0"],I:function(d){var I=d.getHours()%12;return Date.ext.util.xPad(I===0?12:I,0)},j:function(d){var ms=d-new Date(""+d.getFullYear()+"/1/1 GMT");ms+=d.getTimezoneOffset()*60000;var doy=parseInt(ms/60000/60/24,10)+1;return Date.ext.util.xPad(doy,0,100)},m:function(d){return Date.ext.util.xPad(d.getMonth()+1,0)},M:["getMinutes","0"],p:function(d){return Date.ext.locales[d.locale].p[d.getHours()>=12?1:0]},P:function(d){return Date.ext.locales[d.locale].P[d.getHours()>=12?1:0]},S:["getSeconds","0"],u:function(d){var dow=d.getDay();return dow===0?7:dow},U:function(d){var doy=parseInt(Date.ext.formats.j(d),10);var rdow=6-d.getDay();var woy=parseInt((doy+rdow)/7,10);return Date.ext.util.xPad(woy,0)},V:function(d){var woy=parseInt(Date.ext.formats.W(d),10);var dow1_1=(new Date(""+d.getFullYear()+"/1/1")).getDay();var idow=woy+(dow1_1>4||dow1_1<=1?0:1);if(idow==53&&(new Date(""+d.getFullYear()+"/12/31")).getDay()<4){idow=1}else{if(idow===0){idow=Date.ext.formats.V(new Date(""+(d.getFullYear()-1)+"/12/31"))}}return Date.ext.util.xPad(idow,0)},w:"getDay",W:function(d){var doy=parseInt(Date.ext.formats.j(d),10);var rdow=7-Date.ext.formats.u(d);var woy=parseInt((doy+rdow)/7,10);return Date.ext.util.xPad(woy,0,10)},y:function(d){return Date.ext.util.xPad(d.getFullYear()%100,0)},Y:"getFullYear",z:function(d){var o=d.getTimezoneOffset();var H=Date.ext.util.xPad(parseInt(Math.abs(o/60),10),0);var M=Date.ext.util.xPad(o%60,0);return(o>0?"-":"+")+H+M},Z:function(d){return d.toString().replace(/^.*\(([^)]+)\)$/,"$1")},"%":function(d){return"%"}};Date.ext.aggregates={c:"locale",D:"%m/%d/%y",h:"%b",n:"\n",r:"%I:%M:%S %p",R:"%H:%M",t:"\t",T:"%H:%M:%S",x:"locale",X:"locale"};Date.ext.aggregates.z=Date.ext.formats.z(new Date());Date.ext.aggregates.Z=Date.ext.formats.Z(new Date());Date.ext.unsupported={};Date.prototype.strftime=function(fmt){if(!(this.locale in Date.ext.locales)){if(this.locale.replace(/-[a-zA-Z]+$/,"") in Date.ext.locales){this.locale=this.locale.replace(/-[a-zA-Z]+$/,"")}else{this.locale="en-GB"}}var d=this;while(fmt.match(/%[cDhnrRtTxXzZ]/)){fmt=fmt.replace(/%([cDhnrRtTxXzZ])/g,function(m0,m1){var f=Date.ext.aggregates[m1];return(f=="locale"?Date.ext.locales[d.locale][m1]:f)})}var str=fmt.replace(/%([aAbBCdegGHIjmMpPSuUVwWyY%])/g,function(m0,m1){var f=Date.ext.formats[m1];if(typeof (f)=="string"){return d[f]()}else{if(typeof (f)=="function"){return f.call(d,d)}else{if(typeof (f)=="object"&&typeof (f[0])=="string"){return Date.ext.util.xPad(d[f[0]](),f[1])}else{return m1}}}});d=null;return str};
DygraphLayout=function(_1,_2){
this.dygraph_=_1;
this.options={};
MochiKit.Base.update(this.options,_2?_2:{});
this.datasets=new Array();
};
DygraphLayout.prototype.attr_=function(_3){
return this.dygraph_.attr_(_3);
};
DygraphLayout.prototype.addDataset=function(_4,_5){
this.datasets[_4]=_5;
};
DygraphLayout.prototype.evaluate=function(){
this._evaluateLimits();
this._evaluateLineCharts();
this._evaluateLineTicks();
};
DygraphLayout.prototype._evaluateLimits=function(){
this.minxval=this.maxxval=null;
for(var _6 in this.datasets){
var _7=this.datasets[_6];
var x1=_7[0][0];
if(!this.minxval||x1<this.minxval){
this.minxval=x1;
}
var x2=_7[_7.length-1][0];
if(!this.maxxval||x2>this.maxxval){
this.maxxval=x2;
}
}
this.xrange=this.maxxval-this.minxval;
this.xscale=(this.xrange!=0?1/this.xrange:1);
this.minyval=this.options.yAxis[0];
this.maxyval=this.options.yAxis[1];
this.yrange=this.maxyval-this.minyval;
this.yscale=(this.yrange!=0?1/this.yrange:1);
};
DygraphLayout.prototype._evaluateLineCharts=function(){
this.points=new Array();
for(var _10 in this.datasets){
var _11=this.datasets[_10];
for(var j=0;j<_11.length;j++){
var _13=_11[j];
var _14={x:((parseFloat(_13[0])-this.minxval)*this.xscale),y:1-((parseFloat(_13[1])-this.minyval)*this.yscale),xval:parseFloat(_13[0]),yval:parseFloat(_13[1]),name:_10};
if(_14.y<=0){
_14.y=0;
}
if(_14.y>=1){
_14.y=1;
}
if((_14.x>=0)&&(_14.x<=1)){
this.points.push(_14);
}
}
}
};
DygraphLayout.prototype._evaluateLineTicks=function(){
this.xticks=new Array();
for(var i=0;i<this.options.xTicks.length;i++){
var _16=this.options.xTicks[i];
var _17=_16.label;
var pos=this.xscale*(_16.v-this.minxval);
if((pos>=0)&&(pos<=1)){
this.xticks.push([pos,_17]);
}
}
this.yticks=new Array();
for(var i=0;i<this.options.yTicks.length;i++){
var _16=this.options.yTicks[i];
var _17=_16.label;
var pos=1-(this.yscale*(_16.v-this.minyval));
if((pos>=0)&&(pos<=1)){
this.yticks.push([pos,_17]);
}
}
};
DygraphLayout.prototype.evaluateWithError=function(){
this.evaluate();
if(!this.options.errorBars){
return;
}
var i=0;
for(var _19 in this.datasets){
var j=0;
var _20=this.datasets[_19];
for(var j=0;j<_20.length;j++,i++){
var _21=_20[j];
var xv=parseFloat(_21[0]);
var yv=parseFloat(_21[1]);
if(xv==this.points[i].xval&&yv==this.points[i].yval){
this.points[i].errorMinus=parseFloat(_21[2]);
this.points[i].errorPlus=parseFloat(_21[3]);
}
}
}
};
DygraphLayout.prototype.removeAllDatasets=function(){
delete this.datasets;
this.datasets=new Array();
};
DygraphLayout.prototype.updateOptions=function(_24){
MochiKit.Base.update(this.options,_24?_24:{});
};
DygraphCanvasRenderer=function(_25,_26,_27,_28){
this.dygraph_=_25;
this.options={"strokeWidth":0.5,"drawXAxis":true,"drawYAxis":true,"axisLineColor":Color.blackColor(),"axisLineWidth":0.5,"axisTickSize":3,"axisLabelColor":Color.blackColor(),"axisLabelFont":"Arial","axisLabelFontSize":9,"axisLabelWidth":50,"drawYGrid":true,"drawXGrid":true,"gridLineColor":MochiKit.Color.Color.grayColor()};
MochiKit.Base.update(this.options,_28);
this.layout=_27;
this.element=_26;
this.container=this.element.parentNode;
this.isIE=(/MSIE/.test(navigator.userAgent)&&!window.opera);
if(this.isIE&&!isNil(G_vmlCanvasManager)){
this.IEDelay=0.5;
this.maxTries=5;
this.renderDelay=null;
this.clearDelay=null;
this.element=G_vmlCanvasManager.initElement(this.element);
}
this.height=this.element.height;
this.width=this.element.width;
if(!this.isIE&&!(DygraphCanvasRenderer.isSupported(this.element))){
throw "Canvas is not supported.";
}
this.xlabels=new Array();
this.ylabels=new Array();
this.area={x:this.options.yAxisLabelWidth+2*this.options.axisTickSize,y:0};
this.area.w=this.width-this.area.x-this.options.rightGap;
this.area.h=this.height-this.options.axisLabelFontSize-2*this.options.axisTickSize;
this.container.style.position="relative";
this.container.style.width=this.width+"px";
};
DygraphCanvasRenderer.prototype.clear=function(){
if(this.isIE){
try{
if(this.clearDelay){
this.clearDelay.cancel();
this.clearDelay=null;
}
var _29=this.element.getContext("2d");
}
catch(e){
this.clearDelay=MochiKit.Async.wait(this.IEDelay);
this.clearDelay.addCallback(bind(this.clear,this));
return;
}
}
var _29=this.element.getContext("2d");
_29.clearRect(0,0,this.width,this.height);
for(var i=0;i<this.xlabels.length;i++){
var el=this.xlabels[i];
el.parentNode.removeChild(el);
}
for(var i=0;i<this.ylabels.length;i++){
var el=this.ylabels[i];
el.parentNode.removeChild(el);
}
this.xlabels=new Array();
this.ylabels=new Array();
};
DygraphCanvasRenderer.isSupported=function(_31){
var _32=null;
try{
if(MochiKit.Base.isUndefinedOrNull(_31)){
_32=document.createElement("canvas");
}else{
_32=_31;
}
var _33=_32.getContext("2d");
}
catch(e){
var ie=navigator.appVersion.match(/MSIE (\d\.\d)/);
var _35=(navigator.userAgent.toLowerCase().indexOf("opera")!=-1);
if((!ie)||(ie[1]<6)||(_35)){
return false;
}
return true;
}
return true;
};
DygraphCanvasRenderer.prototype.render=function(){
var ctx=this.element.getContext("2d");
if(this.options.drawYGrid){
var _37=this.layout.yticks;
ctx.save();
ctx.strokeStyle=this.options.gridLineColor.toRGBString();
ctx.lineWidth=this.options.axisLineWidth;
for(var i=0;i<_37.length;i++){
var x=this.area.x;
var y=this.area.y+_37[i][0]*this.area.h;
ctx.beginPath();
ctx.moveTo(x,y);
ctx.lineTo(x+this.area.w,y);
ctx.closePath();
ctx.stroke();
}
}
if(this.options.drawXGrid){
var _37=this.layout.xticks;
ctx.save();
ctx.strokeStyle=this.options.gridLineColor.toRGBString();
ctx.lineWidth=this.options.axisLineWidth;
for(var i=0;i<_37.length;i++){
var x=this.area.x+_37[i][0]*this.area.w;
var y=this.area.y+this.area.h;
ctx.beginPath();
ctx.moveTo(x,y);
ctx.lineTo(x,this.area.y);
ctx.closePath();
ctx.stroke();
}
}
this._renderLineChart();
this._renderAxis();
};
DygraphCanvasRenderer.prototype._renderAxis=function(){
if(!this.options.drawXAxis&&!this.options.drawYAxis){
return;
}
var _40=this.element.getContext("2d");
var _41={"style":{"position":"absolute","fontSize":this.options.axisLabelFontSize+"px","zIndex":10,"color":this.options.axisLabelColor.toRGBString(),"width":this.options.axisLabelWidth+"px","overflow":"hidden"}};
_40.save();
_40.strokeStyle=this.options.axisLineColor.toRGBString();
_40.lineWidth=this.options.axisLineWidth;
if(this.options.drawYAxis){
if(this.layout.yticks){
for(var i=0;i<this.layout.yticks.length;i++){
var _42=this.layout.yticks[i];
if(typeof (_42)=="function"){
return;
}
var x=this.area.x;
var y=this.area.y+_42[0]*this.area.h;
_40.beginPath();
_40.moveTo(x,y);
_40.lineTo(x-this.options.axisTickSize,y);
_40.closePath();
_40.stroke();
var _43=DIV(_41,_42[1]);
var top=(y-this.options.axisLabelFontSize/2);
if(top<0){
top=0;
}
if(top+this.options.axisLabelFontSize+3>this.height){
_43.style.bottom="0px";
}else{
_43.style.top=top+"px";
}
_43.style.left="0px";
_43.style.textAlign="right";
_43.style.width=this.options.yAxisLabelWidth+"px";
this.container.appendChild(_43);
this.ylabels.push(_43);
}
var _45=this.ylabels[0];
var _46=this.options.axisLabelFontSize;
var _47=parseInt(_45.style.top)+_46;
if(_47>this.height-_46){
_45.style.top=(parseInt(_45.style.top)-_46/2)+"px";
}
}
_40.beginPath();
_40.moveTo(this.area.x,this.area.y);
_40.lineTo(this.area.x,this.area.y+this.area.h);
_40.closePath();
_40.stroke();
}
if(this.options.drawXAxis){
if(this.layout.xticks){
for(var i=0;i<this.layout.xticks.length;i++){
var _42=this.layout.xticks[i];
if(typeof (dataset)=="function"){
return;
}
var x=this.area.x+_42[0]*this.area.w;
var y=this.area.y+this.area.h;
_40.beginPath();
_40.moveTo(x,y);
_40.lineTo(x,y+this.options.axisTickSize);
_40.closePath();
_40.stroke();
var _43=DIV(_41,_42[1]);
_43.style.textAlign="center";
_43.style.bottom="0px";
var _48=(x-this.options.axisLabelWidth/2);
if(_48+this.options.axisLabelWidth>this.width){
_48=this.width-this.options.xAxisLabelWidth;
_43.style.textAlign="right";
}
if(_48<0){
_48=0;
_43.style.textAlign="left";
}
_43.style.left=_48+"px";
_43.style.width=this.options.xAxisLabelWidth+"px";
this.container.appendChild(_43);
this.xlabels.push(_43);
}
}
_40.beginPath();
_40.moveTo(this.area.x,this.area.y+this.area.h);
_40.lineTo(this.area.x+this.area.w,this.area.y+this.area.h);
_40.closePath();
_40.stroke();
}
_40.restore();
};
DygraphCanvasRenderer.prototype._renderLineChart=function(){
var _49=this.element.getContext("2d");
var _50=this.options.colorScheme.length;
var _51=this.options.colorScheme;
var _52=MochiKit.Base.keys(this.layout.datasets);
var _53=this.layout.options.errorBars;
var _54=_52.length;
var _55=MochiKit.Base.bind;
var _56=MochiKit.Base.partial;
for(var i=0;i<this.layout.points.length;i++){
var _57=this.layout.points[i];
_57.canvasx=this.area.w*_57.x+this.area.x;
_57.canvasy=this.area.h*_57.y+this.area.y;
}
var _58=function(x){
return x&&!isNaN(x);
};
var _59=function(ctx){
for(var i=0;i<_54;i++){
var _60=_52[i];
var _61=_51[i%_50];
var _62=this.options.strokeColorTransform;
_49.save();
_49.strokeStyle=_61.toRGBString();
_49.lineWidth=this.options.strokeWidth;
var _57=this.layout.points[0];
var _63=this.dygraph_.attr_("pointSize");
var _64=null,prevY=null;
var _65=this.dygraph_.attr_("drawPoints");
var _66=this.layout.points;
for(var j=0;j<_66.length;j++){
var _57=_66[j];
if(_57.name==_60){
if(!_58(_57.canvasy)){
_64=prevY=null;
}else{
var _67=(!_64&&(j==_66.length-1||!_58(_66[j+1].canvasy)));
if(!_64){
_64=_57.canvasx;
prevY=_57.canvasy;
}else{
ctx.beginPath();
ctx.moveTo(_64,prevY);
_64=_57.canvasx;
prevY=_57.canvasy;
ctx.lineTo(_64,prevY);
ctx.stroke();
}
if(_65||_67){
ctx.beginPath();
ctx.fillStyle=_61.toRGBString();
ctx.arc(_57.canvasx,_57.canvasy,_63,0,360,false);
ctx.fill();
}
}
}
}
}
};
var _68=function(ctx){
for(var i=0;i<_54;i++){
var _69=_52[i];
var _70=_51[i%_50];
var _71=this.options.strokeColorTransform;
_49.save();
_49.strokeStyle=_70.toRGBString();
_49.lineWidth=this.options.strokeWidth;
var _72=-1;
var _73=[-1,-1];
var _74=0;
var _75=this.layout.yscale;
var _76=_70.colorWithAlpha(0.15);
ctx.fillStyle=_76.toRGBString();
ctx.beginPath();
for(var j=0;j<this.layout.points.length;j++){
var _77=this.layout.points[j];
_74++;
if(_77.name==_69){
if(!_77.y||isNaN(_77.y)){
_72=-1;
return;
}
var _78=[_77.y-_77.errorPlus*_75,_77.y+_77.errorMinus*_75];
_78[0]=this.area.h*_78[0]+this.area.y;
_78[1]=this.area.h*_78[1]+this.area.y;
if(_72>=0){
ctx.moveTo(_72,_73[0]);
ctx.lineTo(_77.canvasx,_78[0]);
ctx.lineTo(_77.canvasx,_78[1]);
ctx.lineTo(_72,_73[1]);
ctx.closePath();
}
_73[0]=_78[0];
_73[1]=_78[1];
_72=_77.canvasx;
}
}
ctx.fill();
}
};
if(_53){
_55(_68,this)(_49);
}
_55(_59,this)(_49);
_49.restore();
};
Dygraph=function(div,_80,_81){
if(arguments.length>0){
if(arguments.length==4){
this.warn("Using deprecated four-argument dygraph constructor");
this.__old_init__(div,_80,arguments[2],arguments[3]);
}else{
this.__init__(div,_80,_81);
}
}
};
Dygraph.NAME="Dygraph";
Dygraph.VERSION="1.2";
Dygraph.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
Dygraph.toString=function(){
return this.__repr__();
};
Dygraph.DEFAULT_ROLL_PERIOD=1;
Dygraph.DEFAULT_WIDTH=480;
Dygraph.DEFAULT_HEIGHT=320;
Dygraph.AXIS_LINE_WIDTH=0.3;
Dygraph.DEFAULT_ATTRS={highlightCircleSize:3,pixelsPerXLabel:60,pixelsPerYLabel:30,labelsDivWidth:250,labelsDivStyles:{},labelsSeparateLines:false,labelsKMB:false,strokeWidth:1,axisTickSize:3,axisLabelFontSize:14,xAxisLabelWidth:50,yAxisLabelWidth:50,rightGap:5,showRoller:false,xValueFormatter:Dygraph.dateString_,xValueParser:Dygraph.dateParser,xTicker:Dygraph.dateTicker,sigma:2,errorBars:false,fractions:false,wilsonInterval:true,customBars:false};
Dygraph.DEBUG=1;
Dygraph.INFO=2;
Dygraph.WARNING=3;
Dygraph.ERROR=3;
Dygraph.prototype.__old_init__=function(div,_82,_83,_84){
if(_83!=null){
var _85=["Date"];
for(var i=0;i<_83.length;i++){
_85.push(_83[i]);
}
MochiKit.Base.update(_84,{"labels":_85});
}
this.__init__(div,_82,_84);
};
Dygraph.prototype.__init__=function(div,_86,_87){
if(_87==null){
_87={};
}
this.maindiv_=div;
this.file_=_86;
this.rollPeriod_=_87.rollPeriod||Dygraph.DEFAULT_ROLL_PERIOD;
this.previousVerticalX_=-1;
this.fractions_=_87.fractions||false;
this.dateWindow_=_87.dateWindow||null;
this.valueRange_=_87.valueRange||null;
this.wilsonInterval_=_87.wilsonInterval||true;
div.innerHTML="";
if(div.style.width==""){
div.style.width=Dygraph.DEFAULT_WIDTH+"px";
}
if(div.style.height==""){
div.style.height=Dygraph.DEFAULT_HEIGHT+"px";
}
this.width_=parseInt(div.style.width,10);
this.height_=parseInt(div.style.height,10);
this.user_attrs_={};
MochiKit.Base.update(this.user_attrs_,_87);
this.attrs_={};
MochiKit.Base.update(this.attrs_,Dygraph.DEFAULT_ATTRS);
this.labelsFromCSV_=(this.attr_("labels")==null);
this.createInterface_();
this.layoutOptions_={"errorBars":(this.attr_("errorBars")||this.attr_("customBars")),"xOriginIsZero":false};
MochiKit.Base.update(this.layoutOptions_,this.attrs_);
MochiKit.Base.update(this.layoutOptions_,this.user_attrs_);
this.layout_=new DygraphLayout(this,this.layoutOptions_);
this.renderOptions_={colorScheme:this.colors_,strokeColor:null,axisLineWidth:Dygraph.AXIS_LINE_WIDTH};
MochiKit.Base.update(this.renderOptions_,this.attrs_);
MochiKit.Base.update(this.renderOptions_,this.user_attrs_);
this.plotter_=new DygraphCanvasRenderer(this,this.hidden_,this.layout_,this.renderOptions_);
this.createStatusMessage_();
this.createRollInterface_();
this.createDragInterface_();
this.start_();
};
Dygraph.prototype.attr_=function(_88){
if(typeof (this.user_attrs_[_88])!="undefined"){
return this.user_attrs_[_88];
}else{
if(typeof (this.attrs_[_88])!="undefined"){
return this.attrs_[_88];
}else{
return null;
}
}
};
Dygraph.prototype.log=function(_89,_90){
if(typeof (console)!="undefined"){
switch(_89){
case Dygraph.DEBUG:
console.debug("dygraphs: "+_90);
break;
case Dygraph.INFO:
console.info("dygraphs: "+_90);
break;
case Dygraph.WARNING:
console.warn("dygraphs: "+_90);
break;
case Dygraph.ERROR:
console.error("dygraphs: "+_90);
break;
}
}
};
Dygraph.prototype.info=function(_91){
this.log(Dygraph.INFO,_91);
};
Dygraph.prototype.warn=function(_92){
this.log(Dygraph.WARNING,_92);
};
Dygraph.prototype.error=function(_93){
this.log(Dygraph.ERROR,_93);
};
Dygraph.prototype.rollPeriod=function(){
return this.rollPeriod_;
};
Dygraph.addEvent=function(el,evt,fn){
var _96=function(e){
if(!e){
var e=window.event;
}
fn(e);
};
if(window.addEventListener){
el.addEventListener(evt,_96,false);
}else{
el.attachEvent("on"+evt,_96);
}
};
Dygraph.prototype.createInterface_=function(){
var _98=this.maindiv_;
this.graphDiv=document.createElement("div");
this.graphDiv.style.width=this.width_+"px";
this.graphDiv.style.height=this.height_+"px";
_98.appendChild(this.graphDiv);
this.canvas_=document.createElement("canvas");
this.canvas_.style.position="absolute";
this.canvas_.width=this.width_;
this.canvas_.height=this.height_;
this.graphDiv.appendChild(this.canvas_);
this.hidden_=this.createPlotKitCanvas_(this.canvas_);
var _99=this;
Dygraph.addEvent(this.hidden_,"mousemove",function(e){
_99.mouseMove_(e);
});
Dygraph.addEvent(this.hidden_,"mouseout",function(e){
_99.mouseOut_(e);
});
};
Dygraph.prototype.createPlotKitCanvas_=function(_100){
var h=document.createElement("canvas");
h.style.position="absolute";
h.style.top=_100.style.top;
h.style.left=_100.style.left;
h.width=this.width_;
h.height=this.height_;
this.graphDiv.appendChild(h);
return h;
};
Dygraph.prototype.setColors_=function(){
var num=this.attr_("labels").length-1;
this.colors_=[];
var _103=this.attr_("colors");
if(!_103){
var sat=this.attr_("colorSaturation")||1;
var val=this.attr_("colorValue")||0.5;
for(var i=1;i<=num;i++){
var hue=(1*i/(1+num));
this.colors_.push(MochiKit.Color.Color.fromHSV(hue,sat,val));
}
}else{
for(var i=0;i<num;i++){
var _107=_103[i%_103.length];
this.colors_.push(MochiKit.Color.Color.fromString(_107));
}
}
this.renderOptions_.colorScheme=this.colors_;
MochiKit.Base.update(this.plotter_.options,this.renderOptions_);
MochiKit.Base.update(this.layoutOptions_,this.user_attrs_);
MochiKit.Base.update(this.layoutOptions_,this.attrs_);
};
Dygraph.findPosX=function(obj){
var _109=0;
if(obj.offsetParent){
while(obj.offsetParent){
_109+=obj.offsetLeft;
obj=obj.offsetParent;
}
}else{
if(obj.x){
_109+=obj.x;
}
}
return _109;
};
Dygraph.findPosY=function(obj){
var _110=0;
if(obj.offsetParent){
while(obj.offsetParent){
_110+=obj.offsetTop;
obj=obj.offsetParent;
}
}else{
if(obj.y){
_110+=obj.y;
}
}
return _110;
};
Dygraph.prototype.createStatusMessage_=function(){
if(!this.attr_("labelsDiv")){
var _111=this.attr_("labelsDivWidth");
var _112={"position":"absolute","fontSize":"14px","zIndex":10,"width":_111+"px","top":"0px","left":(this.width_-_111-2)+"px","background":"white","textAlign":"left","overflow":"hidden"};
MochiKit.Base.update(_112,this.attr_("labelsDivStyles"));
var div=document.createElement("div");
for(var name in _112){
div.style[name]=_112[name];
}
this.graphDiv.appendChild(div);
this.attrs_.labelsDiv=div;
}
};
Dygraph.prototype.createRollInterface_=function(){
var _114=this.attr_("showRoller")?"block":"none";
var _115={"position":"absolute","zIndex":10,"top":(this.plotter_.area.h-25)+"px","left":(this.plotter_.area.x+1)+"px","display":_114};
var _116=document.createElement("input");
_116.type="text";
_116.size="2";
_116.value=this.rollPeriod_;
for(var name in _115){
_116.style[name]=_115[name];
}
var pa=this.graphDiv;
pa.appendChild(_116);
var _118=this;
_116.onchange=function(){
_118.adjustRoll(_116.value);
};
return _116;
};
Dygraph.pageX=function(e){
if(e.pageX){
return (!e.pageX||e.pageX<0)?0:e.pageX;
}else{
var de=document;
var b=document.body;
return e.clientX+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
}
};
Dygraph.pageY=function(e){
if(e.pageY){
return (!e.pageY||e.pageY<0)?0:e.pageY;
}else{
var de=document;
var b=document.body;
return e.clientY+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}
};
Dygraph.prototype.createDragInterface_=function(){
var self=this;
var _122=false;
var _123=null;
var _124=null;
var _125=null;
var _126=null;
var _127=null;
var px=0;
var py=0;
var getX=function(e){
return Dygraph.pageX(e)-px;
};
var getY=function(e){
return Dygraph.pageX(e)-py;
};
Dygraph.addEvent(this.hidden_,"mousemove",function(_132){
if(_122){
_125=getX(_132);
_126=getY(_132);
self.drawZoomRect_(_123,_125,_127);
_127=_125;
}
});
Dygraph.addEvent(this.hidden_,"mousedown",function(_133){
_122=true;
px=Dygraph.findPosX(self.canvas_);
py=Dygraph.findPosY(self.canvas_);
_123=getX(_133);
_124=getY(_133);
});
Dygraph.addEvent(document,"mouseup",function(_134){
if(_122){
_122=false;
_123=null;
_124=null;
}
});
Dygraph.addEvent(this.hidden_,"mouseout",function(_135){
if(_122){
_125=null;
_126=null;
}
});
Dygraph.addEvent(this.hidden_,"mouseup",function(_136){
if(_122){
_122=false;
_125=getX(_136);
_126=getY(_136);
var _137=Math.abs(_125-_123);
var _138=Math.abs(_126-_124);
if(_137<2&&_138<2&&self.attr_("clickCallback")!=null&&self.lastx_!=undefined){
self.attr_("clickCallback")(_136,new Date(self.lastx_));
}
if(_137>=10){
self.doZoom_(Math.min(_123,_125),Math.max(_123,_125));
}else{
self.canvas_.getContext("2d").clearRect(0,0,self.canvas_.width,self.canvas_.height);
}
_123=null;
_124=null;
}
});
Dygraph.addEvent(this.hidden_,"dblclick",function(_139){
self.dateWindow_=null;
self.drawGraph_(self.rawData_);
var _140=self.rawData_[0][0];
var _141=self.rawData_[self.rawData_.length-1][0];
if(self.attr_("zoomCallback")){
self.attr_("zoomCallback")(_140,_141);
}
});
};
Dygraph.prototype.drawZoomRect_=function(_142,endX,_144){
var ctx=this.canvas_.getContext("2d");
if(_144){
ctx.clearRect(Math.min(_142,_144),0,Math.abs(_142-_144),this.height_);
}
if(endX&&_142){
ctx.fillStyle="rgba(128,128,128,0.33)";
ctx.fillRect(Math.min(_142,endX),0,Math.abs(endX-_142),this.height_);
}
};
Dygraph.prototype.doZoom_=function(lowX,_146){
var _147=this.layout_.points;
var _148=null;
var _149=null;
for(var i=0;i<_147.length;i++){
var cx=_147[i].canvasx;
var x=_147[i].xval;
if(cx<lowX&&(_148==null||x>_148)){
_148=x;
}
if(cx>_146&&(_149==null||x<_149)){
_149=x;
}
}
if(_148==null){
_148=_147[0].xval;
}
if(_149==null){
_149=_147[_147.length-1].xval;
}
this.dateWindow_=[_148,_149];
this.drawGraph_(this.rawData_);
if(this.attr_("zoomCallback")){
this.attr_("zoomCallback")(_148,_149);
}
};
Dygraph.prototype.mouseMove_=function(_151){
var _152=Dygraph.pageX(_151)-Dygraph.findPosX(this.hidden_);
var _153=this.layout_.points;
var _154=-1;
var _155=-1;
var _156=1e+100;
var idx=-1;
for(var i=0;i<_153.length;i++){
var dist=Math.abs(_153[i].canvasx-_152);
if(dist>_156){
break;
}
_156=dist;
idx=i;
}
if(idx>=0){
_154=_153[idx].xval;
}
if(_152>_153[_153.length-1].canvasx){
_154=_153[_153.length-1].xval;
}
var _159=[];
for(var i=0;i<_153.length;i++){
if(_153[i].xval==_154){
_159.push(_153[i]);
}
}
var _160=this.attr_("highlightCircleSize");
var ctx=this.canvas_.getContext("2d");
if(this.previousVerticalX_>=0){
var px=this.previousVerticalX_;
ctx.clearRect(px-_160-1,0,2*_160+2,this.height_);
}
var isOK=function(x){
return x&&!isNaN(x);
};
if(_159.length>0){
var _152=_159[0].canvasx;
var _162=this.attr_("xValueFormatter")(_154,this)+":";
var clen=this.colors_.length;
for(var i=0;i<_159.length;i++){
if(!isOK(_159[i].canvasy)){
continue;
}
if(this.attr_("labelsSeparateLines")){
_162+="<br/>";
}
var _164=_159[i];
_162+=" <b><font color='"+this.colors_[i%clen].toHexString()+"'>"+_164.name+"</font></b>:"+this.round_(_164.yval,2);
}
this.attr_("labelsDiv").innerHTML=_162;
this.lastx_=_154;
ctx.save();
for(var i=0;i<_159.length;i++){
if(!isOK(_159[i%clen].canvasy)){
continue;
}
ctx.beginPath();
ctx.fillStyle=this.colors_[i%clen].toRGBString();
ctx.arc(_152,_159[i%clen].canvasy,_160,0,360,false);
ctx.fill();
}
ctx.restore();
this.previousVerticalX_=_152;
}
};
Dygraph.prototype.mouseOut_=function(_165){
var ctx=this.canvas_.getContext("2d");
ctx.clearRect(0,0,this.width_,this.height_);
this.attr_("labelsDiv").innerHTML="";
};
Dygraph.zeropad=function(x){
if(x<10){
return "0"+x;
}else{
return ""+x;
}
};
Dygraph.prototype.hmsString_=function(date){
var _167=Dygraph.zeropad;
var d=new Date(date);
if(d.getSeconds()){
return _167(d.getHours())+":"+_167(d.getMinutes())+":"+_167(d.getSeconds());
}else{
if(d.getMinutes()){
return _167(d.getHours())+":"+_167(d.getMinutes());
}else{
return _167(d.getHours());
}
}
};
Dygraph.dateString_=function(date,self){
var _169=Dygraph.zeropad;
var d=new Date(date);
var year=""+d.getFullYear();
var _171=_169(d.getMonth()+1);
var day=_169(d.getDate());
var ret="";
var frac=d.getHours()*3600+d.getMinutes()*60+d.getSeconds();
if(frac){
ret=" "+self.hmsString_(date);
}
return year+"/"+_171+"/"+day+ret;
};
Dygraph.prototype.round_=function(num,_175){
var _176=Math.pow(10,_175);
return Math.round(num*_176)/_176;
};
Dygraph.prototype.loadedEvent_=function(data){
this.rawData_=this.parseCSV_(data);
this.drawGraph_(this.rawData_);
};
Dygraph.prototype.months=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
Dygraph.prototype.quarters=["Jan","Apr","Jul","Oct"];
Dygraph.prototype.addXTicks_=function(){
var _178,endDate;
if(this.dateWindow_){
_178=this.dateWindow_[0];
endDate=this.dateWindow_[1];
}else{
_178=this.rawData_[0][0];
endDate=this.rawData_[this.rawData_.length-1][0];
}
var _179=this.attr_("xTicker")(_178,endDate,this);
this.layout_.updateOptions({xTicks:_179});
};
Dygraph.SECONDLY=0;
Dygraph.TEN_SECONDLY=1;
Dygraph.THIRTY_SECONDLY=2;
Dygraph.MINUTELY=3;
Dygraph.TEN_MINUTELY=4;
Dygraph.THIRTY_MINUTELY=5;
Dygraph.HOURLY=6;
Dygraph.SIX_HOURLY=7;
Dygraph.DAILY=8;
Dygraph.WEEKLY=9;
Dygraph.MONTHLY=10;
Dygraph.QUARTERLY=11;
Dygraph.BIANNUAL=12;
Dygraph.ANNUAL=13;
Dygraph.DECADAL=14;
Dygraph.NUM_GRANULARITIES=15;
Dygraph.SHORT_SPACINGS=[];
Dygraph.SHORT_SPACINGS[Dygraph.SECONDLY]=1000*1;
Dygraph.SHORT_SPACINGS[Dygraph.TEN_SECONDLY]=1000*10;
Dygraph.SHORT_SPACINGS[Dygraph.THIRTY_SECONDLY]=1000*30;
Dygraph.SHORT_SPACINGS[Dygraph.MINUTELY]=1000*60;
Dygraph.SHORT_SPACINGS[Dygraph.TEN_MINUTELY]=1000*60*10;
Dygraph.SHORT_SPACINGS[Dygraph.THIRTY_MINUTELY]=1000*60*30;
Dygraph.SHORT_SPACINGS[Dygraph.HOURLY]=1000*3600;
Dygraph.SHORT_SPACINGS[Dygraph.HOURLY]=1000*3600*6;
Dygraph.SHORT_SPACINGS[Dygraph.DAILY]=1000*86400;
Dygraph.SHORT_SPACINGS[Dygraph.WEEKLY]=1000*604800;
Dygraph.prototype.NumXTicks=function(_180,_181,_182){
if(_182<Dygraph.MONTHLY){
var _183=Dygraph.SHORT_SPACINGS[_182];
return Math.floor(0.5+1*(_181-_180)/_183);
}else{
var _184=1;
var _185=12;
if(_182==Dygraph.QUARTERLY){
_185=3;
}
if(_182==Dygraph.BIANNUAL){
_185=2;
}
if(_182==Dygraph.ANNUAL){
_185=1;
}
if(_182==Dygraph.DECADAL){
_185=1;
_184=10;
}
var _186=365.2524*24*3600*1000;
var _187=1*(_181-_180)/_186;
return Math.floor(0.5+1*_187*_185/_184);
}
};
Dygraph.prototype.GetXAxis=function(_188,_189,_190){
var _191=[];
if(_190<Dygraph.MONTHLY){
var _192=Dygraph.SHORT_SPACINGS[_190];
var _193="%d%b";
if(_190<Dygraph.HOURLY){
_188=_192*Math.floor(0.5+_188/_192);
}
for(var t=_188;t<=_189;t+=_192){
var d=new Date(t);
var frac=d.getHours()*3600+d.getMinutes()*60+d.getSeconds();
if(frac==0||_190>=Dygraph.DAILY){
_191.push({v:t,label:new Date(t+3600*1000).strftime(_193)});
}else{
_191.push({v:t,label:this.hmsString_(t)});
}
}
}else{
var _195;
var _196=1;
if(_190==Dygraph.MONTHLY){
_195=[0,1,2,3,4,5,6,7,8,9,10,11,12];
}else{
if(_190==Dygraph.QUARTERLY){
_195=[0,3,6,9];
}else{
if(_190==Dygraph.BIANNUAL){
_195=[0,6];
}else{
if(_190==Dygraph.ANNUAL){
_195=[0];
}else{
if(_190==Dygraph.DECADAL){
_195=[0];
_196=10;
}
}
}
}
}
var _197=new Date(_188).getFullYear();
var _198=new Date(_189).getFullYear();
var _199=Dygraph.zeropad;
for(var i=_197;i<=_198;i++){
if(i%_196!=0){
continue;
}
for(var j=0;j<_195.length;j++){
var _200=i+"/"+_199(1+_195[j])+"/01";
var t=Date.parse(_200);
if(t<_188||t>_189){
continue;
}
_191.push({v:t,label:new Date(t).strftime("%b %y")});
}
}
}
return _191;
};
Dygraph.dateTicker=function(_201,_202,self){
var _203=-1;
for(var i=0;i<Dygraph.NUM_GRANULARITIES;i++){
var _204=self.NumXTicks(_201,_202,i);
if(self.width_/_204>=self.attr_("pixelsPerXLabel")){
_203=i;
break;
}
}
if(_203>=0){
return self.GetXAxis(_201,_202,_203);
}else{
}
};
Dygraph.numericTicks=function(minV,maxV,self){
var _207=[1,2,5];
var _208,low_val,high_val,nTicks;
var _209=self.attr_("pixelsPerYLabel");
for(var i=-10;i<50;i++){
var _210=Math.pow(10,i);
for(var j=0;j<_207.length;j++){
_208=_210*_207[j];
low_val=Math.floor(minV/_208)*_208;
high_val=Math.ceil(maxV/_208)*_208;
nTicks=(high_val-low_val)/_208;
var _211=self.height_/nTicks;
if(_211>_209){
break;
}
}
if(_211>_209){
break;
}
}
var _212=[];
for(var i=0;i<nTicks;i++){
var _213=low_val+i*_208;
var _214=self.round_(_213,2);
if(self.attr_("labelsKMB")){
var k=1000;
if(_213>=k*k*k){
_214=self.round_(_213/(k*k*k),1)+"B";
}else{
if(_213>=k*k){
_214=self.round_(_213/(k*k),1)+"M";
}else{
if(_213>=k){
_214=self.round_(_213/k,1)+"K";
}
}
}
}
_212.push({label:_214,v:_213});
}
return _212;
};
Dygraph.prototype.addYTicks_=function(minY,maxY){
var _218=Dygraph.numericTicks(minY,maxY,this);
this.layout_.updateOptions({yAxis:[minY,maxY],yTicks:_218});
};
Dygraph.prototype.extremeValues_=function(_219){
var minY=null,maxY=null;
var bars=this.attr_("errorBars")||this.attr_("customBars");
if(bars){
for(var j=0;j<_219.length;j++){
var y=_219[j][1][0];
if(!y){
continue;
}
var low=y-_219[j][1][1];
var high=y+_219[j][1][2];
if(low>y){
low=y;
}
if(high<y){
high=y;
}
if(maxY==null||high>maxY){
maxY=high;
}
if(minY==null||low<minY){
minY=low;
}
}
}else{
for(var j=0;j<_219.length;j++){
var y=_219[j][1];
if(!y){
continue;
}
if(maxY==null||y>maxY){
maxY=y;
}
if(minY==null||y<minY){
minY=y;
}
}
}
return [minY,maxY];
};
Dygraph.prototype.drawGraph_=function(data){
var minY=null,maxY=null;
this.layout_.removeAllDatasets();
this.setColors_();
this.attrs_["pointSize"]=0.5*this.attr_("highlightCircleSize");
for(var i=1;i<data[0].length;i++){
var _223=[];
for(var j=0;j<data.length;j++){
var date=data[j][0];
_223[j]=[date,data[j][i]];
}
_223=this.rollingAverage(_223,this.rollPeriod_);
var bars=this.attr_("errorBars")||this.attr_("customBars");
if(this.dateWindow_){
var low=this.dateWindow_[0];
var high=this.dateWindow_[1];
var _224=[];
for(var k=0;k<_223.length;k++){
if(_223[k][0]>=low&&_223[k][0]<=high){
_224.push(_223[k]);
}
}
_223=_224;
}
var _225=this.extremeValues_(_223);
var _226=_225[0];
var _227=_225[1];
if(!minY||_226<minY){
minY=_226;
}
if(!maxY||_227>maxY){
maxY=_227;
}
if(bars){
var vals=[];
for(var j=0;j<_223.length;j++){
vals[j]=[_223[j][0],_223[j][1][0],_223[j][1][1],_223[j][1][2]];
}
this.layout_.addDataset(this.attr_("labels")[i],vals);
}else{
this.layout_.addDataset(this.attr_("labels")[i],_223);
}
}
if(this.valueRange_!=null){
this.addYTicks_(this.valueRange_[0],this.valueRange_[1]);
}else{
var span=maxY-minY;
var _230=maxY+0.1*span;
var _231=minY-0.1*span;
if(_231<0&&minY>=0){
_231=0;
}
if(_230>0&&maxY<=0){
_230=0;
}
if(this.attr_("includeZero")){
if(maxY<0){
_230=0;
}
if(minY>0){
_231=0;
}
}
this.addYTicks_(_231,_230);
}
this.addXTicks_();
this.layout_.evaluateWithError();
this.plotter_.clear();
this.plotter_.render();
this.canvas_.getContext("2d").clearRect(0,0,this.canvas_.width,this.canvas_.height);
};
Dygraph.prototype.rollingAverage=function(_232,_233){
if(_232.length<2){
return _232;
}
var _233=Math.min(_233,_232.length-1);
var _234=[];
var _235=this.attr_("sigma");
if(this.fractions_){
var num=0;
var den=0;
var mult=100;
for(var i=0;i<_232.length;i++){
num+=_232[i][1][0];
den+=_232[i][1][1];
if(i-_233>=0){
num-=_232[i-_233][1][0];
den-=_232[i-_233][1][1];
}
var date=_232[i][0];
var _238=den?num/den:0;
if(this.attr_("errorBars")){
if(this.wilsonInterval_){
if(den){
var p=_238<0?0:_238,n=den;
var pm=_235*Math.sqrt(p*(1-p)/n+_235*_235/(4*n*n));
var _241=1+_235*_235/den;
var low=(p+_235*_235/(2*den)-pm)/_241;
var high=(p+_235*_235/(2*den)+pm)/_241;
_234[i]=[date,[p*mult,(p-low)*mult,(high-p)*mult]];
}else{
_234[i]=[date,[0,0,0]];
}
}else{
var _242=den?_235*Math.sqrt(_238*(1-_238)/den):1;
_234[i]=[date,[mult*_238,mult*_242,mult*_242]];
}
}else{
_234[i]=[date,mult*_238];
}
}
}else{
if(this.attr_("customBars")){
var low=0;
var mid=0;
var high=0;
var _244=0;
for(var i=0;i<_232.length;i++){
var data=_232[i][1];
var y=data[1];
_234[i]=[_232[i][0],[y,y-data[0],data[2]-y]];
low+=data[0];
mid+=y;
high+=data[2];
_244+=1;
if(i-_233>=0){
var prev=_232[i-_233];
low-=prev[1][0];
mid-=prev[1][1];
high-=prev[1][2];
_244-=1;
}
_234[i]=[_232[i][0],[1*mid/_244,1*(mid-low)/_244,1*(high-mid)/_244]];
}
}else{
var _246=Math.min(_233-1,_232.length-2);
if(!this.attr_("errorBars")){
if(_233==1){
return _232;
}
for(var i=0;i<_232.length;i++){
var sum=0;
var _248=0;
for(var j=Math.max(0,i-_233+1);j<i+1;j++){
var y=_232[j][1];
if(!y||isNaN(y)){
continue;
}
_248++;
sum+=_232[j][1];
}
if(_248){
_234[i]=[_232[i][0],sum/_248];
}else{
_234[i]=[_232[i][0],null];
}
}
}else{
for(var i=0;i<_232.length;i++){
var sum=0;
var _249=0;
var _248=0;
for(var j=Math.max(0,i-_233+1);j<i+1;j++){
var y=_232[j][1][0];
if(!y||isNaN(y)){
continue;
}
_248++;
sum+=_232[j][1][0];
_249+=Math.pow(_232[j][1][1],2);
}
if(_248){
var _242=Math.sqrt(_249)/_248;
_234[i]=[_232[i][0],[sum/_248,_235*_242,_235*_242]];
}else{
_234[i]=[_232[i][0],[null,null,null]];
}
}
}
}
}
return _234;
};
Dygraph.dateParser=function(_250,self){
var _251;
var d;
if(_250.length==10&&_250.search("-")!=-1){
_251=_250.replace("-","/","g");
while(_251.search("-")!=-1){
_251=_251.replace("-","/");
}
d=Date.parse(_251);
}else{
if(_250.length==8){
_251=_250.substr(0,4)+"/"+_250.substr(4,2)+"/"+_250.substr(6,2);
d=Date.parse(_251);
}else{
d=Date.parse(_250);
}
}
if(!d||isNaN(d)){
self.error("Couldn't parse "+_250+" as a date");
}
return d;
};
Dygraph.prototype.detectTypeFromString_=function(str){
var _253=false;
if(str.indexOf("-")>=0||str.indexOf("/")>=0||isNaN(parseFloat(str))){
_253=true;
}else{
if(str.length==8&&str>"19700101"&&str<"20371231"){
_253=true;
}
}
if(_253){
this.attrs_.xValueFormatter=Dygraph.dateString_;
this.attrs_.xValueParser=Dygraph.dateParser;
this.attrs_.xTicker=Dygraph.dateTicker;
}else{
this.attrs_.xValueFormatter=function(x){
return x;
};
this.attrs_.xValueParser=function(x){
return parseFloat(x);
};
this.attrs_.xTicker=Dygraph.numericTicks;
}
};
Dygraph.prototype.parseCSV_=function(data){
var ret=[];
var _254=data.split("\n");
var _255=0;
if(this.labelsFromCSV_){
_255=1;
this.attrs_.labels=_254[0].split(",");
}
var _256;
var _257=false;
var _258=this.attr_("labels").length;
for(var i=_255;i<_254.length;i++){
var line=_254[i];
if(line.length==0){
continue;
}
var _260=line.split(",");
if(_260.length<2){
continue;
}
var _261=[];
if(!_257){
this.detectTypeFromString_(_260[0]);
_256=this.attr_("xValueParser");
_257=true;
}
_261[0]=_256(_260[0],this);
if(this.fractions_){
for(var j=1;j<_260.length;j++){
var vals=_260[j].split("/");
_261[j]=[parseFloat(vals[0]),parseFloat(vals[1])];
}
}else{
if(this.attr_("errorBars")){
for(var j=1;j<_260.length;j+=2){
_261[(j+1)/2]=[parseFloat(_260[j]),parseFloat(_260[j+1])];
}
}else{
if(this.attr_("customBars")){
for(var j=1;j<_260.length;j++){
var vals=_260[j].split(";");
_261[j]=[parseFloat(vals[0]),parseFloat(vals[1]),parseFloat(vals[2])];
}
}else{
for(var j=1;j<_260.length;j++){
_261[j]=parseFloat(_260[j]);
}
}
}
}
ret.push(_261);
if(_261.length!=_258){
this.error("Number of columns in line "+i+" ("+_261.length+") does not agree with number of labels ("+_258+") "+line);
}
}
return ret;
};
Dygraph.prototype.parseArray_=function(data){
if(data.length==0){
this.error("Can't plot empty data set");
return null;
}
if(data[0].length==0){
this.error("Data set cannot contain an empty row");
return null;
}
if(this.attr_("labels")==null){
this.warn("Using default labels. Set labels explicitly via 'labels' "+"in the options parameter");
this.attrs_.labels=["X"];
for(var i=1;i<data[0].length;i++){
this.attrs_.labels.push("Y"+i);
}
}
if(MochiKit.Base.isDateLike(data[0][0])){
this.attrs_.xValueFormatter=Dygraph.dateString_;
this.attrs_.xTicker=Dygraph.dateTicker;
var _262=MochiKit.Base.clone(data);
for(var i=0;i<data.length;i++){
if(_262[i].length==0){
this.error("Row "<<(1+i)<<" of data is empty");
return null;
}
if(_262[i][0]==null||typeof (_262[i][0].getTime)!="function"){
this.error("x value in row "<<(1+i)<<" is not a Date");
return null;
}
_262[i][0]=_262[i][0].getTime();
}
return _262;
}else{
this.attrs_.xValueFormatter=function(x){
return x;
};
this.attrs_.xTicker=Dygraph.numericTicks;
return data;
}
};
Dygraph.prototype.parseDataTable_=function(data){
var cols=data.getNumberOfColumns();
var rows=data.getNumberOfRows();
var _265=[];
for(var i=0;i<cols;i++){
_265.push(data.getColumnLabel(i));
}
this.attrs_.labels=_265;
var _266=data.getColumnType(0);
if(_266=="date"){
this.attrs_.xValueFormatter=Dygraph.dateString_;
this.attrs_.xValueParser=Dygraph.dateParser;
this.attrs_.xTicker=Dygraph.dateTicker;
}else{
if(_266=="number"){
this.attrs_.xValueFormatter=function(x){
return x;
};
this.attrs_.xValueParser=function(x){
return parseFloat(x);
};
this.attrs_.xTicker=Dygraph.numericTicks;
}else{
this.error("only 'date' and 'number' types are supported for column 1 "+"of DataTable input (Got '"+_266+"')");
return null;
}
}
var ret=[];
for(var i=0;i<rows;i++){
var row=[];
if(!data.getValue(i,0)){
continue;
}
if(_266=="date"){
row.push(data.getValue(i,0).getTime());
}else{
row.push(data.getValue(i,0));
}
for(var j=1;j<cols;j++){
row.push(data.getValue(i,j));
}
ret.push(row);
}
return ret;
};
Dygraph.prototype.start_=function(){
if(typeof this.file_=="function"){
this.loadedEvent_(this.file_());
}else{
if(MochiKit.Base.isArrayLike(this.file_)){
this.rawData_=this.parseArray_(this.file_);
this.drawGraph_(this.rawData_);
}else{
if(typeof this.file_=="object"&&typeof this.file_.getColumnRange=="function"){
this.rawData_=this.parseDataTable_(this.file_);
this.drawGraph_(this.rawData_);
}else{
if(typeof this.file_=="string"){
if(this.file_.indexOf("\n")>=0){
this.loadedEvent_(this.file_);
}else{
var req=new XMLHttpRequest();
var _269=this;
req.onreadystatechange=function(){
if(req.readyState==4){
if(req.status==200){
_269.loadedEvent_(req.responseText);
}
}
};
req.open("GET",this.file_,true);
req.send(null);
}
}else{
this.error("Unknown data format: "+(typeof this.file_));
}
}
}
}
};
Dygraph.prototype.updateOptions=function(_270){
if(_270.rollPeriod){
this.rollPeriod_=_270.rollPeriod;
}
if(_270.dateWindow){
this.dateWindow_=_270.dateWindow;
}
if(_270.valueRange){
this.valueRange_=_270.valueRange;
}
MochiKit.Base.update(this.user_attrs_,_270);
this.labelsFromCSV_=(this.attr_("labels")==null);
this.layout_.updateOptions({"errorBars":this.attr_("errorBars")});
if(_270["file"]&&_270["file"]!=this.file_){
this.file_=_270["file"];
this.start_();
}else{
this.drawGraph_(this.rawData_);
}
};
Dygraph.prototype.adjustRoll=function(_271){
this.rollPeriod_=_271;
this.drawGraph_(this.rawData_);
};
Dygraph.GVizChart=function(_272){
this.container=_272;
};
Dygraph.GVizChart.prototype.draw=function(data,_273){
this.container.innerHTML="";
this.date_graph=new Dygraph(this.container,data,_273);
};
DateGraph=Dygraph;

