/***

    MochiKit.MochiKit 1.4 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

***/

if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Base");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.Base)=="undefined"){
MochiKit.Base={};
}
if(typeof (MochiKit.__export__)=="undefined"){
MochiKit.__export__=(MochiKit.__compat__||(typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined"));
}
MochiKit.Base.VERSION="1.4";
MochiKit.Base.NAME="MochiKit.Base";
MochiKit.Base.update=function(_1,_2){
if(_1===null){
_1={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
_1[k]=o[k];
}
}
}
return _1;
};
MochiKit.Base.update(MochiKit.Base,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},camelize:function(_6){
var _7=_6.split("-");
var cc=_7[0];
for(var i=1;i<_7.length;i++){
cc+=_7[i].charAt(0).toUpperCase()+_7[i].substring(1);
}
return cc;
},counter:function(n){
if(arguments.length===0){
n=1;
}
return function(){
return n++;
};
},clone:function(_b){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=_b;
return new me();
}
},_flattenArray:function(_d,_e){
for(var i=0;i<_e.length;i++){
var o=_e[i];
if(o instanceof Array){
arguments.callee(_d,o);
}else{
_d.push(o);
}
}
return _d;
},flattenArray:function(lst){
return MochiKit.Base._flattenArray([],lst);
},flattenArguments:function(lst){
var res=[];
var m=MochiKit.Base;
var _15=m.extend(null,arguments);
while(_15.length){
var o=_15.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
for(var i=o.length-1;i>=0;i--){
_15.unshift(o[i]);
}
}else{
res.push(o);
}
}
return res;
},extend:function(_18,obj,_1a){
if(!_1a){
_1a=0;
}
if(obj){
var l=obj.length;
if(typeof (l)!="number"){
if(typeof (MochiKit.Iter)!="undefined"){
obj=MochiKit.Iter.list(obj);
l=obj.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_18){
_18=[];
}
for(var i=_1a;i<l;i++){
_18.push(obj[i]);
}
}
return _18;
},updatetree:function(_1d,obj){
if(_1d===null){
_1d={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
var v=o[k];
if(typeof (_1d[k])=="object"&&typeof (v)=="object"){
arguments.callee(_1d[k],v);
}else{
_1d[k]=v;
}
}
}
}
return _1d;
},setdefault:function(_23,obj){
if(_23===null){
_23={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _23)){
_23[k]=o[k];
}
}
}
return _23;
},keys:function(obj){
var _29=[];
for(var _2a in obj){
_29.push(_2a);
}
return _29;
},values:function(obj){
var _2c=[];
for(var _2d in obj){
_2c.push(obj[_2d]);
}
return _2c;
},items:function(obj){
var _2f=[];
var e;
for(var _31 in obj){
var v;
try{
v=obj[_31];
}
catch(e){
continue;
}
_2f.push([_31,v]);
}
return _2f;
},_newNamedError:function(_33,_34,_35){
_35.prototype=new MochiKit.Base.NamedError(_33.NAME+"."+_34);
_33[_34]=_35;
},operator:{truth:function(a){
return !!a;
},lognot:function(a){
return !a;
},identity:function(a){
return a;
},not:function(a){
return ~a;
},neg:function(a){
return -a;
},add:function(a,b){
return a+b;
},sub:function(a,b){
return a-b;
},div:function(a,b){
return a/b;
},mod:function(a,b){
return a%b;
},mul:function(a,b){
return a*b;
},and:function(a,b){
return a&b;
},or:function(a,b){
return a|b;
},xor:function(a,b){
return a^b;
},lshift:function(a,b){
return a<<b;
},rshift:function(a,b){
return a>>b;
},zrshift:function(a,b){
return a>>>b;
},eq:function(a,b){
return a==b;
},ne:function(a,b){
return a!=b;
},gt:function(a,b){
return a>b;
},ge:function(a,b){
return a>=b;
},lt:function(a,b){
return a<b;
},le:function(a,b){
return a<=b;
},seq:function(a,b){
return a===b;
},sne:function(a,b){
return a!==b;
},ceq:function(a,b){
return MochiKit.Base.compare(a,b)===0;
},cne:function(a,b){
return MochiKit.Base.compare(a,b)!==0;
},cgt:function(a,b){
return MochiKit.Base.compare(a,b)==1;
},cge:function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},clt:function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},cle:function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},logand:function(a,b){
return a&&b;
},logor:function(a,b){
return a||b;
},contains:function(a,b){
return b in a;
}},forwardCall:function(_73){
return function(){
return this[_73].apply(this,arguments);
};
},itemgetter:function(_74){
return function(arg){
return arg[_74];
};
},typeMatcher:function(){
var _76={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_76[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _76)){
return false;
}
}
return true;
};
},isNull:function(){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!==null){
return false;
}
}
return true;
},isUndefinedOrNull:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o===null)){
return false;
}
}
return true;
},isEmpty:function(obj){
return !MochiKit.Base.isNotEmpty.apply(this,arguments);
},isNotEmpty:function(obj){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
},isArrayLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o===null||typeof (o.length)!="number"||o.nodeType===3){
return false;
}
}
return true;
},isDateLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||o===null||typeof (o.getTime)!="function"){
return false;
}
}
return true;
},xmap:function(fn){
if(fn===null){
return MochiKit.Base.extend(null,arguments,1);
}
var _87=[];
for(var i=1;i<arguments.length;i++){
_87.push(fn(arguments[i]));
}
return _87;
},map:function(fn,lst){
var m=MochiKit.Base;
var itr=MochiKit.Iter;
var _8d=m.isArrayLike;
if(arguments.length<=2){
if(!_8d(lst)){
if(itr){
lst=itr.list(lst);
if(fn===null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
return m.extend(null,lst);
}
var _8e=[];
for(var i=0;i<lst.length;i++){
_8e.push(fn(lst[i]));
}
return _8e;
}else{
if(fn===null){
fn=Array;
}
var _90=null;
for(i=1;i<arguments.length;i++){
if(!_8d(arguments[i])){
if(itr){
return itr.list(itr.imap.apply(null,arguments));
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_90===null||_90>l){
_90=l;
}
}
_8e=[];
for(i=0;i<_90;i++){
var _92=[];
for(var j=1;j<arguments.length;j++){
_92.push(arguments[j][i]);
}
_8e.push(fn.apply(this,_92));
}
return _8e;
}
},xfilter:function(fn){
var _95=[];
if(fn===null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_95.push(o);
}
}
return _95;
},filter:function(fn,lst,_9a){
var _9b=[];
var m=MochiKit.Base;
if(!m.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
fn=m.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,_9a);
}else{
if(typeof (_9a)=="undefined"||_9a===null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
_9b.push(o);
}
}
}else{
for(i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(_9a,o)){
_9b.push(o);
}
}
}
}
return _9b;
},_wrapDumbFunction:function(_9f){
return function(){
switch(arguments.length){
case 0:
return _9f();
case 1:
return _9f(arguments[0]);
case 2:
return _9f(arguments[0],arguments[1]);
case 3:
return _9f(arguments[0],arguments[1],arguments[2]);
}
var _a0=[];
for(var i=0;i<arguments.length;i++){
_a0.push("arguments["+i+"]");
}
return eval("(func("+_a0.join(",")+"))");
};
},methodcaller:function(_a2){
var _a3=MochiKit.Base.extend(null,arguments,1);
if(typeof (_a2)=="function"){
return function(obj){
return _a2.apply(obj,_a3);
};
}else{
return function(obj){
return obj[_a2].apply(obj,_a3);
};
}
},method:function(_a6,_a7){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([_a7,_a6],arguments,2));
},compose:function(f1,f2){
var _ab=[];
var m=MochiKit.Base;
if(arguments.length===0){
throw new TypeError("compose() requires at least one argument");
}
for(var i=0;i<arguments.length;i++){
var fn=arguments[i];
if(typeof (fn)!="function"){
throw new TypeError(m.repr(fn)+" is not a function");
}
_ab.push(fn);
}
return function(){
var _af=arguments;
for(var i=_ab.length-1;i>=0;i--){
_af=[_ab[i].apply(this,_af)];
}
return _af[0];
};
},bind:function(_b1,_b2){
if(typeof (_b1)=="string"){
_b1=_b2[_b1];
}
var _b3=_b1.im_func;
var _b4=_b1.im_preargs;
var _b5=_b1.im_self;
var m=MochiKit.Base;
if(typeof (_b1)=="function"&&typeof (_b1.apply)=="undefined"){
_b1=m._wrapDumbFunction(_b1);
}
if(typeof (_b3)!="function"){
_b3=_b1;
}
if(typeof (_b2)!="undefined"){
_b5=_b2;
}
if(typeof (_b4)=="undefined"){
_b4=[];
}else{
_b4=_b4.slice();
}
m.extend(_b4,arguments,2);
var _b7=function(){
var _b8=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_b8=m.concat(me.im_preargs,_b8);
}
var _ba=me.im_self;
if(!_ba){
_ba=this;
}
return me.im_func.apply(_ba,_b8);
};
_b7.im_self=_b5;
_b7.im_func=_b3;
_b7.im_preargs=_b4;
return _b7;
},bindMethods:function(_bb){
var _bc=MochiKit.Base.bind;
for(var k in _bb){
var _be=_bb[k];
if(typeof (_be)=="function"){
_bb[k]=_bc(_be,_bb);
}
}
},registerComparator:function(_bf,_c0,_c1,_c2){
MochiKit.Base.comparatorRegistry.register(_bf,_c0,_c1,_c2);
},_primitives:{"boolean":true,"string":true,"number":true},compare:function(a,b){
if(a==b){
return 0;
}
var _c5=(typeof (a)=="undefined"||a===null);
var _c6=(typeof (b)=="undefined"||b===null);
if(_c5&&_c6){
return 0;
}else{
if(_c5){
return -1;
}else{
if(_c6){
return 1;
}
}
}
var m=MochiKit.Base;
var _c8=m._primitives;
if(!(typeof (a) in _c8&&typeof (b) in _c8)){
try{
return m.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var _c9=m.repr;
throw new TypeError(_c9(a)+" and "+_c9(b)+" can not be compared");
},compareDateLike:function(a,b){
return MochiKit.Base.compare(a.getTime(),b.getTime());
},compareArrayLike:function(a,b){
var _ce=MochiKit.Base.compare;
var _cf=a.length;
var _d0=0;
if(_cf>b.length){
_d0=1;
_cf=b.length;
}else{
if(_cf<b.length){
_d0=-1;
}
}
for(var i=0;i<_cf;i++){
var cmp=_ce(a[i],b[i]);
if(cmp){
return cmp;
}
}
return _d0;
},registerRepr:function(_d3,_d4,_d5,_d6){
MochiKit.Base.reprRegistry.register(_d3,_d4,_d5,_d6);
},repr:function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
try{
var _d8=(o+"");
}
catch(e){
return "["+typeof (o)+"]";
}
if(typeof (o)=="function"){
o=_d8.replace(/^\s+/,"");
var idx=o.indexOf("{");
if(idx!=-1){
o=o.substr(0,idx)+"{...}";
}
}
return _d8;
},reprArrayLike:function(o){
var m=MochiKit.Base;
return "["+m.map(m.repr,o).join(", ")+"]";
},reprString:function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
},reprNumber:function(o){
return o+"";
},registerJSON:function(_de,_df,_e0,_e1){
MochiKit.Base.jsonRegistry.register(_de,_df,_e0,_e1);
},evalJSON:function(){
return eval("("+arguments[0]+")");
},serializeJSON:function(o){
var _e3=typeof (o);
if(_e3=="number"||_e3=="boolean"){
return o+"";
}else{
if(o===null){
return "null";
}
}
var m=MochiKit.Base;
var _e5=m.reprString;
if(_e3=="string"){
return _e5(o);
}
var me=arguments.callee;
var _e7;
if(typeof (o.__json__)=="function"){
_e7=o.__json__();
if(o!==_e7){
return me(_e7);
}
}
if(typeof (o.json)=="function"){
_e7=o.json();
if(o!==_e7){
return me(_e7);
}
}
if(_e3!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
val="undefined";
}
res.push(val);
}
return "["+res.join(", ")+"]";
}
try{
_e7=m.jsonRegistry.match(o);
if(o!==_e7){
return me(_e7);
}
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
if(_e3=="undefined"){
throw new TypeError("undefined can not be serialized as JSON");
}
if(_e3=="function"){
return null;
}
res=[];
for(var k in o){
var _ec;
if(typeof (k)=="number"){
_ec="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_ec=_e5(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_ec+":"+val);
}
return "{"+res.join(", ")+"}";
},objEqual:function(a,b){
return (MochiKit.Base.compare(a,b)===0);
},arrayEqual:function(_ef,arr){
if(_ef.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(_ef,arr)===0);
},concat:function(){
var _f1=[];
var _f2=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_f2(_f1,arguments[i]);
}
return _f1;
},keyComparator:function(key){
var m=MochiKit.Base;
var _f6=m.compare;
if(arguments.length==1){
return function(a,b){
return _f6(a[key],b[key]);
};
}
var _f9=m.extend(null,arguments);
return function(a,b){
var _fc=0;
for(var i=0;(_fc===0)&&(i<_f9.length);i++){
var key=_f9[i];
_fc=_f6(a[key],b[key]);
}
return _fc;
};
},reverseKeyComparator:function(key){
var _100=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _100(b,a);
};
},partial:function(func){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([func,undefined],arguments,1));
},listMinMax:function(_105,lst){
if(lst.length===0){
return null;
}
var cur=lst[0];
var _108=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_108(o,cur)==_105){
cur=o;
}
}
return cur;
},objMax:function(){
return MochiKit.Base.listMinMax(1,arguments);
},objMin:function(){
return MochiKit.Base.listMinMax(-1,arguments);
},findIdentical:function(lst,_10c,_10d,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_10d)=="undefined"||_10d===null){
_10d=0;
}
for(var i=_10d;i<end;i++){
if(lst[i]===_10c){
return i;
}
}
return -1;
},mean:function(){
var sum=0;
var m=MochiKit.Base;
var args=m.extend(null,arguments);
var _113=args.length;
while(args.length){
var o=args.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
_113+=o.length-1;
for(var i=o.length-1;i>=0;i--){
sum+=o[i];
}
}else{
sum+=o;
}
}
if(_113<=0){
throw new TypeError("mean() requires at least one argument");
}
return sum/_113;
},median:function(){
var data=MochiKit.Base.flattenArguments(arguments);
if(data.length===0){
throw new TypeError("median() requires at least one argument");
}
data.sort(compare);
if(data.length%2==0){
var _117=data.length/2;
return (data[_117]+data[_117-1])/2;
}else{
return data[(data.length-1)/2];
}
},findValue:function(lst,_119,_11a,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_11a)=="undefined"||_11a===null){
_11a=0;
}
var cmp=MochiKit.Base.compare;
for(var i=_11a;i<end;i++){
if(cmp(lst[i],_119)===0){
return i;
}
}
return -1;
},nodeWalk:function(node,_11f){
var _120=[node];
var _121=MochiKit.Base.extend;
while(_120.length){
var res=_11f(_120.shift());
if(res){
_121(_120,res);
}
}
},nameFunctions:function(_123){
var base=_123.NAME;
if(typeof (base)=="undefined"){
base="";
}else{
base=base+".";
}
for(var name in _123){
var o=_123[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+name;
}
catch(e){
}
}
}
},queryString:function(_127,_128){
if(typeof (MochiKit.DOM)!="undefined"&&arguments.length==1&&(typeof (_127)=="string"||(typeof (_127.nodeType)!="undefined"&&_127.nodeType>0))){
var kv=MochiKit.DOM.formContents(_127);
_127=kv[0];
_128=kv[1];
}else{
if(arguments.length==1){
if(typeof (_127.length)=="number"&&_127.length==2){
return arguments.callee(_127[0],_127[1]);
}
var o=_127;
_127=[];
_128=[];
for(var k in o){
var v=o[k];
if(typeof (v)=="function"){
continue;
}else{
if(typeof (v)!="string"&&typeof (v.length)=="number"){
for(var i=0;i<v.length;i++){
_127.push(k);
_128.push(v[i]);
}
}else{
_127.push(k);
_128.push(v);
}
}
}
}
}
var rval=[];
var len=Math.min(_127.length,_128.length);
var _130=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_128[i];
if(typeof (v)!="undefined"&&v!==null){
rval.push(_130(_127[i])+"="+_130(v));
}
}
return rval.join("&");
},parseQueryString:function(_131,_132){
var qstr=(_131.charAt(0)=="?")?_131.substring(1):_131;
var _134=qstr.replace(/\+/g,"%20").split(/(\&amp\;|\&\#38\;|\&#x26;|\&)/);
var o={};
var _136;
if(typeof (decodeURIComponent)!="undefined"){
_136=decodeURIComponent;
}else{
_136=unescape;
}
if(_132){
for(var i=0;i<_134.length;i++){
var pair=_134[i].split("=");
var name=_136(pair.shift());
if(!name){
continue;
}
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_136(pair.join("=")));
}
}else{
for(i=0;i<_134.length;i++){
pair=_134[i].split("=");
var name=pair.shift();
if(!name){
continue;
}
o[_136(name)]=_136(pair.join("="));
}
}
return o;
}});
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype={register:function(name,_13c,wrap,_13e){
if(_13e){
this.pairs.unshift([name,_13c,wrap]);
}else{
this.pairs.push([name,_13c,wrap]);
}
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
return pair[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}};
MochiKit.Base.EXPORT=["flattenArray","noop","camelize","counter","clone","extend","update","updatetree","setdefault","keys","values","items","NamedError","operator","forwardCall","itemgetter","typeMatcher","isCallable","isUndefined","isUndefinedOrNull","isNull","isEmpty","isNotEmpty","isArrayLike","isDateLike","xmap","map","xfilter","filter","methodcaller","compose","bind","bindMethods","NotFound","AdapterRegistry","registerComparator","compare","registerRepr","repr","objEqual","arrayEqual","concat","keyComparator","reverseKeyComparator","partial","merge","listMinMax","listMax","listMin","objMax","objMin","nodeWalk","zip","urlEncode","queryString","serializeJSON","registerJSON","evalJSON","parseQueryString","findValue","findIdentical","flattenArguments","method","average","mean","median"];
MochiKit.Base.EXPORT_OK=["nameFunctions","comparatorRegistry","reprRegistry","jsonRegistry","compareDateLike","compareArrayLike","reprArrayLike","reprString","reprNumber"];
MochiKit.Base._exportSymbols=function(_144,_145){
if(!MochiKit.__export__){
return;
}
var all=_145.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_144[all[i]]=_145[all[i]];
}
};
MochiKit.Base.__new__=function(){
var m=this;
m.noop=m.operator.identity;
m.forward=m.forwardCall;
m.find=m.findValue;
if(typeof (encodeURIComponent)!="undefined"){
m.urlEncode=function(_149){
return encodeURIComponent(_149).replace(/\'/g,"%27");
};
}else{
m.urlEncode=function(_14a){
return escape(_14a).replace(/\+/g,"%2B").replace(/\"/g,"%22").rval.replace(/\'/g,"%27");
};
}
m.NamedError=function(name){
this.message=name;
this.name=name;
};
m.NamedError.prototype=new Error();
m.update(m.NamedError.prototype,{repr:function(){
if(this.message&&this.message!=this.name){
return this.name+"("+m.repr(this.message)+")";
}else{
return this.name+"()";
}
},toString:m.forwardCall("repr")});
m.NotFound=new m.NamedError("MochiKit.Base.NotFound");
m.listMax=m.partial(m.listMinMax,1);
m.listMin=m.partial(m.listMinMax,-1);
m.isCallable=m.typeMatcher("function");
m.isUndefined=m.typeMatcher("undefined");
m.merge=m.partial(m.update,null);
m.zip=m.partial(m.map,null);
m.average=m.mean;
m.comparatorRegistry=new m.AdapterRegistry();
m.registerComparator("dateLike",m.isDateLike,m.compareDateLike);
m.registerComparator("arrayLike",m.isArrayLike,m.compareArrayLike);
m.reprRegistry=new m.AdapterRegistry();
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.typeMatcher("string"),m.reprString);
m.registerRepr("numbers",m.typeMatcher("number","boolean"),m.reprNumber);
m.jsonRegistry=new m.AdapterRegistry();
var all=m.concat(m.EXPORT,m.EXPORT_OK);
m.EXPORT_TAGS={":common":m.concat(m.EXPORT_OK),":all":all};
m.nameFunctions(this);
};
MochiKit.Base.__new__();
if(MochiKit.__export__){
compare=MochiKit.Base.compare;
compose=MochiKit.Base.compose;
serializeJSON=MochiKit.Base.serializeJSON;
}
MochiKit.Base._exportSymbols(this,MochiKit.Base);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Iter");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Iter depends on MochiKit.Base!";
}
if(typeof (MochiKit.Iter)=="undefined"){
MochiKit.Iter={};
}
MochiKit.Iter.NAME="MochiKit.Iter";
MochiKit.Iter.VERSION="1.4";
MochiKit.Base.update(MochiKit.Iter,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},registerIteratorFactory:function(name,_14e,_14f,_150){
MochiKit.Iter.iteratorRegistry.register(name,_14e,_14f,_150);
},iter:function(_151,_152){
var self=MochiKit.Iter;
if(arguments.length==2){
return self.takewhile(function(a){
return a!=_152;
},_151);
}
if(typeof (_151.next)=="function"){
return _151;
}else{
if(typeof (_151.iter)=="function"){
return _151.iter();
}
}
try{
return self.iteratorRegistry.match(_151);
}
catch(e){
var m=MochiKit.Base;
if(e==m.NotFound){
e=new TypeError(typeof (_151)+": "+m.repr(_151)+" is not iterable");
}
throw e;
}
},count:function(n){
if(!n){
n=0;
}
var m=MochiKit.Base;
return {repr:function(){
return "count("+n+")";
},toString:m.forwardCall("repr"),next:m.counter(n)};
},cycle:function(p){
var self=MochiKit.Iter;
var m=MochiKit.Base;
var lst=[];
var _15c=self.iter(p);
return {repr:function(){
return "cycle(...)";
},toString:m.forwardCall("repr"),next:function(){
try{
var rval=_15c.next();
lst.push(rval);
return rval;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
if(lst.length===0){
this.next=function(){
throw self.StopIteration;
};
}else{
var i=-1;
this.next=function(){
i=(i+1)%lst.length;
return lst[i];
};
}
return this.next();
}
}};
},repeat:function(elem,n){
var m=MochiKit.Base;
if(typeof (n)=="undefined"){
return {repr:function(){
return "repeat("+m.repr(elem)+")";
},toString:m.forwardCall("repr"),next:function(){
return elem;
}};
}
return {repr:function(){
return "repeat("+m.repr(elem)+", "+n+")";
},toString:m.forwardCall("repr"),next:function(){
if(n<=0){
throw MochiKit.Iter.StopIteration;
}
n-=1;
return elem;
}};
},next:function(_162){
return _162.next();
},izip:function(p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var next=self.next;
var _168=m.map(self.iter,arguments);
return {repr:function(){
return "izip(...)";
},toString:m.forwardCall("repr"),next:function(){
return m.map(next,_168);
}};
},ifilter:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilter(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(pred(rval)){
return rval;
}
}
return undefined;
}};
},ifilterfalse:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilterfalse(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
return rval;
}
}
return undefined;
}};
},islice:function(seq){
var self=MochiKit.Iter;
var m=MochiKit.Base;
seq=self.iter(seq);
var _174=0;
var stop=0;
var step=1;
var i=-1;
if(arguments.length==2){
stop=arguments[1];
}else{
if(arguments.length==3){
_174=arguments[1];
stop=arguments[2];
}else{
_174=arguments[1];
stop=arguments[2];
step=arguments[3];
}
}
return {repr:function(){
return "islice("+["...",_174,stop,step].join(", ")+")";
},toString:m.forwardCall("repr"),next:function(){
var rval;
while(i<_174){
rval=seq.next();
i++;
}
if(_174>=stop){
throw self.StopIteration;
}
_174+=step;
return rval;
}};
},imap:function(fun,p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var _17e=m.map(self.iter,m.extend(null,arguments,1));
var map=m.map;
var next=self.next;
return {repr:function(){
return "imap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(this,map(next,_17e));
}};
},applymap:function(fun,seq,self){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
return {repr:function(){
return "applymap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(self,seq.next());
}};
},chain:function(p,q){
var self=MochiKit.Iter;
var m=MochiKit.Base;
if(arguments.length==1){
return self.iter(arguments[0]);
}
var _189=m.map(self.iter,arguments);
return {repr:function(){
return "chain(...)";
},toString:m.forwardCall("repr"),next:function(){
while(_189.length>1){
try{
return _189[0].next();
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
_189.shift();
}
}
if(_189.length==1){
var arg=_189.shift();
this.next=m.bind("next",arg);
return this.next();
}
throw self.StopIteration;
}};
},takewhile:function(pred,seq){
var self=MochiKit.Iter;
seq=self.iter(seq);
return {repr:function(){
return "takewhile(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=seq.next();
if(!pred(rval)){
this.next=function(){
throw self.StopIteration;
};
this.next();
}
return rval;
}};
},dropwhile:function(pred,seq){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
var bind=m.bind;
return {"repr":function(){
return "dropwhile(...)";
},"toString":m.forwardCall("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
break;
}
}
this.next=bind("next",seq);
return rval;
}};
},_tee:function(_194,sync,_196){
sync.pos[_194]=-1;
var m=MochiKit.Base;
var _198=m.listMin;
return {repr:function(){
return "tee("+_194+", ...)";
},toString:m.forwardCall("repr"),next:function(){
var rval;
var i=sync.pos[_194];
if(i==sync.max){
rval=_196.next();
sync.deque.push(rval);
sync.max+=1;
sync.pos[_194]+=1;
}else{
rval=sync.deque[i-sync.min];
sync.pos[_194]+=1;
if(i==sync.min&&_198(sync.pos)!=sync.min){
sync.min+=1;
sync.deque.shift();
}
}
return rval;
}};
},tee:function(_19b,n){
var rval=[];
var sync={"pos":[],"deque":[],"max":-1,"min":-1};
if(arguments.length==1||typeof (n)=="undefined"||n===null){
n=2;
}
var self=MochiKit.Iter;
_19b=self.iter(_19b);
var _tee=self._tee;
for(var i=0;i<n;i++){
rval.push(_tee(i,sync,_19b));
}
return rval;
},list:function(_1a2){
var rval;
if(_1a2 instanceof Array){
return _1a2.slice();
}
if(typeof (_1a2)=="function"&&!(_1a2 instanceof Function)&&typeof (_1a2.length)=="number"){
rval=[];
for(var i=0;i<_1a2.length;i++){
rval.push(_1a2[i]);
}
return rval;
}
var self=MochiKit.Iter;
_1a2=self.iter(_1a2);
var rval=[];
try{
while(true){
rval.push(_1a2.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return rval;
}
return undefined;
},reduce:function(fn,_1a7,_1a8){
var i=0;
var x=_1a8;
var self=MochiKit.Iter;
_1a7=self.iter(_1a7);
if(arguments.length<3){
try{
x=_1a7.next();
}
catch(e){
if(e==self.StopIteration){
e=new TypeError("reduce() of empty sequence with no initial value");
}
throw e;
}
i++;
}
try{
while(true){
x=fn(x,_1a7.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},range:function(){
var _1ac=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_1ac=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_1ac=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("range() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("range() step must not be 0");
}
return {next:function(){
if((step>0&&_1ac>=stop)||(step<0&&_1ac<=stop)){
throw MochiKit.Iter.StopIteration;
}
var rval=_1ac;
_1ac+=step;
return rval;
},repr:function(){
return "range("+[_1ac,stop,step].join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
},sum:function(_1b0,_1b1){
if(typeof (_1b1)=="undefined"||_1b1===null){
_1b1=0;
}
var x=_1b1;
var self=MochiKit.Iter;
_1b0=self.iter(_1b0);
try{
while(true){
x+=_1b0.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},exhaust:function(_1b4){
var self=MochiKit.Iter;
_1b4=self.iter(_1b4);
try{
while(true){
_1b4.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
},forEach:function(_1b6,func,self){
var m=MochiKit.Base;
if(arguments.length>2){
func=m.bind(func,self);
}
if(m.isArrayLike(_1b6)){
try{
for(var i=0;i<_1b6.length;i++){
func(_1b6[i]);
}
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
}
}else{
self=MochiKit.Iter;
self.exhaust(self.imap(func,_1b6));
}
},every:function(_1bb,func){
var self=MochiKit.Iter;
try{
self.ifilterfalse(func,_1bb).next();
return false;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return true;
}
},sorted:function(_1be,cmp){
var rval=MochiKit.Iter.list(_1be);
if(arguments.length==1){
cmp=MochiKit.Base.compare;
}
rval.sort(cmp);
return rval;
},reversed:function(_1c1){
var rval=MochiKit.Iter.list(_1c1);
rval.reverse();
return rval;
},some:function(_1c3,func){
var self=MochiKit.Iter;
try{
self.ifilter(func,_1c3).next();
return true;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return false;
}
},iextend:function(lst,_1c7){
if(MochiKit.Base.isArrayLike(_1c7)){
for(var i=0;i<_1c7.length;i++){
lst.push(_1c7[i]);
}
}else{
var self=MochiKit.Iter;
_1c7=self.iter(_1c7);
try{
while(true){
lst.push(_1c7.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}
return lst;
},groupby:function(_1ca,_1cb){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_1cb=m.operator.identity;
}
_1ca=self.iter(_1ca);
var pk=undefined;
var k=undefined;
var v;
function fetch(){
v=_1ca.next();
k=_1cb(v);
}
function eat(){
var ret=v;
v=undefined;
return ret;
}
var _1d2=true;
var _1d3=m.compare;
return {repr:function(){
return "groupby(...)";
},next:function(){
while(_1d3(k,pk)===0){
fetch();
if(_1d2){
_1d2=false;
break;
}
}
pk=k;
return [k,{next:function(){
if(v==undefined){
fetch();
}
if(_1d3(k,pk)!==0){
throw self.StopIteration;
}
return eat();
}}];
}};
},groupby_as_array:function(_1d4,_1d5){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_1d5=m.operator.identity;
}
_1d4=self.iter(_1d4);
var _1d8=[];
var _1d9=true;
var _1da;
var _1db=m.compare;
while(true){
try{
var _1dc=_1d4.next();
var key=_1d5(_1dc);
}
catch(e){
if(e==self.StopIteration){
break;
}
throw e;
}
if(_1d9||_1db(key,_1da)!==0){
var _1de=[];
_1d8.push([key,_1de]);
}
_1de.push(_1dc);
_1d9=false;
_1da=key;
}
return _1d8;
},arrayLikeIter:function(_1df){
var i=0;
return {repr:function(){
return "arrayLikeIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(i>=_1df.length){
throw MochiKit.Iter.StopIteration;
}
return _1df[i++];
}};
},hasIterateNext:function(_1e1){
return (_1e1&&typeof (_1e1.iterateNext)=="function");
},iterateNextIter:function(_1e2){
return {repr:function(){
return "iterateNextIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=_1e2.iterateNext();
if(rval===null||rval===undefined){
throw MochiKit.Iter.StopIteration;
}
return rval;
}};
}});
MochiKit.Iter.EXPORT_OK=["iteratorRegistry","arrayLikeIter","hasIterateNext","iterateNextIter"];
MochiKit.Iter.EXPORT=["StopIteration","registerIteratorFactory","iter","count","cycle","repeat","next","izip","ifilter","ifilterfalse","islice","imap","applymap","chain","takewhile","dropwhile","tee","list","reduce","range","sum","exhaust","forEach","every","sorted","reversed","some","iextend","groupby","groupby_as_array"];
MochiKit.Iter.__new__=function(){
var m=MochiKit.Base;
if(typeof (StopIteration)!="undefined"){
this.StopIteration=StopIteration;
}else{
this.StopIteration=new m.NamedError("StopIteration");
}
this.iteratorRegistry=new m.AdapterRegistry();
this.registerIteratorFactory("arrayLike",m.isArrayLike,this.arrayLikeIter);
this.registerIteratorFactory("iterateNext",this.hasIterateNext,this.iterateNextIter);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Iter.__new__();
if(MochiKit.__export__){
reduce=MochiKit.Iter.reduce;
}
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.DOM");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.DOM depends on MochiKit.Base!";
}
if(typeof (MochiKit.DOM)=="undefined"){
MochiKit.DOM={};
}
MochiKit.DOM.NAME="MochiKit.DOM";
MochiKit.DOM.VERSION="1.4";
MochiKit.DOM.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DOM.toString=function(){
return this.__repr__();
};
MochiKit.DOM.EXPORT=["removeEmptyTextNodes","formContents","currentWindow","currentDocument","withWindow","withDocument","registerDOMConverter","coerceToDOM","createDOM","createDOMFunc","isChildNode","getNodeAttribute","removeNodeAttribute","setNodeAttribute","updateNodeAttributes","appendChildNodes","insertSiblingNodesAfter","insertSiblingNodesBefore","replaceChildNodes","removeElement","swapDOM","BUTTON","TT","PRE","H1","H2","H3","BR","CANVAS","HR","LABEL","TEXTAREA","FORM","STRONG","SELECT","OPTION","OPTGROUP","LEGEND","FIELDSET","P","UL","OL","LI","TD","TR","THEAD","TBODY","TFOOT","TABLE","TH","INPUT","SPAN","A","DIV","IMG","getElement","$","getElementsByTagAndClassName","addToCallStack","addLoadEvent","focusOnLoad","setElementClass","toggleElementClass","addElementClass","removeElementClass","swapElementClass","hasElementClass","escapeHTML","toHTML","emitHTML","scrapeText","isParent","getFirstParentByTagAndClassName","makeClipping","undoClipping","makePositioned","undoPositioned","getFirstElementByTagAndClassName"];
MochiKit.DOM.EXPORT_OK=["domConverters"];
MochiKit.DOM.DEPRECATED=[["computedStyle","MochiKit.Style.getStyle","1.4"],["elementDimensions","MochiKit.Style.getElementDimensions","1.4"],["elementPosition","MochiKit.Style.getElementPosition","1.4"],["hideElement","MochiKit.Style.hideElement","1.4"],["setElementDimensions","MochiKit.Style.setElementDimensions","1.4"],["setElementPosition","MochiKit.Style.setElementPosition","1.4"],["setDisplayForElement","MochiKit.Style.setDisplayForElement","1.4"],["setOpacity","MochiKit.Style.setOpacity","1.4"],["showElement","MochiKit.Style.showElement","1.4"],["Coordinates","MochiKit.Style.Coordinates","1.4"],["Dimensions","MochiKit.Style.Dimensions","1.4"]];
MochiKit.DOM.getViewportDimensions=new Function(""+"if (!MochiKit[\"Style\"]) {"+"    throw new Error(\"This function has been deprecated and depends on MochiKit.Style.\");"+"}"+"return MochiKit.Style.getViewportDimensions.apply(this, arguments);");
MochiKit.Base.update(MochiKit.DOM,{currentWindow:function(){
return MochiKit.DOM._window;
},currentDocument:function(){
return MochiKit.DOM._document;
},withWindow:function(win,func){
var self=MochiKit.DOM;
var _1e8=self._document;
var _1e9=self._window;
var rval;
try{
self._window=win;
self._document=win.document;
rval=func();
}
catch(e){
self._window=_1e9;
self._document=_1e8;
throw e;
}
self._window=_1e9;
self._document=_1e8;
return rval;
},formContents:function(elem){
var _1ec=[];
var _1ed=[];
var m=MochiKit.Base;
var self=MochiKit.DOM;
if(typeof (elem)=="undefined"||elem===null){
elem=self._document.body;
}else{
elem=self.getElement(elem);
}
m.nodeWalk(elem,function(elem){
var name=elem.name;
if(m.isNotEmpty(name)){
var _1f2=elem.tagName.toUpperCase();
if(_1f2==="INPUT"&&(elem.type=="radio"||elem.type=="checkbox")&&!elem.checked){
return null;
}
if(_1f2==="SELECT"){
if(elem.type=="select-one"){
if(elem.selectedIndex>=0){
var opt=elem.options[elem.selectedIndex];
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_1ec.push(name);
_1ed.push(v);
return null;
}
_1ec.push(name);
_1ed.push("");
return null;
}else{
var opts=elem.options;
if(!opts.length){
_1ec.push(name);
_1ed.push("");
return null;
}
for(var i=0;i<opts.length;i++){
var opt=opts[i];
if(!opt.selected){
continue;
}
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_1ec.push(name);
_1ed.push(v);
}
return null;
}
}
if(_1f2==="FORM"||_1f2==="P"||_1f2==="SPAN"||_1f2==="DIV"){
return elem.childNodes;
}
_1ec.push(name);
_1ed.push(elem.value||"");
return null;
}
return elem.childNodes;
});
return [_1ec,_1ed];
},withDocument:function(doc,func){
var self=MochiKit.DOM;
var _1fb=self._document;
var rval;
try{
self._document=doc;
rval=func();
}
catch(e){
self._document=_1fb;
throw e;
}
self._document=_1fb;
return rval;
},registerDOMConverter:function(name,_1fe,wrap,_200){
MochiKit.DOM.domConverters.register(name,_1fe,wrap,_200);
},coerceToDOM:function(node,ctx){
var m=MochiKit.Base;
var im=MochiKit.Iter;
var self=MochiKit.DOM;
if(im){
var iter=im.iter;
var _207=im.repeat;
var map=m.map;
}
var _209=self.domConverters;
var _20a=arguments.callee;
var _20b=m.NotFound;
while(true){
if(typeof (node)=="undefined"||node===null){
return null;
}
if(typeof (node)=="function"&&typeof (node.length)=="number"&&!(node instanceof Function)){
node=im.list(node);
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="boolean"){
node=node.toString();
}
if(typeof (node)=="string"){
return self._document.createTextNode(node);
}
if(typeof (node.__dom__)=="function"){
node=node.__dom__(ctx);
continue;
}
if(typeof (node.dom)=="function"){
node=node.dom(ctx);
continue;
}
if(typeof (node)=="function"){
node=node.apply(ctx,[ctx]);
continue;
}
if(im){
var _20c=null;
try{
_20c=iter(node);
}
catch(e){
}
if(_20c){
return map(_20a,_20c,_207(ctx));
}
}
try{
node=_209.match(node,ctx);
continue;
}
catch(e){
if(e!=_20b){
throw e;
}
}
return self._document.createTextNode(node.toString());
}
return undefined;
},isChildNode:function(node,_20e){
var self=MochiKit.DOM;
if(typeof (node)=="string"){
node=self.getElement(node);
}
if(typeof (_20e)=="string"){
_20e=self.getElement(_20e);
}
if(node===_20e){
return true;
}
while(node&&node.tagName.toUpperCase()!="BODY"){
node=node.parentNode;
if(node===_20e){
return true;
}
}
return false;
},setNodeAttribute:function(node,attr,_212){
var o={};
o[attr]=_212;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
},getNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _217=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_217){
return node[_217];
}
return node.getAttribute(attr);
}
catch(e){
}
return null;
},removeNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _21b=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_21b){
return node[_21b];
}
return node.removeAttribute(attr);
}
catch(e){
}
return null;
},updateNodeAttributes:function(node,_21d){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
if(_21d){
var _220=MochiKit.Base.updatetree;
if(self.attributeArray.compliant){
for(var k in _21d){
var v=_21d[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
_220(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}else{
var _223=self.attributeArray.renames;
for(var k in _21d){
v=_21d[k];
var _224=_223[k];
if(k=="style"&&typeof (v)=="string"){
elem.style.cssText=v;
}else{
if(typeof (_224)=="string"){
elem[_224]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
_220(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
}
}
}
return elem;
},appendChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _228=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _229=MochiKit.Base.concat;
while(_228.length){
var n=_228.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_228=_229(n,_228);
}
}
}
return elem;
},insertSiblingNodesBefore:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _22e=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _22f=elem.parentNode;
var _230=MochiKit.Base.concat;
while(_22e.length){
var n=_22e.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
_22f.insertBefore(n,elem);
}else{
_22e=_230(n,_22e);
}
}
}
return _22f;
},insertSiblingNodesAfter:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _235=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
if(elem.nextSibling){
return self.insertSiblingNodesBefore(elem.nextSibling,_235);
}else{
return self.appendChildNodes(elem.parentNode,_235);
}
},replaceChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
arguments[0]=elem;
}
var _239;
while((_239=elem.firstChild)){
elem.removeChild(_239);
}
if(arguments.length<2){
return elem;
}else{
return self.appendChildNodes.apply(this,arguments);
}
},createDOM:function(name,_23b){
var elem;
var self=MochiKit.DOM;
var m=MochiKit.Base;
if(typeof (_23b)=="string"||typeof (_23b)=="number"){
var args=m.extend([name,null],arguments,1);
return arguments.callee.apply(this,args);
}
if(typeof (name)=="string"){
var _240=self._xhtml;
if(_23b&&!self.attributeArray.compliant){
var _241="";
if("name" in _23b){
_241+=" name=\""+self.escapeHTML(_23b.name)+"\"";
}
if(name=="input"&&"type" in _23b){
_241+=" type=\""+self.escapeHTML(_23b.type)+"\"";
}
if(_241){
name="<"+name+_241+">";
_240=false;
}
}
var d=self._document;
if(_240&&d===document){
elem=d.createElementNS("http://www.w3.org/1999/xhtml",name);
}else{
elem=d.createElement(name);
}
}else{
elem=name;
}
if(_23b){
self.updateNodeAttributes(elem,_23b);
}
if(arguments.length<=2){
return elem;
}else{
var args=m.extend([elem],arguments,2);
return self.appendChildNodes.apply(this,args);
}
},createDOMFunc:function(){
var m=MochiKit.Base;
return m.partial.apply(this,m.extend([MochiKit.DOM.createDOM],arguments));
},removeElement:function(elem){
var e=MochiKit.DOM.getElement(elem);
e.parentNode.removeChild(e);
return e;
},swapDOM:function(dest,src){
var self=MochiKit.DOM;
dest=self.getElement(dest);
var _249=dest.parentNode;
if(src){
src=self.getElement(src);
_249.replaceChild(src,dest);
}else{
_249.removeChild(dest);
}
return src;
},getElement:function(id){
var self=MochiKit.DOM;
if(arguments.length==1){
return ((typeof (id)=="string")?self._document.getElementById(id):id);
}else{
return MochiKit.Base.map(self.getElement,arguments);
}
},getElementsByTagAndClassName:function(_24c,_24d,_24e){
var self=MochiKit.DOM;
if(typeof (_24c)=="undefined"||_24c===null){
_24c="*";
}
if(typeof (_24e)=="undefined"||_24e===null){
_24e=self._document;
}
_24e=self.getElement(_24e);
var _250=(_24e.getElementsByTagName(_24c)||self._document.all);
if(typeof (_24d)=="undefined"||_24d===null){
return MochiKit.Base.extend(null,_250);
}
var _251=[];
for(var i=0;i<_250.length;i++){
var _253=_250[i];
var cls=_253.className;
if(!cls){
continue;
}
var _255=cls.split(" ");
for(var j=0;j<_255.length;j++){
if(_255[j]==_24d){
_251.push(_253);
break;
}
}
}
return _251;
},_newCallStack:function(path,once){
var rval=function(){
var _25a=arguments.callee.callStack;
for(var i=0;i<_25a.length;i++){
if(_25a[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
},addToCallStack:function(_25c,path,func,once){
var self=MochiKit.DOM;
var _261=_25c[path];
var _262=_261;
if(!(typeof (_261)=="function"&&typeof (_261.callStack)=="object"&&_261.callStack!==null)){
_262=self._newCallStack(path,once);
if(typeof (_261)=="function"){
_262.callStack.push(_261);
}
_25c[path]=_262;
}
_262.callStack.push(func);
},addLoadEvent:function(func){
var self=MochiKit.DOM;
self.addToCallStack(self._window,"onload",func,true);
},focusOnLoad:function(_265){
var self=MochiKit.DOM;
self.addLoadEvent(function(){
_265=self.getElement(_265);
if(_265){
_265.focus();
}
});
},setElementClass:function(_267,_268){
var self=MochiKit.DOM;
var obj=self.getElement(_267);
if(self.attributeArray.compliant){
obj.setAttribute("class",_268);
}else{
obj.setAttribute("className",_268);
}
},toggleElementClass:function(_26b){
var self=MochiKit.DOM;
for(var i=1;i<arguments.length;i++){
var obj=self.getElement(arguments[i]);
if(!self.addElementClass(obj,_26b)){
self.removeElementClass(obj,_26b);
}
}
},addElementClass:function(_26f,_270){
var self=MochiKit.DOM;
var obj=self.getElement(_26f);
var cls=obj.className;
if(cls==undefined||cls.length===0){
self.setElementClass(obj,_270);
return true;
}
if(cls==_270){
return false;
}
var _274=cls.split(" ");
for(var i=0;i<_274.length;i++){
if(_274[i]==_270){
return false;
}
}
self.setElementClass(obj,cls+" "+_270);
return true;
},removeElementClass:function(_276,_277){
var self=MochiKit.DOM;
var obj=self.getElement(_276);
var cls=obj.className;
if(cls==undefined||cls.length===0){
return false;
}
if(cls==_277){
self.setElementClass(obj,"");
return true;
}
var _27b=cls.split(" ");
for(var i=0;i<_27b.length;i++){
if(_27b[i]==_277){
_27b.splice(i,1);
self.setElementClass(obj,_27b.join(" "));
return true;
}
}
return false;
},swapElementClass:function(_27d,_27e,_27f){
var obj=MochiKit.DOM.getElement(_27d);
var res=MochiKit.DOM.removeElementClass(obj,_27e);
if(res){
MochiKit.DOM.addElementClass(obj,_27f);
}
return res;
},hasElementClass:function(_282,_283){
var obj=MochiKit.DOM.getElement(_282);
var cls=obj.className;
if(!cls){
return false;
}
var _286=cls.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_286.length;j++){
if(_286[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
},escapeHTML:function(s){
return s.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
},toHTML:function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
},emitHTML:function(dom,lst){
if(typeof (lst)=="undefined"||lst===null){
lst=[];
}
var _28e=[dom];
var self=MochiKit.DOM;
var _290=self.escapeHTML;
var _291=self.attributeArray;
while(_28e.length){
dom=_28e.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.tagName.toLowerCase());
var _292=[];
var _293=_291(dom);
for(var i=0;i<_293.length;i++){
var a=_293[i];
_292.push([" ",a.name,"=\"",_290(a.value),"\""]);
}
_292.sort();
for(i=0;i<_292.length;i++){
var _296=_292[i];
for(var j=0;j<_296.length;j++){
lst.push(_296[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_28e.push("</"+dom.tagName.toLowerCase()+">");
var _298=dom.childNodes;
for(i=_298.length-1;i>=0;i--){
_28e.push(_298[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_290(dom.nodeValue));
}
}
}
}
return lst;
},scrapeText:function(node,_29a){
var rval=[];
(function(node){
var cn=node.childNodes;
if(cn){
for(var i=0;i<cn.length;i++){
arguments.callee.call(this,cn[i]);
}
}
var _29f=node.nodeValue;
if(typeof (_29f)=="string"){
rval.push(_29f);
}
})(MochiKit.DOM.getElement(node));
if(_29a){
return rval;
}else{
return rval.join("");
}
},removeEmptyTextNodes:function(_2a0){
_2a0=MochiKit.DOM.getElement(_2a0);
for(var i=0;i<_2a0.childNodes.length;i++){
var node=_2a0.childNodes[i];
if(node.nodeType==3&&!/\S/.test(node.nodeValue)){
node.parentNode.removeChild(node);
}
}
},makeClipping:function(_2a3){
_2a3=MochiKit.DOM.getElement(_2a3);
var _2a4=_2a3.style.overflow;
if((MochiKit.Style.getStyle(_2a3,"overflow")||"visible")!="hidden"){
_2a3.style.overflow="hidden";
}
return _2a4;
},undoClipping:function(_2a5,_2a6){
_2a5=MochiKit.DOM.getElement(_2a5);
if(!_2a6){
return;
}
_2a5.style.overflow=_2a6;
},makePositioned:function(_2a7){
_2a7=MochiKit.DOM.getElement(_2a7);
var pos=MochiKit.Style.getStyle(_2a7,"position");
if(pos=="static"||!pos){
_2a7.style.position="relative";
if(/Opera/.test(navigator.userAgent)){
_2a7.style.top=0;
_2a7.style.left=0;
}
}
},undoPositioned:function(_2a9){
_2a9=MochiKit.DOM.getElement(_2a9);
if(_2a9.style.position=="relative"){
_2a9.style.position=_2a9.style.top=_2a9.style.left=_2a9.style.bottom=_2a9.style.right="";
}
},getFirstElementByTagAndClassName:function(_2aa,_2ab,_2ac){
var self=MochiKit.DOM;
if(typeof (_2aa)=="undefined"||_2aa===null){
_2aa="*";
}
if(typeof (_2ac)=="undefined"||_2ac===null){
_2ac=self._document;
}
_2ac=self.getElement(_2ac);
var _2ae=(_2ac.getElementsByTagName(_2aa)||self._document.all);
if(typeof (_2ab)=="undefined"||_2ab===null){
return _2ae[0];
}
for(var i=0;i<_2ae.length;i++){
var _2b0=_2ae[i];
var _2b1=_2b0.className.split(" ");
for(var j=0;j<_2b1.length;j++){
if(_2b1[j]==_2ab){
return _2b0;
}
}
}
},getFirstParentByTagAndClassName:function(elem,_2b4,_2b5){
var self=MochiKit.DOM;
elem=self.getElement(elem);
if(typeof (_2b4)=="undefined"||_2b4===null){
_2b4="*";
}else{
_2b4=_2b4.toUpperCase();
}
if(typeof (_2b5)=="undefined"||_2b5===null){
_2b5=null;
}
var _2b7="";
var _2b8="";
while(elem&&elem.tagName){
elem=elem.parentNode;
if(_2b4=="*"&&_2b5===null){
return elem;
}
_2b7=elem.className.split(" ");
_2b8=elem.tagName.toUpperCase();
if(_2b5===null&&_2b4==_2b8){
return elem;
}else{
if(_2b5!==null){
for(var i=0;i<_2b7.length;i++){
if(_2b4=="*"&&_2b7[i]==_2b5){
return elem;
}else{
if(_2b4==_2b8&&_2b7[i]==_2b5){
return elem;
}
}
}
}
}
}
return elem;
},isParent:function(_2ba,_2bb){
if(!_2ba.parentNode||_2ba==_2bb){
return false;
}
if(_2ba.parentNode==_2bb){
return true;
}
return MochiKit.DOM.isParent(_2ba.parentNode,_2bb);
},__new__:function(win){
var m=MochiKit.Base;
if(typeof (document)!="undefined"){
this._document=document;
var _2be="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
this._xhtml=(document.documentElement&&document.createElementNS&&document.documentElement.namespaceURI===_2be);
}else{
if(MochiKit.MockDOM){
this._document=MochiKit.MockDOM.document;
}
}
this._window=win;
this.domConverters=new m.AdapterRegistry();
var _2bf=this._document.createElement("span");
var _2c0;
if(_2bf&&_2bf.attributes&&_2bf.attributes.length>0){
var _2c1=m.filter;
_2c0=function(node){
return _2c1(_2c0.ignoreAttrFilter,node.attributes);
};
_2c0.ignoreAttr={};
var _2c3=_2bf.attributes;
var _2c4=_2c0.ignoreAttr;
for(var i=0;i<_2c3.length;i++){
var a=_2c3[i];
_2c4[a.name]=a.value;
}
_2c0.ignoreAttrFilter=function(a){
return (_2c0.ignoreAttr[a.name]!=a.value);
};
_2c0.compliant=false;
_2c0.renames={"class":"className","checked":"defaultChecked","usemap":"useMap","for":"htmlFor","readonly":"readOnly","colspan":"colSpan","bgcolor":"bgColor","cellspacing":"cellSpacing","cellpadding":"cellPadding"};
}else{
_2c0=function(node){
return node.attributes;
};
_2c0.compliant=true;
_2c0.renames={};
}
this.attributeArray=_2c0;
var _2c9=function(_2ca,arr){
var _2cc=arr[1].split(".");
var str="";
var obj={};
str+="if (!MochiKit."+_2cc[1]+") { throw new Error(\"";
str+="This function has been deprecated and depends on MochiKit.";
str+=_2cc[1]+".\");}";
str+="return MochiKit."+_2cc[1]+"."+arr[0];
str+=".apply(this, arguments);";
obj[_2cc[2]]=new Function(str);
MochiKit.Base.update(MochiKit[_2ca],obj);
};
for(var i;i<MochiKit.DOM.DEPRECATED.length;i++){
_2c9("DOM",MochiKit.DOM.DEPRECATED[i]);
}
var _2cf=this.createDOMFunc;
this.UL=_2cf("ul");
this.OL=_2cf("ol");
this.LI=_2cf("li");
this.TD=_2cf("td");
this.TR=_2cf("tr");
this.TBODY=_2cf("tbody");
this.THEAD=_2cf("thead");
this.TFOOT=_2cf("tfoot");
this.TABLE=_2cf("table");
this.TH=_2cf("th");
this.INPUT=_2cf("input");
this.SPAN=_2cf("span");
this.A=_2cf("a");
this.DIV=_2cf("div");
this.IMG=_2cf("img");
this.BUTTON=_2cf("button");
this.TT=_2cf("tt");
this.PRE=_2cf("pre");
this.H1=_2cf("h1");
this.H2=_2cf("h2");
this.H3=_2cf("h3");
this.BR=_2cf("br");
this.HR=_2cf("hr");
this.LABEL=_2cf("label");
this.TEXTAREA=_2cf("textarea");
this.FORM=_2cf("form");
this.P=_2cf("p");
this.SELECT=_2cf("select");
this.OPTION=_2cf("option");
this.OPTGROUP=_2cf("optgroup");
this.LEGEND=_2cf("legend");
this.FIELDSET=_2cf("fieldset");
this.STRONG=_2cf("strong");
this.CANVAS=_2cf("canvas");
this.$=this.getElement;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.DOM.__new__(((typeof (window)=="undefined")?this:window));
if(MochiKit.__export__){
withWindow=MochiKit.DOM.withWindow;
withDocument=MochiKit.DOM.withDocument;
}
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Style");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Style depends on MochiKit.Base!";
}
try{
if(typeof (MochiKit.DOM)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Style depends on MochiKit.DOM!";
}
if(typeof (MochiKit.Style)=="undefined"){
MochiKit.Style={};
}
MochiKit.Style.NAME="MochiKit.Style";
MochiKit.Style.VERSION="1.4";
MochiKit.Style.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Style.toString=function(){
return this.__repr__();
};
MochiKit.Style.EXPORT_OK=[];
MochiKit.Style.EXPORT=["setStyle","setOpacity","getStyle","getElementDimensions","elementDimensions","setElementDimensions","getElementPosition","elementPosition","setElementPosition","setDisplayForElement","hideElement","showElement","getViewportDimensions","getViewportPosition","Dimensions","Coordinates"];
MochiKit.Style.Dimensions=function(w,h){
this.w=w;
this.h=h;
};
MochiKit.Style.Dimensions.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{w: "+repr(this.w)+", h: "+repr(this.h)+"}";
};
MochiKit.Style.Dimensions.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Style.Coordinates=function(x,y){
this.x=x;
this.y=y;
};
MochiKit.Style.Coordinates.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{x: "+repr(this.x)+", y: "+repr(this.y)+"}";
};
MochiKit.Style.Coordinates.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Base.update(MochiKit.Style,{getStyle:function(elem,_2d7){
var dom=MochiKit.DOM;
var d=dom._document;
elem=dom.getElement(elem);
_2d7=MochiKit.Base.camelize(_2d7);
if(!elem||elem==d){
return undefined;
}
if(_2d7=="opacity"&&elem.filters){
var _2da=(MochiKit.Style.getStyle(elem,"filter")||"").match(/alpha\(opacity=(.*)\)/);
if(_2da&&_2da[1]){
return parseFloat(_2da[1])/100;
}
return 1;
}
var _2db=elem.style?elem.style[_2d7]:null;
if(!_2db){
if(d.defaultView&&d.defaultView.getComputedStyle){
var css=d.defaultView.getComputedStyle(elem,null);
_2d7=_2d7.replace(/([A-Z])/g,"-$1").toLowerCase();
_2db=css?css.getPropertyValue(_2d7):null;
}else{
if(elem.currentStyle){
_2db=elem.currentStyle[_2d7];
}
}
}
if(_2d7=="opacity"){
_2db=parseFloat(_2db);
}
if(/Opera/.test(navigator.userAgent)&&(MochiKit.Base.find(["left","top","right","bottom"],_2d7)!=-1)){
if(MochiKit.Style.getStyle(elem,"position")=="static"){
_2db="auto";
}
}
return _2db=="auto"?null:_2db;
},setStyle:function(elem,_2de){
elem=MochiKit.DOM.getElement(elem);
for(var name in _2de){
if(name=="opacity"){
MochiKit.Style.setOpacity(elem,_2de[name]);
}else{
elem.style[MochiKit.Base.camelize(name)]=_2de[name];
}
}
},setOpacity:function(elem,o){
elem=MochiKit.DOM.getElement(elem);
var self=MochiKit.Style;
if(o==1){
var _2e3=/Gecko/.test(navigator.userAgent)&&!(/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent));
elem.style["opacity"]=_2e3?0.999999:1;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"");
}
}else{
if(o<0.00001){
o=0;
}
elem.style["opacity"]=o;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"")+"alpha(opacity="+o*100+")";
}
}
},getElementPosition:function(elem,_2e5){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
elem=dom.getElement(elem);
if(!elem||(!(elem.x&&elem.y)&&(!elem.parentNode===null||self.getStyle(elem,"display")=="none"))){
return undefined;
}
var c=new self.Coordinates(0,0);
var box=null;
var _2ea=null;
var d=MochiKit.DOM._document;
var de=d.documentElement;
var b=d.body;
if(!elem.parentNode&&elem.x&&elem.y){
c.x+=elem.x||0;
c.y+=elem.y||0;
}else{
if(elem.getBoundingClientRect){
box=elem.getBoundingClientRect();
c.x+=box.left+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
c.y+=box.top+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}else{
if(elem.offsetParent){
c.x+=elem.offsetLeft;
c.y+=elem.offsetTop;
_2ea=elem.offsetParent;
if(_2ea!=elem){
while(_2ea){
c.x+=_2ea.offsetLeft;
c.y+=_2ea.offsetTop;
_2ea=_2ea.offsetParent;
}
}
var ua=navigator.userAgent.toLowerCase();
if((typeof (opera)!="undefined"&&parseFloat(opera.version())<9)||(ua.indexOf("AppleWebKit")!=-1&&self.getStyle(elem,"position")=="absolute")){
c.x-=b.offsetLeft;
c.y-=b.offsetTop;
}
}
}
}
if(typeof (_2e5)!="undefined"){
_2e5=arguments.callee(_2e5);
if(_2e5){
c.x-=(_2e5.x||0);
c.y-=(_2e5.y||0);
}
}
if(elem.parentNode){
_2ea=elem.parentNode;
}else{
_2ea=null;
}
while(_2ea){
var _2ef=_2ea.tagName.toUpperCase();
if(_2ef==="BODY"||_2ef==="HTML"){
break;
}
var disp=self.getStyle(_2ea,"display");
if(disp!="inline"&&disp!="table-row"){
c.x-=_2ea.scrollLeft;
c.y-=_2ea.scrollTop;
}
if(_2ea.parentNode){
_2ea=_2ea.parentNode;
}else{
_2ea=null;
}
}
return c;
},setElementPosition:function(elem,_2f2,_2f3){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_2f3)=="undefined"){
_2f3="px";
}
var _2f4={};
var _2f5=MochiKit.Base.isUndefinedOrNull;
if(!_2f5(_2f2.x)){
_2f4["left"]=_2f2.x+_2f3;
}
if(!_2f5(_2f2.y)){
_2f4["top"]=_2f2.y+_2f3;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_2f4});
},getElementDimensions:function(elem){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
if(typeof (elem.w)=="number"||typeof (elem.h)=="number"){
return new self.Dimensions(elem.w||0,elem.h||0);
}
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var disp=self.getStyle(elem,"display");
if(disp!="none"&&disp!==""&&typeof (disp)!="undefined"){
return new self.Dimensions(elem.offsetWidth||0,elem.offsetHeight||0);
}
var s=elem.style;
var _2fb=s.visibility;
var _2fc=s.position;
s.visibility="hidden";
s.position="absolute";
s.display="";
var _2fd=elem.offsetWidth;
var _2fe=elem.offsetHeight;
s.display="none";
s.position=_2fc;
s.visibility=_2fb;
return new self.Dimensions(_2fd,_2fe);
},setElementDimensions:function(elem,_300,_301){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_301)=="undefined"){
_301="px";
}
var _302={};
var _303=MochiKit.Base.isUndefinedOrNull;
if(!_303(_300.w)){
_302["width"]=_300.w+_301;
}
if(!_303(_300.h)){
_302["height"]=_300.h+_301;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_302});
},setDisplayForElement:function(_304,_305){
var _306=MochiKit.Base.extend(null,arguments,1);
var _307=MochiKit.DOM.getElement;
for(var i=0;i<_306.length;i++){
_305=_307(_306[i]);
if(_305){
_305.style.display=_304;
}
}
},getViewportDimensions:function(){
var d=new MochiKit.Style.Dimensions();
var w=MochiKit.DOM._window;
var b=MochiKit.DOM._document.body;
if(w.innerWidth){
d.w=w.innerWidth;
d.h=w.innerHeight;
}else{
if(b.parentElement.clientWidth){
d.w=b.parentElement.clientWidth;
d.h=b.parentElement.clientHeight;
}else{
if(b&&b.clientWidth){
d.w=b.clientWidth;
d.h=b.clientHeight;
}
}
}
return d;
},getViewportPosition:function(){
var c=new MochiKit.Style.Coordinates(0,0);
var d=MochiKit.DOM._document;
var de=d.documentElement;
var db=d.body;
if(de&&(de.scrollTop||de.scrollLeft)){
c.x=de.scrollLeft;
c.y=de.scrollTop;
}else{
if(db){
c.x=db.scrollLeft;
c.y=db.scrollTop;
}
}
return c;
},__new__:function(){
var m=MochiKit.Base;
this.elementPosition=this.getElementPosition;
this.elementDimensions=this.getElementDimensions;
this.hideElement=m.partial(this.setDisplayForElement,"none");
this.showElement=m.partial(this.setDisplayForElement,"block");
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.Style.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Style);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Color");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
dojo.require("MochiKit.Style");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
JSAN.use("MochiKit.Style",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Color depends on MochiKit.Base";
}
try{
if(typeof (MochiKit.DOM)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Color depends on MochiKit.DOM";
}
try{
if(typeof (MochiKit.Style)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Color depends on MochiKit.Style";
}
if(typeof (MochiKit.Color)=="undefined"){
MochiKit.Color={};
}
MochiKit.Color.NAME="MochiKit.Color";
MochiKit.Color.VERSION="1.4";
MochiKit.Color.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Color.toString=function(){
return this.__repr__();
};
MochiKit.Color.Color=function(red,_312,blue,_314){
if(typeof (_314)=="undefined"||_314===null){
_314=1;
}
this.rgb={r:red,g:_312,b:blue,a:_314};
};
MochiKit.Color.Color.prototype={__class__:MochiKit.Color.Color,colorWithAlpha:function(_315){
var rgb=this.rgb;
var m=MochiKit.Color;
return m.Color.fromRGB(rgb.r,rgb.g,rgb.b,_315);
},colorWithHue:function(hue){
var hsl=this.asHSL();
hsl.h=hue;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithSaturation:function(_31b){
var hsl=this.asHSL();
hsl.s=_31b;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithLightness:function(_31e){
var hsl=this.asHSL();
hsl.l=_31e;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},darkerColorWithLevel:function(_321){
var hsl=this.asHSL();
hsl.l=Math.max(hsl.l-_321,0);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},lighterColorWithLevel:function(_324){
var hsl=this.asHSL();
hsl.l=Math.min(hsl.l+_324,1);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},blendedColor:function(_327,_328){
if(typeof (_328)=="undefined"||_328===null){
_328=0.5;
}
var sf=1-_328;
var s=this.rgb;
var d=_327.rgb;
var df=_328;
return MochiKit.Color.Color.fromRGB((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df));
},compareRGB:function(_32d){
var a=this.asRGB();
var b=_32d.asRGB();
return MochiKit.Base.compare([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a]);
},isLight:function(){
return this.asHSL().b>0.5;
},isDark:function(){
return (!this.isLight());
},toHSLString:function(){
var c=this.asHSL();
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hslString;
if(!rval){
var mid=(ccc(c.h,360).toFixed(0)+","+ccc(c.s,100).toPrecision(4)+"%"+","+ccc(c.l,100).toPrecision(4)+"%");
var a=c.a;
if(a>=1){
a=1;
rval="hsl("+mid+")";
}else{
if(a<=0){
a=0;
}
rval="hsla("+mid+","+a+")";
}
this._hslString=rval;
}
return rval;
},toRGBString:function(){
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._rgbString;
if(!rval){
var mid=(ccc(c.r,255).toFixed(0)+","+ccc(c.g,255).toFixed(0)+","+ccc(c.b,255).toFixed(0));
if(c.a!=1){
rval="rgba("+mid+","+c.a+")";
}else{
rval="rgb("+mid+")";
}
this._rgbString=rval;
}
return rval;
},asRGB:function(){
return MochiKit.Base.clone(this.rgb);
},toHexString:function(){
var m=MochiKit.Color;
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hexString;
if(!rval){
rval=("#"+m.toColorPart(ccc(c.r,255))+m.toColorPart(ccc(c.g,255))+m.toColorPart(ccc(c.b,255)));
this._hexString=rval;
}
return rval;
},asHSV:function(){
var hsv=this.hsv;
var c=this.rgb;
if(typeof (hsv)=="undefined"||hsv===null){
hsv=MochiKit.Color.rgbToHSV(this.rgb);
this.hsv=hsv;
}
return MochiKit.Base.clone(hsv);
},asHSL:function(){
var hsl=this.hsl;
var c=this.rgb;
if(typeof (hsl)=="undefined"||hsl===null){
hsl=MochiKit.Color.rgbToHSL(this.rgb);
this.hsl=hsl;
}
return MochiKit.Base.clone(hsl);
},toString:function(){
return this.toRGBString();
},repr:function(){
var c=this.rgb;
var col=[c.r,c.g,c.b,c.a];
return this.__class__.NAME+"("+col.join(", ")+")";
}};
MochiKit.Base.update(MochiKit.Color.Color,{fromRGB:function(red,_344,blue,_346){
var _347=MochiKit.Color.Color;
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_344=rgb.g;
blue=rgb.b;
if(typeof (rgb.a)=="undefined"){
_346=undefined;
}else{
_346=rgb.a;
}
}
return new _347(red,_344,blue,_346);
},fromHSL:function(hue,_34a,_34b,_34c){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hslToRGB.apply(m,arguments));
},fromHSV:function(hue,_34f,_350,_351){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hsvToRGB.apply(m,arguments));
},fromName:function(name){
var _354=MochiKit.Color.Color;
if(name.charAt(0)=="\""){
name=name.substr(1,name.length-2);
}
var _355=_354._namedColors[name.toLowerCase()];
if(typeof (_355)=="string"){
return _354.fromHexString(_355);
}else{
if(name=="transparent"){
return _354.transparentColor();
}
}
return null;
},fromString:function(_356){
var self=MochiKit.Color.Color;
var _358=_356.substr(0,3);
if(_358=="rgb"){
return self.fromRGBString(_356);
}else{
if(_358=="hsl"){
return self.fromHSLString(_356);
}else{
if(_356.charAt(0)=="#"){
return self.fromHexString(_356);
}
}
}
return self.fromName(_356);
},fromHexString:function(_359){
if(_359.charAt(0)=="#"){
_359=_359.substring(1);
}
var _35a=[];
var i,hex;
if(_359.length==3){
for(i=0;i<3;i++){
hex=_359.substr(i,1);
_35a.push(parseInt(hex+hex,16)/255);
}
}else{
for(i=0;i<6;i+=2){
hex=_359.substr(i,2);
_35a.push(parseInt(hex,16)/255);
}
}
var _35d=MochiKit.Color.Color;
return _35d.fromRGB.apply(_35d,_35a);
},_fromColorString:function(pre,_35f,_360,_361){
if(_361.indexOf(pre)===0){
_361=_361.substring(_361.indexOf("(",3)+1,_361.length-1);
}
var _362=_361.split(/\s*,\s*/);
var _363=[];
for(var i=0;i<_362.length;i++){
var c=_362[i];
var val;
var _367=c.substring(c.length-3);
if(c.charAt(c.length-1)=="%"){
val=0.01*parseFloat(c.substring(0,c.length-1));
}else{
if(_367=="deg"){
val=parseFloat(c)/360;
}else{
if(_367=="rad"){
val=parseFloat(c)/(Math.PI*2);
}else{
val=_360[i]*parseFloat(c);
}
}
}
_363.push(val);
}
return this[_35f].apply(this,_363);
},fromComputedStyle:function(elem,_369){
var d=MochiKit.DOM;
var cls=MochiKit.Color.Color;
for(elem=d.getElement(elem);elem;elem=elem.parentNode){
var _36c=MochiKit.Style.getStyle.apply(d,arguments);
if(!_36c){
continue;
}
var _36d=cls.fromString(_36c);
if(!_36d){
break;
}
if(_36d.asRGB().a>0){
return _36d;
}
}
return null;
},fromBackground:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"backgroundColor","background-color")||cls.whiteColor();
},fromText:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"color","color")||cls.blackColor();
},namedColors:function(){
return MochiKit.Base.clone(MochiKit.Color.Color._namedColors);
}});
MochiKit.Base.update(MochiKit.Color,{clampColorComponent:function(v,_373){
v*=_373;
if(v<0){
return 0;
}else{
if(v>_373){
return _373;
}else{
return v;
}
}
},_hslValue:function(n1,n2,hue){
if(hue>6){
hue-=6;
}else{
if(hue<0){
hue+=6;
}
}
var val;
if(hue<1){
val=n1+(n2-n1)*hue;
}else{
if(hue<3){
val=n2;
}else{
if(hue<4){
val=n1+(n2-n1)*(4-hue);
}else{
val=n1;
}
}
}
return val;
},hsvToRGB:function(hue,_379,_37a,_37b){
if(arguments.length==1){
var hsv=hue;
hue=hsv.h;
_379=hsv.s;
_37a=hsv.v;
_37b=hsv.a;
}
var red;
var _37e;
var blue;
if(_379===0){
red=_37a;
_37e=_37a;
blue=_37a;
}else{
var i=Math.floor(hue*6);
var f=(hue*6)-i;
var p=_37a*(1-_379);
var q=_37a*(1-(_379*f));
var t=_37a*(1-(_379*(1-f)));
switch(i){
case 1:
red=q;
_37e=_37a;
blue=p;
break;
case 2:
red=p;
_37e=_37a;
blue=t;
break;
case 3:
red=p;
_37e=q;
blue=_37a;
break;
case 4:
red=t;
_37e=p;
blue=_37a;
break;
case 5:
red=_37a;
_37e=p;
blue=q;
break;
case 6:
case 0:
red=_37a;
_37e=t;
blue=p;
break;
}
}
return {r:red,g:_37e,b:blue,a:_37b};
},hslToRGB:function(hue,_386,_387,_388){
if(arguments.length==1){
var hsl=hue;
hue=hsl.h;
_386=hsl.s;
_387=hsl.l;
_388=hsl.a;
}
var red;
var _38b;
var blue;
if(_386===0){
red=_387;
_38b=_387;
blue=_387;
}else{
var m2;
if(_387<=0.5){
m2=_387*(1+_386);
}else{
m2=_387+_386-(_387*_386);
}
var m1=(2*_387)-m2;
var f=MochiKit.Color._hslValue;
var h6=hue*6;
red=f(m1,m2,h6+2);
_38b=f(m1,m2,h6);
blue=f(m1,m2,h6-2);
}
return {r:red,g:_38b,b:blue,a:_388};
},rgbToHSV:function(red,_392,blue,_394){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_392=rgb.g;
blue=rgb.b;
_394=rgb.a;
}
var max=Math.max(Math.max(red,_392),blue);
var min=Math.min(Math.min(red,_392),blue);
var hue;
var _399;
var _39a=max;
if(min==max){
hue=0;
_399=0;
}else{
var _39b=(max-min);
_399=_39b/max;
if(red==max){
hue=(_392-blue)/_39b;
}else{
if(_392==max){
hue=2+((blue-red)/_39b);
}else{
hue=4+((red-_392)/_39b);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_399,v:_39a,a:_394};
},rgbToHSL:function(red,_39d,blue,_39f){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_39d=rgb.g;
blue=rgb.b;
_39f=rgb.a;
}
var max=Math.max(red,Math.max(_39d,blue));
var min=Math.min(red,Math.min(_39d,blue));
var hue;
var _3a4;
var _3a5=(max+min)/2;
var _3a6=max-min;
if(_3a6===0){
hue=0;
_3a4=0;
}else{
if(_3a5<=0.5){
_3a4=_3a6/(max+min);
}else{
_3a4=_3a6/(2-max-min);
}
if(red==max){
hue=(_39d-blue)/_3a6;
}else{
if(_39d==max){
hue=2+((blue-red)/_3a6);
}else{
hue=4+((red-_39d)/_3a6);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_3a4,l:_3a5,a:_39f};
},toColorPart:function(num){
num=Math.round(num);
var _3a8=num.toString(16);
if(num<16){
return "0"+_3a8;
}
return _3a8;
},__new__:function(){
var m=MochiKit.Base;
this.Color.fromRGBString=m.bind(this.Color._fromColorString,this.Color,"rgb","fromRGB",[1/255,1/255,1/255,1]);
this.Color.fromHSLString=m.bind(this.Color._fromColorString,this.Color,"hsl","fromHSL",[1/360,0.01,0.01,1]);
var _3aa=1/3;
var _3ab={black:[0,0,0],blue:[0,0,1],brown:[0.6,0.4,0.2],cyan:[0,1,1],darkGray:[_3aa,_3aa,_3aa],gray:[0.5,0.5,0.5],green:[0,1,0],lightGray:[2*_3aa,2*_3aa,2*_3aa],magenta:[1,0,1],orange:[1,0.5,0],purple:[0.5,0,0.5],red:[1,0,0],transparent:[0,0,0,0],white:[1,1,1],yellow:[1,1,0]};
var _3ac=function(name,r,g,b,a){
var rval=this.fromRGB(r,g,b,a);
this[name]=function(){
return rval;
};
return rval;
};
for(var k in _3ab){
var name=k+"Color";
var _3b5=m.concat([_3ac,this.Color,name],_3ab[k]);
this.Color[name]=m.bind.apply(null,_3b5);
}
var _3b6=function(){
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof Color)){
return false;
}
}
return true;
};
var _3b8=function(a,b){
return a.compareRGB(b);
};
m.nameFunctions(this);
m.registerComparator(this.Color.NAME,_3b6,_3b8);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
}});
MochiKit.Color.EXPORT=["Color"];
MochiKit.Color.EXPORT_OK=["clampColorComponent","rgbToHSL","hslToRGB","rgbToHSV","hsvToRGB","toColorPart"];
MochiKit.Color.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Color);
MochiKit.Color.Color._namedColors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Signal");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
dojo.require("MochiKit.Style");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
JSAN.use("MochiKit.Style",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Signal depends on MochiKit.Base!";
}
try{
if(typeof (MochiKit.DOM)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Signal depends on MochiKit.DOM!";
}
try{
if(typeof (MochiKit.Style)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Signal depends on MochiKit.Style!";
}
if(typeof (MochiKit.Signal)=="undefined"){
MochiKit.Signal={};
}
MochiKit.Signal.NAME="MochiKit.Signal";
MochiKit.Signal.VERSION="1.4";
MochiKit.Signal._observers=[];
MochiKit.Signal.Event=function(src,e){
this._event=e||window.event;
this._src=src;
};
MochiKit.Base.update(MochiKit.Signal.Event.prototype,{__repr__:function(){
var repr=MochiKit.Base.repr;
var str="{event(): "+repr(this.event())+", src(): "+repr(this.src())+", type(): "+repr(this.type())+", target(): "+repr(this.target());
if(this.type()&&this.type().indexOf("key")===0||this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu"){
str+=", modifier(): "+"{alt: "+repr(this.modifier().alt)+", ctrl: "+repr(this.modifier().ctrl)+", meta: "+repr(this.modifier().meta)+", shift: "+repr(this.modifier().shift)+", any: "+repr(this.modifier().any)+"}";
}
if(this.type()&&this.type().indexOf("key")===0){
str+=", key(): {code: "+repr(this.key().code)+", string: "+repr(this.key().string)+"}";
}
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
str+=", mouse(): {page: "+repr(this.mouse().page)+", client: "+repr(this.mouse().client);
if(this.type()!="mousemove"){
str+=", button: {left: "+repr(this.mouse().button.left)+", middle: "+repr(this.mouse().button.middle)+", right: "+repr(this.mouse().button.right)+"}}";
}else{
str+="}";
}
}
if(this.type()=="mouseover"||this.type()=="mouseout"){
str+=", relatedTarget(): "+repr(this.relatedTarget());
}
str+="}";
return str;
},toString:function(){
return this.__repr__();
},src:function(){
return this._src;
},event:function(){
return this._event;
},type:function(){
return this._event.type||undefined;
},target:function(){
return this._event.target||this._event.srcElement;
},_relatedTarget:null,relatedTarget:function(){
if(this._relatedTarget!==null){
return this._relatedTarget;
}
var elem=null;
if(this.type()=="mouseover"){
elem=(this._event.relatedTarget||this._event.fromElement);
}else{
if(this.type()=="mouseout"){
elem=(this._event.relatedTarget||this._event.toElement);
}
}
if(elem!==null){
this._relatedTarget=elem;
return elem;
}
return undefined;
},_modifier:null,modifier:function(){
if(this._modifier!==null){
return this._modifier;
}
var m={};
m.alt=this._event.altKey;
m.ctrl=this._event.ctrlKey;
m.meta=this._event.metaKey||false;
m.shift=this._event.shiftKey;
m.any=m.alt||m.ctrl||m.shift||m.meta;
this._modifier=m;
return m;
},_key:null,key:function(){
if(this._key!==null){
return this._key;
}
var k={};
if(this.type()&&this.type().indexOf("key")===0){
if(this.type()=="keydown"||this.type()=="keyup"){
k.code=this._event.keyCode;
k.string=(MochiKit.Signal._specialKeys[k.code]||"KEY_UNKNOWN");
this._key=k;
return k;
}else{
if(this.type()=="keypress"){
k.code=0;
k.string="";
if(typeof (this._event.charCode)!="undefined"&&this._event.charCode!==0&&!MochiKit.Signal._specialMacKeys[this._event.charCode]){
k.code=this._event.charCode;
k.string=String.fromCharCode(k.code);
}else{
if(this._event.keyCode&&typeof (this._event.charCode)=="undefined"){
k.code=this._event.keyCode;
k.string=String.fromCharCode(k.code);
}
}
this._key=k;
return k;
}
}
}
return undefined;
},_mouse:null,mouse:function(){
if(this._mouse!==null){
return this._mouse;
}
var m={};
var e=this._event;
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
m.client=new MochiKit.Style.Coordinates(0,0);
if(e.clientX||e.clientY){
m.client.x=(!e.clientX||e.clientX<0)?0:e.clientX;
m.client.y=(!e.clientY||e.clientY<0)?0:e.clientY;
}
m.page=new MochiKit.Style.Coordinates(0,0);
if(e.pageX||e.pageY){
m.page.x=(!e.pageX||e.pageX<0)?0:e.pageX;
m.page.y=(!e.pageY||e.pageY<0)?0:e.pageY;
}else{
var de=MochiKit.DOM._document.documentElement;
var b=MochiKit.DOM._document.body;
m.page.x=e.clientX+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
m.page.y=e.clientY+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}
if(this.type()!="mousemove"){
m.button={};
m.button.left=false;
m.button.right=false;
m.button.middle=false;
if(e.which){
m.button.left=(e.which==1);
m.button.middle=(e.which==2);
m.button.right=(e.which==3);
}else{
m.button.left=!!(e.button&1);
m.button.right=!!(e.button&2);
m.button.middle=!!(e.button&4);
}
}
this._mouse=m;
return m;
}
return undefined;
},stop:function(){
this.stopPropagation();
this.preventDefault();
},stopPropagation:function(){
if(this._event.stopPropagation){
this._event.stopPropagation();
}else{
this._event.cancelBubble=true;
}
},preventDefault:function(){
if(this._event.preventDefault){
this._event.preventDefault();
}else{
if(this._confirmUnload===null){
this._event.returnValue=false;
}
}
},_confirmUnload:null,confirmUnload:function(msg){
if(this.type()=="beforeunload"){
this._confirmUnload=msg;
this._event.returnValue=msg;
}
}});
MochiKit.Signal._specialMacKeys={3:"KEY_ENTER",63289:"KEY_NUM_PAD_CLEAR",63276:"KEY_PAGE_UP",63277:"KEY_PAGE_DOWN",63275:"KEY_END",63273:"KEY_HOME",63234:"KEY_ARROW_LEFT",63232:"KEY_ARROW_UP",63235:"KEY_ARROW_RIGHT",63233:"KEY_ARROW_DOWN",63302:"KEY_INSERT",63272:"KEY_DELETE"};
(function(){
var _3c7=MochiKit.Signal._specialMacKeys;
for(i=63236;i<=63242;i++){
_3c7[i]="KEY_F"+(i-63236+1);
}
})();
MochiKit.Signal._specialKeys={8:"KEY_BACKSPACE",9:"KEY_TAB",12:"KEY_NUM_PAD_CLEAR",13:"KEY_ENTER",16:"KEY_SHIFT",17:"KEY_CTRL",18:"KEY_ALT",19:"KEY_PAUSE",20:"KEY_CAPS_LOCK",27:"KEY_ESCAPE",32:"KEY_SPACEBAR",33:"KEY_PAGE_UP",34:"KEY_PAGE_DOWN",35:"KEY_END",36:"KEY_HOME",37:"KEY_ARROW_LEFT",38:"KEY_ARROW_UP",39:"KEY_ARROW_RIGHT",40:"KEY_ARROW_DOWN",44:"KEY_PRINT_SCREEN",45:"KEY_INSERT",46:"KEY_DELETE",59:"KEY_SEMICOLON",91:"KEY_WINDOWS_LEFT",92:"KEY_WINDOWS_RIGHT",93:"KEY_SELECT",106:"KEY_NUM_PAD_ASTERISK",107:"KEY_NUM_PAD_PLUS_SIGN",109:"KEY_NUM_PAD_HYPHEN-MINUS",110:"KEY_NUM_PAD_FULL_STOP",111:"KEY_NUM_PAD_SOLIDUS",144:"KEY_NUM_LOCK",145:"KEY_SCROLL_LOCK",186:"KEY_SEMICOLON",187:"KEY_EQUALS_SIGN",188:"KEY_COMMA",189:"KEY_HYPHEN-MINUS",190:"KEY_FULL_STOP",191:"KEY_SOLIDUS",192:"KEY_GRAVE_ACCENT",219:"KEY_LEFT_SQUARE_BRACKET",220:"KEY_REVERSE_SOLIDUS",221:"KEY_RIGHT_SQUARE_BRACKET",222:"KEY_APOSTROPHE"};
(function(){
var _3c8=MochiKit.Signal._specialKeys;
for(var i=48;i<=57;i++){
_3c8[i]="KEY_"+(i-48);
}
for(i=65;i<=90;i++){
_3c8[i]="KEY_"+String.fromCharCode(i);
}
for(i=96;i<=105;i++){
_3c8[i]="KEY_NUM_PAD_"+(i-96);
}
for(i=112;i<=123;i++){
_3c8[i]="KEY_F"+(i-112+1);
}
})();
MochiKit.Signal.Ident=function(_3ca){
this.source=_3ca.source;
this.signal=_3ca.signal;
this.listener=_3ca.listener;
this.isDOM=_3ca.isDOM;
this.objOrFunc=_3ca.objOrFunc;
this.funcOrStr=_3ca.funcOrStr;
this.connected=_3ca.connected;
};
MochiKit.Signal.Ident.prototype={};
MochiKit.Base.update(MochiKit.Signal,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},_unloadCache:function(){
var self=MochiKit.Signal;
var _3cc=self._observers;
for(var i=0;i<_3cc.length;i++){
if(_3cc[i].signal!=="onload"&&_3cc[i].signal!=="onunload"){
self._disconnect(_3cc[i]);
}
}
},_listener:function(src,sig,func,obj,_3d2){
var self=MochiKit.Signal;
var E=self.Event;
if(!_3d2){
return MochiKit.Base.bind(func,obj);
}
obj=obj||src;
if(typeof (func)=="string"){
if(sig==="onload"||sig==="onunload"){
return function(_3d5){
obj[func].apply(obj,[new E(src,_3d5)]);
var _3d6=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:obj,funcOrStr:func});
MochiKit.Signal._disconnect(_3d6);
};
}else{
return function(_3d7){
obj[func].apply(obj,[new E(src,_3d7)]);
};
}
}else{
if(sig==="onload"||sig==="onunload"){
return function(_3d8){
func.apply(obj,[new E(src,_3d8)]);
MochiKit.Signal.disconnect(src,sig,func);
var _3d9=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:func});
MochiKit.Signal._disconnect(_3d9);
};
}else{
return function(_3da){
func.apply(obj,[new E(src,_3da)]);
};
}
}
},_browserAlreadyHasMouseEnterAndLeave:function(){
return /MSIE/.test(navigator.userAgent);
},_mouseEnterListener:function(src,sig,func,obj){
var E=MochiKit.Signal.Event;
return function(_3e0){
var e=new E(src,_3e0);
try{
e.relatedTarget().nodeName;
}
catch(err){
return;
}
e.stop();
if(MochiKit.DOM.isChildNode(e.relatedTarget(),src)){
return;
}
e.type=function(){
return sig;
};
if(typeof (func)=="string"){
return obj[func].apply(obj,[e]);
}else{
return func.apply(obj,[e]);
}
};
},_getDestPair:function(_3e2,_3e3){
var obj=null;
var func=null;
if(typeof (_3e3)!="undefined"){
obj=_3e2;
func=_3e3;
if(typeof (_3e3)=="string"){
if(typeof (_3e2[_3e3])!="function"){
throw new Error("'funcOrStr' must be a function on 'objOrFunc'");
}
}else{
if(typeof (_3e3)!="function"){
throw new Error("'funcOrStr' must be a function or string");
}
}
}else{
if(typeof (_3e2)!="function"){
throw new Error("'objOrFunc' must be a function if 'funcOrStr' is not given");
}else{
func=_3e2;
}
}
return [obj,func];
},connect:function(src,sig,_3e8,_3e9){
src=MochiKit.DOM.getElement(src);
var self=MochiKit.Signal;
if(typeof (sig)!="string"){
throw new Error("'sig' must be a string");
}
var _3eb=self._getDestPair(_3e8,_3e9);
var obj=_3eb[0];
var func=_3eb[1];
if(typeof (obj)=="undefined"||obj===null){
obj=src;
}
var _3ee=!!(src.addEventListener||src.attachEvent);
if(_3ee&&(sig==="onmouseenter"||sig==="onmouseleave")&&!self._browserAlreadyHasMouseEnterAndLeave()){
var _3ef=self._mouseEnterListener(src,sig.substr(2),func,obj);
if(sig==="onmouseenter"){
sig="onmouseover";
}else{
sig="onmouseout";
}
}else{
var _3ef=self._listener(src,sig,func,obj,_3ee);
}
if(src.addEventListener){
src.addEventListener(sig.substr(2),_3ef,false);
}else{
if(src.attachEvent){
src.attachEvent(sig,_3ef);
}
}
var _3f0=new MochiKit.Signal.Ident({source:src,signal:sig,listener:_3ef,isDOM:_3ee,objOrFunc:_3e8,funcOrStr:_3e9,connected:true});
self._observers.push(_3f0);
if(!_3ee&&typeof (src.__connect__)=="function"){
var args=MochiKit.Base.extend([_3f0],arguments,1);
src.__connect__.apply(src,args);
}
return _3f0;
},_disconnect:function(_3f2){
if(!_3f2.connected){
return;
}
_3f2.connected=false;
if(!_3f2.isDOM){
return;
}
var src=_3f2.source;
var sig=_3f2.signal;
var _3f5=_3f2.listener;
if(src.removeEventListener){
src.removeEventListener(sig.substr(2),_3f5,false);
}else{
if(src.detachEvent){
src.detachEvent(sig,_3f5);
}else{
throw new Error("'src' must be a DOM element");
}
}
},disconnect:function(_3f6){
var self=MochiKit.Signal;
var _3f8=self._observers;
var m=MochiKit.Base;
if(arguments.length>1){
var src=MochiKit.DOM.getElement(arguments[0]);
var sig=arguments[1];
var obj=arguments[2];
var func=arguments[3];
for(var i=_3f8.length-1;i>=0;i--){
var o=_3f8[i];
if(o.source===src&&o.signal===sig&&o.objOrFunc===obj&&o.funcOrStr===func){
self._disconnect(o);
if(!self._lock){
_3f8.splice(i,1);
}else{
self._dirty=true;
}
return true;
}
}
}else{
var idx=m.findIdentical(_3f8,_3f6);
if(idx>=0){
self._disconnect(_3f6);
if(!self._lock){
_3f8.splice(idx,1);
}else{
self._dirty=true;
}
return true;
}
}
return false;
},disconnectAllTo:function(_401,_402){
var self=MochiKit.Signal;
var _404=self._observers;
var _405=self._disconnect;
var _406=self._lock;
var _407=self._dirty;
if(typeof (_402)==="undefined"){
_402=null;
}
for(var i=_404.length-1;i>=0;i--){
var _409=_404[i];
if(_409.objOrFunc===_401&&(_402===null||_409.funcOrStr===_402)){
_405(_409);
if(_406){
_407=true;
}else{
_404.splice(i,1);
}
}
}
self._dirty=_407;
},disconnectAll:function(src,sig){
src=MochiKit.DOM.getElement(src);
var m=MochiKit.Base;
var _40d=m.flattenArguments(m.extend(null,arguments,1));
var self=MochiKit.Signal;
var _40f=self._disconnect;
var _410=self._observers;
var i,_412;
var _413=self._lock;
var _414=self._dirty;
if(_40d.length===0){
for(i=_410.length-1;i>=0;i--){
_412=_410[i];
if(_412.source===src){
_40f(_412);
if(!_413){
_410.splice(i,1);
}else{
_414=true;
}
}
}
}else{
var sigs={};
for(i=0;i<_40d.length;i++){
sigs[_40d[i]]=true;
}
for(i=_410.length-1;i>=0;i--){
_412=_410[i];
if(_412.source===src&&_412.signal in sigs){
_40f(_412);
if(!_413){
_410.splice(i,1);
}else{
_414=true;
}
}
}
}
self._dirty=_414;
},signal:function(src,sig){
var self=MochiKit.Signal;
var _419=self._observers;
src=MochiKit.DOM.getElement(src);
var args=MochiKit.Base.extend(null,arguments,2);
var _41b=[];
self._lock=true;
for(var i=0;i<_419.length;i++){
var _41d=_419[i];
if(_41d.source===src&&_41d.signal===sig){
try{
_41d.listener.apply(src,args);
}
catch(e){
_41b.push(e);
}
}
}
self._lock=false;
if(self._dirty){
self._dirty=false;
for(var i=_419.length-1;i>=0;i--){
if(!_419[i].connected){
_419.splice(i,1);
}
}
}
if(_41b.length==1){
throw _41b[0];
}else{
if(_41b.length>1){
var e=new Error("Multiple errors thrown in handling 'sig', see errors property");
e.errors=_41b;
throw e;
}
}
}});
MochiKit.Signal.EXPORT_OK=[];
MochiKit.Signal.EXPORT=["connect","disconnect","signal","disconnectAll","disconnectAllTo"];
MochiKit.Signal.__new__=function(win){
var m=MochiKit.Base;
this._document=document;
this._window=win;
this._lock=false;
this._dirty=false;
try{
this.connect(window,"onunload",this._unloadCache);
}
catch(e){
}
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Signal.__new__(this);
if(MochiKit.__export__){
connect=MochiKit.Signal.connect;
disconnect=MochiKit.Signal.disconnect;
disconnectAll=MochiKit.Signal.disconnectAll;
signal=MochiKit.Signal.signal;
}
MochiKit.Base._exportSymbols(this,MochiKit.Signal);


Date.ext={};Date.ext.util={};Date.ext.util.xPad=function(x,pad,r){if(typeof (r)=="undefined"){r=10}for(;parseInt(x,10)<r&&r>1;r/=10){x=pad.toString()+x}return x.toString()};Date.prototype.locale="en-GB";if(document.getElementsByTagName("html")&&document.getElementsByTagName("html")[0].lang){Date.prototype.locale=document.getElementsByTagName("html")[0].lang}Date.ext.locales={};Date.ext.locales.en={a:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],A:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],b:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],B:["January","February","March","April","May","June","July","August","September","October","November","December"],c:"%a %d %b %Y %T %Z",p:["AM","PM"],P:["am","pm"],x:"%d/%m/%y",X:"%T"};Date.ext.locales["en-US"]=Date.ext.locales.en;Date.ext.locales["en-US"].c="%a %d %b %Y %r %Z";Date.ext.locales["en-US"].x="%D";Date.ext.locales["en-US"].X="%r";Date.ext.locales["en-GB"]=Date.ext.locales.en;Date.ext.locales["en-AU"]=Date.ext.locales["en-GB"];Date.ext.formats={a:function(d){return Date.ext.locales[d.locale].a[d.getDay()]},A:function(d){return Date.ext.locales[d.locale].A[d.getDay()]},b:function(d){return Date.ext.locales[d.locale].b[d.getMonth()]},B:function(d){return Date.ext.locales[d.locale].B[d.getMonth()]},c:"toLocaleString",C:function(d){return Date.ext.util.xPad(parseInt(d.getFullYear()/100,10),0)},d:["getDate","0"],e:["getDate"," "],g:function(d){return Date.ext.util.xPad(parseInt(Date.ext.util.G(d)/100,10),0)},G:function(d){var y=d.getFullYear();var V=parseInt(Date.ext.formats.V(d),10);var W=parseInt(Date.ext.formats.W(d),10);if(W>V){y++}else{if(W===0&&V>=52){y--}}return y},H:["getHours","0"],I:function(d){var I=d.getHours()%12;return Date.ext.util.xPad(I===0?12:I,0)},j:function(d){var ms=d-new Date(""+d.getFullYear()+"/1/1 GMT");ms+=d.getTimezoneOffset()*60000;var doy=parseInt(ms/60000/60/24,10)+1;return Date.ext.util.xPad(doy,0,100)},m:function(d){return Date.ext.util.xPad(d.getMonth()+1,0)},M:["getMinutes","0"],p:function(d){return Date.ext.locales[d.locale].p[d.getHours()>=12?1:0]},P:function(d){return Date.ext.locales[d.locale].P[d.getHours()>=12?1:0]},S:["getSeconds","0"],u:function(d){var dow=d.getDay();return dow===0?7:dow},U:function(d){var doy=parseInt(Date.ext.formats.j(d),10);var rdow=6-d.getDay();var woy=parseInt((doy+rdow)/7,10);return Date.ext.util.xPad(woy,0)},V:function(d){var woy=parseInt(Date.ext.formats.W(d),10);var dow1_1=(new Date(""+d.getFullYear()+"/1/1")).getDay();var idow=woy+(dow1_1>4||dow1_1<=1?0:1);if(idow==53&&(new Date(""+d.getFullYear()+"/12/31")).getDay()<4){idow=1}else{if(idow===0){idow=Date.ext.formats.V(new Date(""+(d.getFullYear()-1)+"/12/31"))}}return Date.ext.util.xPad(idow,0)},w:"getDay",W:function(d){var doy=parseInt(Date.ext.formats.j(d),10);var rdow=7-Date.ext.formats.u(d);var woy=parseInt((doy+rdow)/7,10);return Date.ext.util.xPad(woy,0,10)},y:function(d){return Date.ext.util.xPad(d.getFullYear()%100,0)},Y:"getFullYear",z:function(d){var o=d.getTimezoneOffset();var H=Date.ext.util.xPad(parseInt(Math.abs(o/60),10),0);var M=Date.ext.util.xPad(o%60,0);return(o>0?"-":"+")+H+M},Z:function(d){return d.toString().replace(/^.*\(([^)]+)\)$/,"$1")},"%":function(d){return"%"}};Date.ext.aggregates={c:"locale",D:"%m/%d/%y",h:"%b",n:"\n",r:"%I:%M:%S %p",R:"%H:%M",t:"\t",T:"%H:%M:%S",x:"locale",X:"locale"};Date.ext.aggregates.z=Date.ext.formats.z(new Date());Date.ext.aggregates.Z=Date.ext.formats.Z(new Date());Date.ext.unsupported={};Date.prototype.strftime=function(fmt){if(!(this.locale in Date.ext.locales)){if(this.locale.replace(/-[a-zA-Z]+$/,"") in Date.ext.locales){this.locale=this.locale.replace(/-[a-zA-Z]+$/,"")}else{this.locale="en-GB"}}var d=this;while(fmt.match(/%[cDhnrRtTxXzZ]/)){fmt=fmt.replace(/%([cDhnrRtTxXzZ])/g,function(m0,m1){var f=Date.ext.aggregates[m1];return(f=="locale"?Date.ext.locales[d.locale][m1]:f)})}var str=fmt.replace(/%([aAbBCdegGHIjmMpPSuUVwWyY%])/g,function(m0,m1){var f=Date.ext.formats[m1];if(typeof (f)=="string"){return d[f]()}else{if(typeof (f)=="function"){return f.call(d,d)}else{if(typeof (f)=="object"&&typeof (f[0])=="string"){return Date.ext.util.xPad(d[f[0]](),f[1])}else{return m1}}}});d=null;return str};
DygraphLayout=function(_1,_2){
this.dygraph_=_1;
this.options={};
MochiKit.Base.update(this.options,_2?_2:{});
this.datasets=new Array();
};
DygraphLayout.prototype.attr_=function(_3){
return this.dygraph_.attr_(_3);
};
DygraphLayout.prototype.addDataset=function(_4,_5){
this.datasets[_4]=_5;
};
DygraphLayout.prototype.evaluate=function(){
this._evaluateLimits();
this._evaluateLineCharts();
this._evaluateLineTicks();
};
DygraphLayout.prototype._evaluateLimits=function(){
this.minxval=this.maxxval=null;
for(var _6 in this.datasets){
var _7=this.datasets[_6];
var x1=_7[0][0];
if(!this.minxval||x1<this.minxval){
this.minxval=x1;
}
var x2=_7[_7.length-1][0];
if(!this.maxxval||x2>this.maxxval){
this.maxxval=x2;
}
}
this.xrange=this.maxxval-this.minxval;
this.xscale=(this.xrange!=0?1/this.xrange:1);
this.minyval=this.options.yAxis[0];
this.maxyval=this.options.yAxis[1];
this.yrange=this.maxyval-this.minyval;
this.yscale=(this.yrange!=0?1/this.yrange:1);
};
DygraphLayout.prototype._evaluateLineCharts=function(){
this.points=new Array();
for(var _10 in this.datasets){
var _11=this.datasets[_10];
for(var j=0;j<_11.length;j++){
var _13=_11[j];
var _14={x:((parseFloat(_13[0])-this.minxval)*this.xscale),y:1-((parseFloat(_13[1])-this.minyval)*this.yscale),xval:parseFloat(_13[0]),yval:parseFloat(_13[1]),name:_10};
if(_14.y<=0){
_14.y=0;
}
if(_14.y>=1){
_14.y=1;
}
if((_14.x>=0)&&(_14.x<=1)){
this.points.push(_14);
}
}
}
};
DygraphLayout.prototype._evaluateLineTicks=function(){
this.xticks=new Array();
for(var i=0;i<this.options.xTicks.length;i++){
var _16=this.options.xTicks[i];
var _17=_16.label;
var pos=this.xscale*(_16.v-this.minxval);
if((pos>=0)&&(pos<=1)){
this.xticks.push([pos,_17]);
}
}
this.yticks=new Array();
for(var i=0;i<this.options.yTicks.length;i++){
var _16=this.options.yTicks[i];
var _17=_16.label;
var pos=1-(this.yscale*(_16.v-this.minyval));
if((pos>=0)&&(pos<=1)){
this.yticks.push([pos,_17]);
}
}
};
DygraphLayout.prototype.evaluateWithError=function(){
this.evaluate();
if(!this.options.errorBars){
return;
}
var i=0;
for(var _19 in this.datasets){
var j=0;
var _20=this.datasets[_19];
for(var j=0;j<_20.length;j++,i++){
var _21=_20[j];
var xv=parseFloat(_21[0]);
var yv=parseFloat(_21[1]);
if(xv==this.points[i].xval&&yv==this.points[i].yval){
this.points[i].errorMinus=parseFloat(_21[2]);
this.points[i].errorPlus=parseFloat(_21[3]);
}
}
}
};
DygraphLayout.prototype.removeAllDatasets=function(){
delete this.datasets;
this.datasets=new Array();
};
DygraphLayout.prototype.updateOptions=function(_24){
MochiKit.Base.update(this.options,_24?_24:{});
};
DygraphCanvasRenderer=function(_25,_26,_27,_28){
this.dygraph_=_25;
this.options={"strokeWidth":0.5,"drawXAxis":true,"drawYAxis":true,"axisLineColor":Color.blackColor(),"axisLineWidth":0.5,"axisTickSize":3,"axisLabelColor":Color.blackColor(),"axisLabelFont":"Arial","axisLabelFontSize":9,"axisLabelWidth":50,"drawYGrid":true,"drawXGrid":true,"gridLineColor":MochiKit.Color.Color.grayColor()};
MochiKit.Base.update(this.options,_28);
this.layout=_27;
this.element=MochiKit.DOM.getElement(_26);
this.container=this.element.parentNode;
this.isIE=(/MSIE/.test(navigator.userAgent)&&!window.opera);
if(this.isIE&&!isNil(G_vmlCanvasManager)){
this.IEDelay=0.5;
this.maxTries=5;
this.renderDelay=null;
this.clearDelay=null;
this.element=G_vmlCanvasManager.initElement(this.element);
}
this.height=this.element.height;
this.width=this.element.width;
if(!this.isIE&&!(DygraphCanvasRenderer.isSupported(this.element))){
throw "Canvas is not supported.";
}
this.xlabels=new Array();
this.ylabels=new Array();
this.area={x:this.options.yAxisLabelWidth+2*this.options.axisTickSize,y:0};
this.area.w=this.width-this.area.x-this.options.rightGap;
this.area.h=this.height-this.options.axisLabelFontSize-2*this.options.axisTickSize;
MochiKit.DOM.updateNodeAttributes(this.container,{"style":{"position":"relative","width":this.width+"px"}});
};
DygraphCanvasRenderer.prototype.clear=function(){
if(this.isIE){
try{
if(this.clearDelay){
this.clearDelay.cancel();
this.clearDelay=null;
}
var _29=this.element.getContext("2d");
}
catch(e){
this.clearDelay=MochiKit.Async.wait(this.IEDelay);
this.clearDelay.addCallback(bind(this.clear,this));
return;
}
}
var _29=this.element.getContext("2d");
_29.clearRect(0,0,this.width,this.height);
for(var i=0;i<this.xlabels.length;i++){
MochiKit.DOM.removeElement(this.xlabels[i]);
}
for(var i=0;i<this.ylabels.length;i++){
MochiKit.DOM.removeElement(this.ylabels[i]);
}
this.xlabels=new Array();
this.ylabels=new Array();
};
DygraphCanvasRenderer.isSupported=function(_30){
var _31=null;
try{
if(MochiKit.Base.isUndefinedOrNull(_30)){
_31=MochiKit.DOM.CANVAS({});
}else{
_31=MochiKit.DOM.getElement(_30);
}
var _32=_31.getContext("2d");
}
catch(e){
var ie=navigator.appVersion.match(/MSIE (\d\.\d)/);
var _34=(navigator.userAgent.toLowerCase().indexOf("opera")!=-1);
if((!ie)||(ie[1]<6)||(_34)){
return false;
}
return true;
}
return true;
};
DygraphCanvasRenderer.prototype.render=function(){
var ctx=this.element.getContext("2d");
if(this.options.drawYGrid){
var _36=this.layout.yticks;
ctx.save();
ctx.strokeStyle=this.options.gridLineColor.toRGBString();
ctx.lineWidth=this.options.axisLineWidth;
for(var i=0;i<_36.length;i++){
var x=this.area.x;
var y=this.area.y+_36[i][0]*this.area.h;
ctx.beginPath();
ctx.moveTo(x,y);
ctx.lineTo(x+this.area.w,y);
ctx.closePath();
ctx.stroke();
}
}
if(this.options.drawXGrid){
var _36=this.layout.xticks;
ctx.save();
ctx.strokeStyle=this.options.gridLineColor.toRGBString();
ctx.lineWidth=this.options.axisLineWidth;
for(var i=0;i<_36.length;i++){
var x=this.area.x+_36[i][0]*this.area.w;
var y=this.area.y+this.area.h;
ctx.beginPath();
ctx.moveTo(x,y);
ctx.lineTo(x,this.area.y);
ctx.closePath();
ctx.stroke();
}
}
this._renderLineChart();
this._renderAxis();
};
DygraphCanvasRenderer.prototype._renderAxis=function(){
if(!this.options.drawXAxis&&!this.options.drawYAxis){
return;
}
var _39=this.element.getContext("2d");
var _40={"style":{"position":"absolute","fontSize":this.options.axisLabelFontSize+"px","zIndex":10,"color":this.options.axisLabelColor.toRGBString(),"width":this.options.axisLabelWidth+"px","overflow":"hidden"}};
_39.save();
_39.strokeStyle=this.options.axisLineColor.toRGBString();
_39.lineWidth=this.options.axisLineWidth;
if(this.options.drawYAxis){
if(this.layout.yticks){
for(var i=0;i<this.layout.yticks.length;i++){
var _41=this.layout.yticks[i];
if(typeof (_41)=="function"){
return;
}
var x=this.area.x;
var y=this.area.y+_41[0]*this.area.h;
_39.beginPath();
_39.moveTo(x,y);
_39.lineTo(x-this.options.axisTickSize,y);
_39.closePath();
_39.stroke();
var _42=DIV(_40,_41[1]);
var top=(y-this.options.axisLabelFontSize/2);
if(top<0){
top=0;
}
if(top+this.options.axisLabelFontSize+3>this.height){
_42.style.bottom="0px";
}else{
_42.style.top=top+"px";
}
_42.style.left="0px";
_42.style.textAlign="right";
_42.style.width=this.options.yAxisLabelWidth+"px";
MochiKit.DOM.appendChildNodes(this.container,_42);
this.ylabels.push(_42);
}
var _44=this.ylabels[0];
var _45=this.options.axisLabelFontSize;
var _46=parseInt(_44.style.top)+_45;
if(_46>this.height-_45){
_44.style.top=(parseInt(_44.style.top)-_45/2)+"px";
}
}
_39.beginPath();
_39.moveTo(this.area.x,this.area.y);
_39.lineTo(this.area.x,this.area.y+this.area.h);
_39.closePath();
_39.stroke();
}
if(this.options.drawXAxis){
if(this.layout.xticks){
for(var i=0;i<this.layout.xticks.length;i++){
var _41=this.layout.xticks[i];
if(typeof (dataset)=="function"){
return;
}
var x=this.area.x+_41[0]*this.area.w;
var y=this.area.y+this.area.h;
_39.beginPath();
_39.moveTo(x,y);
_39.lineTo(x,y+this.options.axisTickSize);
_39.closePath();
_39.stroke();
var _42=DIV(_40,_41[1]);
_42.style.textAlign="center";
_42.style.bottom="0px";
var _47=(x-this.options.axisLabelWidth/2);
if(_47+this.options.axisLabelWidth>this.width){
_47=this.width-this.options.xAxisLabelWidth;
_42.style.textAlign="right";
}
if(_47<0){
_47=0;
_42.style.textAlign="left";
}
_42.style.left=_47+"px";
_42.style.width=this.options.xAxisLabelWidth+"px";
MochiKit.DOM.appendChildNodes(this.container,_42);
this.xlabels.push(_42);
}
}
_39.beginPath();
_39.moveTo(this.area.x,this.area.y+this.area.h);
_39.lineTo(this.area.x+this.area.w,this.area.y+this.area.h);
_39.closePath();
_39.stroke();
}
_39.restore();
};
DygraphCanvasRenderer.prototype._renderLineChart=function(){
var _48=this.element.getContext("2d");
var _49=this.options.colorScheme.length;
var _50=this.options.colorScheme;
var _51=MochiKit.Base.keys(this.layout.datasets);
var _52=this.layout.options.errorBars;
var _53=_51.length;
var _54=MochiKit.Base.bind;
var _55=MochiKit.Base.partial;
for(var i=0;i<this.layout.points.length;i++){
var _56=this.layout.points[i];
_56.canvasx=this.area.w*_56.x+this.area.x;
_56.canvasy=this.area.h*_56.y+this.area.y;
}
var _57=function(x){
return x&&!isNaN(x);
};
var _58=function(ctx){
for(var i=0;i<_53;i++){
var _59=_51[i];
var _60=_50[i%_49];
var _61=this.options.strokeColorTransform;
_48.save();
_48.strokeStyle=_60.toRGBString();
_48.lineWidth=this.options.strokeWidth;
var _56=this.layout.points[0];
var _62=this.dygraph_.attr_("pointSize");
var _63=null,prevY=null;
var _64=this.dygraph_.attr_("drawPoints");
var _65=this.layout.points;
for(var j=0;j<_65.length;j++){
var _56=_65[j];
if(_56.name==_59){
if(!_57(_56.canvasy)){
_63=prevY=null;
}else{
var _66=(!_63&&(j==_65.length-1||!_57(_65[j+1].canvasy)));
if(!_63){
_63=_56.canvasx;
prevY=_56.canvasy;
}else{
ctx.beginPath();
ctx.moveTo(_63,prevY);
_63=_56.canvasx;
prevY=_56.canvasy;
ctx.lineTo(_63,prevY);
ctx.stroke();
}
if(_64||_66){
ctx.beginPath();
ctx.fillStyle=_60.toRGBString();
ctx.arc(_56.canvasx,_56.canvasy,_62,0,360,false);
ctx.fill();
}
}
}
}
}
};
var _67=function(ctx){
for(var i=0;i<_53;i++){
var _68=_51[i];
var _69=_50[i%_49];
var _70=this.options.strokeColorTransform;
_48.save();
_48.strokeStyle=_69.toRGBString();
_48.lineWidth=this.options.strokeWidth;
var _71=-1;
var _72=[-1,-1];
var _73=0;
var _74=this.layout.yscale;
var _75=_69.colorWithAlpha(0.15);
ctx.fillStyle=_75.toRGBString();
ctx.beginPath();
for(var j=0;j<this.layout.points.length;j++){
var _76=this.layout.points[j];
_73++;
if(_76.name==_68){
if(!_76.y||isNaN(_76.y)){
_71=-1;
return;
}
var _77=[_76.y-_76.errorPlus*_74,_76.y+_76.errorMinus*_74];
_77[0]=this.area.h*_77[0]+this.area.y;
_77[1]=this.area.h*_77[1]+this.area.y;
if(_71>=0){
ctx.moveTo(_71,_72[0]);
ctx.lineTo(_76.canvasx,_77[0]);
ctx.lineTo(_76.canvasx,_77[1]);
ctx.lineTo(_71,_72[1]);
ctx.closePath();
}
_72[0]=_77[0];
_72[1]=_77[1];
_71=_76.canvasx;
}
}
ctx.fill();
}
};
if(_52){
_54(_67,this)(_48);
}
_54(_58,this)(_48);
_48.restore();
};
Dygraph=function(div,_79,_80){
if(arguments.length>0){
if(arguments.length==4){
this.warn("Using deprecated four-argument dygraph constructor");
this.__old_init__(div,_79,arguments[2],arguments[3]);
}else{
this.__init__(div,_79,_80);
}
}
};
Dygraph.NAME="Dygraph";
Dygraph.VERSION="1.2";
Dygraph.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
Dygraph.toString=function(){
return this.__repr__();
};
Dygraph.DEFAULT_ROLL_PERIOD=1;
Dygraph.DEFAULT_WIDTH=480;
Dygraph.DEFAULT_HEIGHT=320;
Dygraph.AXIS_LINE_WIDTH=0.3;
Dygraph.DEFAULT_ATTRS={highlightCircleSize:3,pixelsPerXLabel:60,pixelsPerYLabel:30,labelsDivWidth:250,labelsDivStyles:{},labelsSeparateLines:false,labelsKMB:false,strokeWidth:1,axisTickSize:3,axisLabelFontSize:14,xAxisLabelWidth:50,yAxisLabelWidth:50,rightGap:5,showRoller:false,xValueFormatter:Dygraph.dateString_,xValueParser:Dygraph.dateParser,xTicker:Dygraph.dateTicker,sigma:2,errorBars:false,fractions:false,wilsonInterval:true,customBars:false};
Dygraph.DEBUG=1;
Dygraph.INFO=2;
Dygraph.WARNING=3;
Dygraph.ERROR=3;
Dygraph.prototype.__old_init__=function(div,_81,_82,_83){
if(_82!=null){
var _84=["Date"];
for(var i=0;i<_82.length;i++){
_84.push(_82[i]);
}
MochiKit.Base.update(_83,{"labels":_84});
}
this.__init__(div,_81,_83);
};
Dygraph.prototype.__init__=function(div,_85,_86){
if(_86==null){
_86={};
}
this.maindiv_=div;
this.file_=_85;
this.rollPeriod_=_86.rollPeriod||Dygraph.DEFAULT_ROLL_PERIOD;
this.previousVerticalX_=-1;
this.fractions_=_86.fractions||false;
this.dateWindow_=_86.dateWindow||null;
this.valueRange_=_86.valueRange||null;
this.wilsonInterval_=_86.wilsonInterval||true;
div.innerHTML="";
if(div.style.width==""){
div.style.width=Dygraph.DEFAULT_WIDTH+"px";
}
if(div.style.height==""){
div.style.height=Dygraph.DEFAULT_HEIGHT+"px";
}
this.width_=parseInt(div.style.width,10);
this.height_=parseInt(div.style.height,10);
this.user_attrs_={};
MochiKit.Base.update(this.user_attrs_,_86);
this.attrs_={};
MochiKit.Base.update(this.attrs_,Dygraph.DEFAULT_ATTRS);
this.labelsFromCSV_=(this.attr_("labels")==null);
this.createInterface_();
this.layoutOptions_={"errorBars":(this.attr_("errorBars")||this.attr_("customBars")),"xOriginIsZero":false};
MochiKit.Base.update(this.layoutOptions_,this.attrs_);
MochiKit.Base.update(this.layoutOptions_,this.user_attrs_);
this.layout_=new DygraphLayout(this,this.layoutOptions_);
this.renderOptions_={colorScheme:this.colors_,strokeColor:null,axisLineWidth:Dygraph.AXIS_LINE_WIDTH};
MochiKit.Base.update(this.renderOptions_,this.attrs_);
MochiKit.Base.update(this.renderOptions_,this.user_attrs_);
this.plotter_=new DygraphCanvasRenderer(this,this.hidden_,this.layout_,this.renderOptions_);
this.createStatusMessage_();
this.createRollInterface_();
this.createDragInterface_();
this.start_();
};
Dygraph.prototype.attr_=function(_87){
if(typeof (this.user_attrs_[_87])!="undefined"){
return this.user_attrs_[_87];
}else{
if(typeof (this.attrs_[_87])!="undefined"){
return this.attrs_[_87];
}else{
return null;
}
}
};
Dygraph.prototype.log=function(_88,_89){
if(typeof (console)!="undefined"){
switch(_88){
case Dygraph.DEBUG:
console.debug("dygraphs: "+_89);
break;
case Dygraph.INFO:
console.info("dygraphs: "+_89);
break;
case Dygraph.WARNING:
console.warn("dygraphs: "+_89);
break;
case Dygraph.ERROR:
console.error("dygraphs: "+_89);
break;
}
}
};
Dygraph.prototype.info=function(_90){
this.log(Dygraph.INFO,_90);
};
Dygraph.prototype.warn=function(_91){
this.log(Dygraph.WARNING,_91);
};
Dygraph.prototype.error=function(_92){
this.log(Dygraph.ERROR,_92);
};
Dygraph.prototype.rollPeriod=function(){
return this.rollPeriod_;
};
Dygraph.prototype.createInterface_=function(){
var _93=this.maindiv_;
this.graphDiv=MochiKit.DOM.DIV({style:{"width":this.width_+"px","height":this.height_+"px"}});
appendChildNodes(_93,this.graphDiv);
var _94=MochiKit.DOM.CANVAS;
this.canvas_=_94({style:{"position":"absolute"},width:this.width_,height:this.height_});
appendChildNodes(this.graphDiv,this.canvas_);
this.hidden_=this.createPlotKitCanvas_(this.canvas_);
connect(this.hidden_,"onmousemove",this,function(e){
this.mouseMove_(e);
});
connect(this.hidden_,"onmouseout",this,function(e){
this.mouseOut_(e);
});
};
Dygraph.prototype.createPlotKitCanvas_=function(_96){
var h=document.createElement("canvas");
h.style.position="absolute";
h.style.top=_96.style.top;
h.style.left=_96.style.left;
h.width=this.width_;
h.height=this.height_;
MochiKit.DOM.appendChildNodes(this.graphDiv,h);
return h;
};
Dygraph.prototype.setColors_=function(){
var num=this.attr_("labels").length-1;
this.colors_=[];
var _99=this.attr_("colors");
if(!_99){
var sat=this.attr_("colorSaturation")||1;
var val=this.attr_("colorValue")||0.5;
for(var i=1;i<=num;i++){
var hue=(1*i/(1+num));
this.colors_.push(MochiKit.Color.Color.fromHSV(hue,sat,val));
}
}else{
for(var i=0;i<num;i++){
var _103=_99[i%_99.length];
this.colors_.push(MochiKit.Color.Color.fromString(_103));
}
}
this.renderOptions_.colorScheme=this.colors_;
MochiKit.Base.update(this.plotter_.options,this.renderOptions_);
MochiKit.Base.update(this.layoutOptions_,this.user_attrs_);
MochiKit.Base.update(this.layoutOptions_,this.attrs_);
};
Dygraph.findPosX=function(obj){
var _105=0;
if(obj.offsetParent){
while(obj.offsetParent){
_105+=obj.offsetLeft;
obj=obj.offsetParent;
}
}else{
if(obj.x){
_105+=obj.x;
}
}
return _105;
};
Dygraph.findPosY=function(obj){
var _106=0;
if(obj.offsetParent){
while(obj.offsetParent){
_106+=obj.offsetTop;
obj=obj.offsetParent;
}
}else{
if(obj.y){
_106+=obj.y;
}
}
return _106;
};
Dygraph.prototype.createStatusMessage_=function(){
if(!this.attr_("labelsDiv")){
var _107=this.attr_("labelsDivWidth");
var _108={"style":{"position":"absolute","fontSize":"14px","zIndex":10,"width":_107+"px","top":"0px","left":(this.width_-_107-2)+"px","background":"white","textAlign":"left","overflow":"hidden"}};
MochiKit.Base.update(_108["style"],this.attr_("labelsDivStyles"));
var div=MochiKit.DOM.DIV(_108);
MochiKit.DOM.appendChildNodes(this.graphDiv,div);
this.attrs_.labelsDiv=div;
}
};
Dygraph.prototype.createRollInterface_=function(){
var _109=this.attr_("showRoller")?"block":"none";
var _110={"type":"text","size":"2","value":this.rollPeriod_,"style":{"position":"absolute","zIndex":10,"top":(this.plotter_.area.h-25)+"px","left":(this.plotter_.area.x+1)+"px","display":_109}};
var _111=MochiKit.DOM.INPUT(_110);
var pa=this.graphDiv;
MochiKit.DOM.appendChildNodes(pa,_111);
connect(_111,"onchange",this,function(){
this.adjustRoll(_111.value);
});
return _111;
};
Dygraph.prototype.createDragInterface_=function(){
var self=this;
var _114=false;
var _115=null;
var _116=null;
var _117=null;
var _118=null;
var _119=null;
var px=0;
var py=0;
var getX=function(e){
return e.mouse().page.x-px;
};
var getY=function(e){
return e.mouse().page.y-py;
};
connect(this.hidden_,"onmousemove",function(_124){
if(_114){
_117=getX(_124);
_118=getY(_124);
self.drawZoomRect_(_115,_117,_119);
_119=_117;
}
});
connect(this.hidden_,"onmousedown",function(_125){
_114=true;
px=Dygraph.findPosX(self.canvas_);
py=Dygraph.findPosY(self.canvas_);
_115=getX(_125);
_116=getY(_125);
});
connect(document,"onmouseup",this,function(_126){
if(_114){
_114=false;
_115=null;
_116=null;
}
});
connect(this.hidden_,"onmouseout",this,function(_127){
if(_114){
_117=null;
_118=null;
}
});
connect(this.hidden_,"onmouseup",this,function(_128){
if(_114){
_114=false;
_117=getX(_128);
_118=getY(_128);
var _129=Math.abs(_117-_115);
var _130=Math.abs(_118-_116);
if(_129<2&&_130<2&&self.attr_("clickCallback")!=null&&self.lastx_!=undefined){
self.attr_("clickCallback")(_128,new Date(self.lastx_));
}
if(_129>=10){
self.doZoom_(Math.min(_115,_117),Math.max(_115,_117));
}else{
self.canvas_.getContext("2d").clearRect(0,0,self.canvas_.width,self.canvas_.height);
}
_115=null;
_116=null;
}
});
connect(this.hidden_,"ondblclick",this,function(_131){
self.dateWindow_=null;
self.drawGraph_(self.rawData_);
var _132=self.rawData_[0][0];
var _133=self.rawData_[self.rawData_.length-1][0];
if(self.attr_("zoomCallback")){
self.attr_("zoomCallback")(_132,_133);
}
});
};
Dygraph.prototype.drawZoomRect_=function(_134,endX,_136){
var ctx=this.canvas_.getContext("2d");
if(_136){
ctx.clearRect(Math.min(_134,_136),0,Math.abs(_134-_136),this.height_);
}
if(endX&&_134){
ctx.fillStyle="rgba(128,128,128,0.33)";
ctx.fillRect(Math.min(_134,endX),0,Math.abs(endX-_134),this.height_);
}
};
Dygraph.prototype.doZoom_=function(lowX,_138){
var _139=this.layout_.points;
var _140=null;
var _141=null;
for(var i=0;i<_139.length;i++){
var cx=_139[i].canvasx;
var x=_139[i].xval;
if(cx<lowX&&(_140==null||x>_140)){
_140=x;
}
if(cx>_138&&(_141==null||x<_141)){
_141=x;
}
}
if(_140==null){
_140=_139[0].xval;
}
if(_141==null){
_141=_139[_139.length-1].xval;
}
this.dateWindow_=[_140,_141];
this.drawGraph_(this.rawData_);
if(this.attr_("zoomCallback")){
this.attr_("zoomCallback")(_140,_141);
}
};
Dygraph.prototype.mouseMove_=function(_143){
var _144=_143.mouse().page.x-Dygraph.findPosX(this.hidden_);
var _145=this.layout_.points;
var _146=-1;
var _147=-1;
var _148=1e+100;
var idx=-1;
for(var i=0;i<_145.length;i++){
var dist=Math.abs(_145[i].canvasx-_144);
if(dist>_148){
break;
}
_148=dist;
idx=i;
}
if(idx>=0){
_146=_145[idx].xval;
}
if(_144>_145[_145.length-1].canvasx){
_146=_145[_145.length-1].xval;
}
var _151=[];
for(var i=0;i<_145.length;i++){
if(_145[i].xval==_146){
_151.push(_145[i]);
}
}
var _152=this.attr_("highlightCircleSize");
var ctx=this.canvas_.getContext("2d");
if(this.previousVerticalX_>=0){
var px=this.previousVerticalX_;
ctx.clearRect(px-_152-1,0,2*_152+2,this.height_);
}
var isOK=function(x){
return x&&!isNaN(x);
};
if(_151.length>0){
var _144=_151[0].canvasx;
var _154=this.attr_("xValueFormatter")(_146,this)+":";
var clen=this.colors_.length;
for(var i=0;i<_151.length;i++){
if(!isOK(_151[i].canvasy)){
continue;
}
if(this.attr_("labelsSeparateLines")){
_154+="<br/>";
}
var _156=_151[i];
_154+=" <b><font color='"+this.colors_[i%clen].toHexString()+"'>"+_156.name+"</font></b>:"+this.round_(_156.yval,2);
}
this.attr_("labelsDiv").innerHTML=_154;
this.lastx_=_146;
ctx.save();
for(var i=0;i<_151.length;i++){
if(!isOK(_151[i%clen].canvasy)){
continue;
}
ctx.beginPath();
ctx.fillStyle=this.colors_[i%clen].toRGBString();
ctx.arc(_144,_151[i%clen].canvasy,_152,0,360,false);
ctx.fill();
}
ctx.restore();
this.previousVerticalX_=_144;
}
};
Dygraph.prototype.mouseOut_=function(_157){
var ctx=this.canvas_.getContext("2d");
ctx.clearRect(0,0,this.width_,this.height_);
this.attr_("labelsDiv").innerHTML="";
};
Dygraph.zeropad=function(x){
if(x<10){
return "0"+x;
}else{
return ""+x;
}
};
Dygraph.prototype.hmsString_=function(date){
var _159=Dygraph.zeropad;
var d=new Date(date);
if(d.getSeconds()){
return _159(d.getHours())+":"+_159(d.getMinutes())+":"+_159(d.getSeconds());
}else{
if(d.getMinutes()){
return _159(d.getHours())+":"+_159(d.getMinutes());
}else{
return _159(d.getHours());
}
}
};
Dygraph.dateString_=function(date,self){
var _161=Dygraph.zeropad;
var d=new Date(date);
var year=""+d.getFullYear();
var _163=_161(d.getMonth()+1);
var day=_161(d.getDate());
var ret="";
var frac=d.getHours()*3600+d.getMinutes()*60+d.getSeconds();
if(frac){
ret=" "+self.hmsString_(date);
}
return year+"/"+_163+"/"+day+ret;
};
Dygraph.prototype.round_=function(num,_167){
var _168=Math.pow(10,_167);
return Math.round(num*_168)/_168;
};
Dygraph.prototype.loadedEvent_=function(data){
this.rawData_=this.parseCSV_(data);
this.drawGraph_(this.rawData_);
};
Dygraph.prototype.months=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
Dygraph.prototype.quarters=["Jan","Apr","Jul","Oct"];
Dygraph.prototype.addXTicks_=function(){
var _170,endDate;
if(this.dateWindow_){
_170=this.dateWindow_[0];
endDate=this.dateWindow_[1];
}else{
_170=this.rawData_[0][0];
endDate=this.rawData_[this.rawData_.length-1][0];
}
var _171=this.attr_("xTicker")(_170,endDate,this);
this.layout_.updateOptions({xTicks:_171});
};
Dygraph.SECONDLY=0;
Dygraph.TEN_SECONDLY=1;
Dygraph.THIRTY_SECONDLY=2;
Dygraph.MINUTELY=3;
Dygraph.TEN_MINUTELY=4;
Dygraph.THIRTY_MINUTELY=5;
Dygraph.HOURLY=6;
Dygraph.SIX_HOURLY=7;
Dygraph.DAILY=8;
Dygraph.WEEKLY=9;
Dygraph.MONTHLY=10;
Dygraph.QUARTERLY=11;
Dygraph.BIANNUAL=12;
Dygraph.ANNUAL=13;
Dygraph.DECADAL=14;
Dygraph.NUM_GRANULARITIES=15;
Dygraph.SHORT_SPACINGS=[];
Dygraph.SHORT_SPACINGS[Dygraph.SECONDLY]=1000*1;
Dygraph.SHORT_SPACINGS[Dygraph.TEN_SECONDLY]=1000*10;
Dygraph.SHORT_SPACINGS[Dygraph.THIRTY_SECONDLY]=1000*30;
Dygraph.SHORT_SPACINGS[Dygraph.MINUTELY]=1000*60;
Dygraph.SHORT_SPACINGS[Dygraph.TEN_MINUTELY]=1000*60*10;
Dygraph.SHORT_SPACINGS[Dygraph.THIRTY_MINUTELY]=1000*60*30;
Dygraph.SHORT_SPACINGS[Dygraph.HOURLY]=1000*3600;
Dygraph.SHORT_SPACINGS[Dygraph.HOURLY]=1000*3600*6;
Dygraph.SHORT_SPACINGS[Dygraph.DAILY]=1000*86400;
Dygraph.SHORT_SPACINGS[Dygraph.WEEKLY]=1000*604800;
Dygraph.prototype.NumXTicks=function(_172,_173,_174){
if(_174<Dygraph.MONTHLY){
var _175=Dygraph.SHORT_SPACINGS[_174];
return Math.floor(0.5+1*(_173-_172)/_175);
}else{
var _176=1;
var _177=12;
if(_174==Dygraph.QUARTERLY){
_177=3;
}
if(_174==Dygraph.BIANNUAL){
_177=2;
}
if(_174==Dygraph.ANNUAL){
_177=1;
}
if(_174==Dygraph.DECADAL){
_177=1;
_176=10;
}
var _178=365.2524*24*3600*1000;
var _179=1*(_173-_172)/_178;
return Math.floor(0.5+1*_179*_177/_176);
}
};
Dygraph.prototype.GetXAxis=function(_180,_181,_182){
var _183=[];
if(_182<Dygraph.MONTHLY){
var _184=Dygraph.SHORT_SPACINGS[_182];
var _185="%d%b";
if(_182<Dygraph.HOURLY){
_180=_184*Math.floor(0.5+_180/_184);
}
for(var t=_180;t<=_181;t+=_184){
var d=new Date(t);
var frac=d.getHours()*3600+d.getMinutes()*60+d.getSeconds();
if(frac==0||_182>=Dygraph.DAILY){
_183.push({v:t,label:new Date(t+3600*1000).strftime(_185)});
}else{
_183.push({v:t,label:this.hmsString_(t)});
}
}
}else{
var _187;
var _188=1;
if(_182==Dygraph.MONTHLY){
_187=[0,1,2,3,4,5,6,7,8,9,10,11,12];
}else{
if(_182==Dygraph.QUARTERLY){
_187=[0,3,6,9];
}else{
if(_182==Dygraph.BIANNUAL){
_187=[0,6];
}else{
if(_182==Dygraph.ANNUAL){
_187=[0];
}else{
if(_182==Dygraph.DECADAL){
_187=[0];
_188=10;
}
}
}
}
}
var _189=new Date(_180).getFullYear();
var _190=new Date(_181).getFullYear();
var _191=Dygraph.zeropad;
for(var i=_189;i<=_190;i++){
if(i%_188!=0){
continue;
}
for(var j=0;j<_187.length;j++){
var _192=i+"/"+_191(1+_187[j])+"/01";
var t=Date.parse(_192);
if(t<_180||t>_181){
continue;
}
_183.push({v:t,label:new Date(t).strftime("%b %y")});
}
}
}
return _183;
};
Dygraph.dateTicker=function(_193,_194,self){
var _195=-1;
for(var i=0;i<Dygraph.NUM_GRANULARITIES;i++){
var _196=self.NumXTicks(_193,_194,i);
if(self.width_/_196>=self.attr_("pixelsPerXLabel")){
_195=i;
break;
}
}
if(_195>=0){
return self.GetXAxis(_193,_194,_195);
}else{
}
};
Dygraph.numericTicks=function(minV,maxV,self){
var _199=[1,2,5];
var _200,low_val,high_val,nTicks;
var _201=self.attr_("pixelsPerYLabel");
for(var i=-10;i<50;i++){
var _202=Math.pow(10,i);
for(var j=0;j<_199.length;j++){
_200=_202*_199[j];
low_val=Math.floor(minV/_200)*_200;
high_val=Math.ceil(maxV/_200)*_200;
nTicks=(high_val-low_val)/_200;
var _203=self.height_/nTicks;
if(_203>_201){
break;
}
}
if(_203>_201){
break;
}
}
var _204=[];
for(var i=0;i<nTicks;i++){
var _205=low_val+i*_200;
var _206=self.round_(_205,2);
if(self.attr_("labelsKMB")){
var k=1000;
if(_205>=k*k*k){
_206=self.round_(_205/(k*k*k),1)+"B";
}else{
if(_205>=k*k){
_206=self.round_(_205/(k*k),1)+"M";
}else{
if(_205>=k){
_206=self.round_(_205/k,1)+"K";
}
}
}
}
_204.push({label:_206,v:_205});
}
return _204;
};
Dygraph.prototype.addYTicks_=function(minY,maxY){
var _210=Dygraph.numericTicks(minY,maxY,this);
this.layout_.updateOptions({yAxis:[minY,maxY],yTicks:_210});
};
Dygraph.prototype.extremeValues_=function(_211){
var minY=null,maxY=null;
var bars=this.attr_("errorBars")||this.attr_("customBars");
if(bars){
for(var j=0;j<_211.length;j++){
var y=_211[j][1][0];
if(!y){
continue;
}
var low=y-_211[j][1][1];
var high=y+_211[j][1][2];
if(low>y){
low=y;
}
if(high<y){
high=y;
}
if(maxY==null||high>maxY){
maxY=high;
}
if(minY==null||low<minY){
minY=low;
}
}
}else{
for(var j=0;j<_211.length;j++){
var y=_211[j][1];
if(!y){
continue;
}
if(maxY==null||y>maxY){
maxY=y;
}
if(minY==null||y<minY){
minY=y;
}
}
}
return [minY,maxY];
};
Dygraph.prototype.drawGraph_=function(data){
var minY=null,maxY=null;
this.layout_.removeAllDatasets();
this.setColors_();
this.attrs_["pointSize"]=0.5*this.attr_("highlightCircleSize");
for(var i=1;i<data[0].length;i++){
var _215=[];
for(var j=0;j<data.length;j++){
var date=data[j][0];
_215[j]=[date,data[j][i]];
}
_215=this.rollingAverage(_215,this.rollPeriod_);
var bars=this.attr_("errorBars")||this.attr_("customBars");
if(this.dateWindow_){
var low=this.dateWindow_[0];
var high=this.dateWindow_[1];
var _216=[];
for(var k=0;k<_215.length;k++){
if(_215[k][0]>=low&&_215[k][0]<=high){
_216.push(_215[k]);
}
}
_215=_216;
}
var _217=this.extremeValues_(_215);
var _218=_217[0];
var _219=_217[1];
if(!minY||_218<minY){
minY=_218;
}
if(!maxY||_219>maxY){
maxY=_219;
}
if(bars){
var vals=[];
for(var j=0;j<_215.length;j++){
vals[j]=[_215[j][0],_215[j][1][0],_215[j][1][1],_215[j][1][2]];
}
this.layout_.addDataset(this.attr_("labels")[i],vals);
}else{
this.layout_.addDataset(this.attr_("labels")[i],_215);
}
}
if(this.valueRange_!=null){
this.addYTicks_(this.valueRange_[0],this.valueRange_[1]);
}else{
var span=maxY-minY;
var _222=maxY+0.1*span;
var _223=minY-0.1*span;
if(_223<0&&minY>=0){
_223=0;
}
if(_222>0&&maxY<=0){
_222=0;
}
if(this.attr_("includeZero")){
if(maxY<0){
_222=0;
}
if(minY>0){
_223=0;
}
}
this.addYTicks_(_223,_222);
}
this.addXTicks_();
this.layout_.evaluateWithError();
this.plotter_.clear();
this.plotter_.render();
this.canvas_.getContext("2d").clearRect(0,0,this.canvas_.width,this.canvas_.height);
};
Dygraph.prototype.rollingAverage=function(_224,_225){
if(_224.length<2){
return _224;
}
var _225=Math.min(_225,_224.length-1);
var _226=[];
var _227=this.attr_("sigma");
if(this.fractions_){
var num=0;
var den=0;
var mult=100;
for(var i=0;i<_224.length;i++){
num+=_224[i][1][0];
den+=_224[i][1][1];
if(i-_225>=0){
num-=_224[i-_225][1][0];
den-=_224[i-_225][1][1];
}
var date=_224[i][0];
var _230=den?num/den:0;
if(this.attr_("errorBars")){
if(this.wilsonInterval_){
if(den){
var p=_230<0?0:_230,n=den;
var pm=_227*Math.sqrt(p*(1-p)/n+_227*_227/(4*n*n));
var _233=1+_227*_227/den;
var low=(p+_227*_227/(2*den)-pm)/_233;
var high=(p+_227*_227/(2*den)+pm)/_233;
_226[i]=[date,[p*mult,(p-low)*mult,(high-p)*mult]];
}else{
_226[i]=[date,[0,0,0]];
}
}else{
var _234=den?_227*Math.sqrt(_230*(1-_230)/den):1;
_226[i]=[date,[mult*_230,mult*_234,mult*_234]];
}
}else{
_226[i]=[date,mult*_230];
}
}
}else{
if(this.attr_("customBars")){
var low=0;
var mid=0;
var high=0;
var _236=0;
for(var i=0;i<_224.length;i++){
var data=_224[i][1];
var y=data[1];
_226[i]=[_224[i][0],[y,y-data[0],data[2]-y]];
low+=data[0];
mid+=y;
high+=data[2];
_236+=1;
if(i-_225>=0){
var prev=_224[i-_225];
low-=prev[1][0];
mid-=prev[1][1];
high-=prev[1][2];
_236-=1;
}
_226[i]=[_224[i][0],[1*mid/_236,1*(mid-low)/_236,1*(high-mid)/_236]];
}
}else{
var _238=Math.min(_225-1,_224.length-2);
if(!this.attr_("errorBars")){
if(_225==1){
return _224;
}
for(var i=0;i<_224.length;i++){
var sum=0;
var _240=0;
for(var j=Math.max(0,i-_225+1);j<i+1;j++){
var y=_224[j][1];
if(!y||isNaN(y)){
continue;
}
_240++;
sum+=_224[j][1];
}
if(_240){
_226[i]=[_224[i][0],sum/_240];
}else{
_226[i]=[_224[i][0],null];
}
}
}else{
for(var i=0;i<_224.length;i++){
var sum=0;
var _241=0;
var _240=0;
for(var j=Math.max(0,i-_225+1);j<i+1;j++){
var y=_224[j][1][0];
if(!y||isNaN(y)){
continue;
}
_240++;
sum+=_224[j][1][0];
_241+=Math.pow(_224[j][1][1],2);
}
if(_240){
var _234=Math.sqrt(_241)/_240;
_226[i]=[_224[i][0],[sum/_240,_227*_234,_227*_234]];
}else{
_226[i]=[_224[i][0],[null,null,null]];
}
}
}
}
}
return _226;
};
Dygraph.dateParser=function(_242,self){
var _243;
var d;
if(_242.length==10&&_242.search("-")!=-1){
_243=_242.replace("-","/","g");
while(_243.search("-")!=-1){
_243=_243.replace("-","/");
}
d=Date.parse(_243);
}else{
if(_242.length==8){
_243=_242.substr(0,4)+"/"+_242.substr(4,2)+"/"+_242.substr(6,2);
d=Date.parse(_243);
}else{
d=Date.parse(_242);
}
}
if(!d||isNaN(d)){
self.error("Couldn't parse "+_242+" as a date");
}
return d;
};
Dygraph.prototype.detectTypeFromString_=function(str){
var _245=false;
if(str.indexOf("-")>=0||str.indexOf("/")>=0||isNaN(parseFloat(str))){
_245=true;
}else{
if(str.length==8&&str>"19700101"&&str<"20371231"){
_245=true;
}
}
if(_245){
this.attrs_.xValueFormatter=Dygraph.dateString_;
this.attrs_.xValueParser=Dygraph.dateParser;
this.attrs_.xTicker=Dygraph.dateTicker;
}else{
this.attrs_.xValueFormatter=function(x){
return x;
};
this.attrs_.xValueParser=function(x){
return parseFloat(x);
};
this.attrs_.xTicker=Dygraph.numericTicks;
}
};
Dygraph.prototype.parseCSV_=function(data){
var ret=[];
var _246=data.split("\n");
var _247=0;
if(this.labelsFromCSV_){
_247=1;
this.attrs_.labels=_246[0].split(",");
}
var _248;
var _249=false;
var _250=this.attr_("labels").length;
for(var i=_247;i<_246.length;i++){
var line=_246[i];
if(line.length==0){
continue;
}
var _252=line.split(",");
if(_252.length<2){
continue;
}
var _253=[];
if(!_249){
this.detectTypeFromString_(_252[0]);
_248=this.attr_("xValueParser");
_249=true;
}
_253[0]=_248(_252[0],this);
if(this.fractions_){
for(var j=1;j<_252.length;j++){
var vals=_252[j].split("/");
_253[j]=[parseFloat(vals[0]),parseFloat(vals[1])];
}
}else{
if(this.attr_("errorBars")){
for(var j=1;j<_252.length;j+=2){
_253[(j+1)/2]=[parseFloat(_252[j]),parseFloat(_252[j+1])];
}
}else{
if(this.attr_("customBars")){
for(var j=1;j<_252.length;j++){
var vals=_252[j].split(";");
_253[j]=[parseFloat(vals[0]),parseFloat(vals[1]),parseFloat(vals[2])];
}
}else{
for(var j=1;j<_252.length;j++){
_253[j]=parseFloat(_252[j]);
}
}
}
}
ret.push(_253);
if(_253.length!=_250){
this.error("Number of columns in line "+i+" ("+_253.length+") does not agree with number of labels ("+_250+") "+line);
}
}
return ret;
};
Dygraph.prototype.parseArray_=function(data){
if(data.length==0){
this.error("Can't plot empty data set");
return null;
}
if(data[0].length==0){
this.error("Data set cannot contain an empty row");
return null;
}
if(this.attr_("labels")==null){
this.warn("Using default labels. Set labels explicitly via 'labels' "+"in the options parameter");
this.attrs_.labels=["X"];
for(var i=1;i<data[0].length;i++){
this.attrs_.labels.push("Y"+i);
}
}
if(MochiKit.Base.isDateLike(data[0][0])){
this.attrs_.xValueFormatter=Dygraph.dateString_;
this.attrs_.xTicker=Dygraph.dateTicker;
var _254=MochiKit.Base.clone(data);
for(var i=0;i<data.length;i++){
if(_254[i].length==0){
this.error("Row "<<(1+i)<<" of data is empty");
return null;
}
if(_254[i][0]==null||typeof (_254[i][0].getTime)!="function"){
this.error("x value in row "<<(1+i)<<" is not a Date");
return null;
}
_254[i][0]=_254[i][0].getTime();
}
return _254;
}else{
this.attrs_.xValueFormatter=function(x){
return x;
};
this.attrs_.xTicker=Dygraph.numericTicks;
return data;
}
};
Dygraph.prototype.parseDataTable_=function(data){
var cols=data.getNumberOfColumns();
var rows=data.getNumberOfRows();
var _257=[];
for(var i=0;i<cols;i++){
_257.push(data.getColumnLabel(i));
}
this.attrs_.labels=_257;
var _258=data.getColumnType(0);
if(_258=="date"){
this.attrs_.xValueFormatter=Dygraph.dateString_;
this.attrs_.xValueParser=Dygraph.dateParser;
this.attrs_.xTicker=Dygraph.dateTicker;
}else{
if(_258=="number"){
this.attrs_.xValueFormatter=function(x){
return x;
};
this.attrs_.xValueParser=function(x){
return parseFloat(x);
};
this.attrs_.xTicker=Dygraph.numericTicks;
}else{
this.error("only 'date' and 'number' types are supported for column 1 "+"of DataTable input (Got '"+_258+"')");
return null;
}
}
var ret=[];
for(var i=0;i<rows;i++){
var row=[];
if(!data.getValue(i,0)){
continue;
}
if(_258=="date"){
row.push(data.getValue(i,0).getTime());
}else{
row.push(data.getValue(i,0));
}
for(var j=1;j<cols;j++){
row.push(data.getValue(i,j));
}
ret.push(row);
}
return ret;
};
Dygraph.prototype.start_=function(){
if(typeof this.file_=="function"){
this.loadedEvent_(this.file_());
}else{
if(MochiKit.Base.isArrayLike(this.file_)){
this.rawData_=this.parseArray_(this.file_);
this.drawGraph_(this.rawData_);
}else{
if(typeof this.file_=="object"&&typeof this.file_.getColumnRange=="function"){
this.rawData_=this.parseDataTable_(this.file_);
this.drawGraph_(this.rawData_);
}else{
if(typeof this.file_=="string"){
if(this.file_.indexOf("\n")>=0){
this.loadedEvent_(this.file_);
}else{
var req=new XMLHttpRequest();
var _261=this;
req.onreadystatechange=function(){
if(req.readyState==4){
if(req.status==200){
_261.loadedEvent_(req.responseText);
}
}
};
req.open("GET",this.file_,true);
req.send(null);
}
}else{
this.error("Unknown data format: "+(typeof this.file_));
}
}
}
}
};
Dygraph.prototype.updateOptions=function(_262){
if(_262.rollPeriod){
this.rollPeriod_=_262.rollPeriod;
}
if(_262.dateWindow){
this.dateWindow_=_262.dateWindow;
}
if(_262.valueRange){
this.valueRange_=_262.valueRange;
}
MochiKit.Base.update(this.user_attrs_,_262);
this.labelsFromCSV_=(this.attr_("labels")==null);
this.layout_.updateOptions({"errorBars":this.attr_("errorBars")});
if(_262["file"]&&_262["file"]!=this.file_){
this.file_=_262["file"];
this.start_();
}else{
this.drawGraph_(this.rawData_);
}
};
Dygraph.prototype.adjustRoll=function(_263){
this.rollPeriod_=_263;
this.drawGraph_(this.rawData_);
};
Dygraph.GVizChart=function(_264){
this.container=_264;
};
Dygraph.GVizChart.prototype.draw=function(data,_265){
this.container.innerHTML="";
this.date_graph=new Dygraph(this.container,data,_265);
};
DateGraph=Dygraph;

